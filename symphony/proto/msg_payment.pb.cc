// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symphony/proto/msg_payment.proto

#include "symphony/proto/msg_payment.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace symphony {
namespace proto {
PROTOBUF_CONSTEXPR CreatePaymentReq::CreatePaymentReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orderid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.platform_)*/0
  , /*decltype(_impl_.channel_)*/0
  , /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.accountid_)*/uint64_t{0u}
  , /*decltype(_impl_.serverid_)*/0
  , /*decltype(_impl_.productid_)*/0
  , /*decltype(_impl_.buyid_)*/0
  , /*decltype(_impl_.proxyid_)*/0
  , /*decltype(_impl_.clientid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreatePaymentReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePaymentReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePaymentReqDefaultTypeInternal() {}
  union {
    CreatePaymentReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePaymentReqDefaultTypeInternal _CreatePaymentReq_default_instance_;
PROTOBUF_CONSTEXPR CreatePaymentAck::CreatePaymentAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orderid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreatePaymentAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreatePaymentAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreatePaymentAckDefaultTypeInternal() {}
  union {
    CreatePaymentAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreatePaymentAckDefaultTypeInternal _CreatePaymentAck_default_instance_;
}  // namespace proto
}  // namespace symphony
static ::_pb::Metadata file_level_metadata_symphony_2fproto_2fmsg_5fpayment_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_symphony_2fproto_2fmsg_5fpayment_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_symphony_2fproto_2fmsg_5fpayment_2eproto = nullptr;

const uint32_t TableStruct_symphony_2fproto_2fmsg_5fpayment_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.orderid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.platform_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.channel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.serverid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.accountid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.productid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.buyid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.proxyid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentReq, _impl_.clientid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentAck, _impl_.retcode_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CreatePaymentAck, _impl_.orderid_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::symphony::proto::CreatePaymentReq)},
  { 16, -1, -1, sizeof(::symphony::proto::CreatePaymentAck)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::symphony::proto::_CreatePaymentReq_default_instance_._instance,
  &::symphony::proto::_CreatePaymentAck_default_instance_._instance,
};

const char descriptor_table_protodef_symphony_2fproto_2fmsg_5fpayment_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n symphony/proto/msg_payment.proto\022\016symp"
  "hony.proto\"\300\001\n\020CreatePaymentReq\022\017\n\007Order"
  "ID\030\001 \001(\t\022\020\n\010Platform\030\002 \001(\005\022\017\n\007Channel\030\003 "
  "\001(\005\022\016\n\006RoleID\030\004 \001(\004\022\020\n\010ServerID\030\005 \001(\005\022\021\n"
  "\tAccountID\030\006 \001(\004\022\021\n\tProductID\030\007 \001(\005\022\r\n\005B"
  "uyID\030\010 \001(\005\022\017\n\007ProxyID\030\t \001(\005\022\020\n\010ClientID\030"
  "\n \001(\005\"4\n\020CreatePaymentAck\022\017\n\007RetCode\030\001 \001"
  "(\r\022\017\n\007OrderID\030\002 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto = {
    false, false, 307, descriptor_table_protodef_symphony_2fproto_2fmsg_5fpayment_2eproto,
    "symphony/proto/msg_payment.proto",
    &descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_symphony_2fproto_2fmsg_5fpayment_2eproto::offsets,
    file_level_metadata_symphony_2fproto_2fmsg_5fpayment_2eproto, file_level_enum_descriptors_symphony_2fproto_2fmsg_5fpayment_2eproto,
    file_level_service_descriptors_symphony_2fproto_2fmsg_5fpayment_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_getter() {
  return &descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_symphony_2fproto_2fmsg_5fpayment_2eproto(&descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto);
namespace symphony {
namespace proto {

// ===================================================================

class CreatePaymentReq::_Internal {
 public:
};

CreatePaymentReq::CreatePaymentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.CreatePaymentReq)
}
CreatePaymentReq::CreatePaymentReq(const CreatePaymentReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreatePaymentReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orderid_){}
    , decltype(_impl_.platform_){}
    , decltype(_impl_.channel_){}
    , decltype(_impl_.roleid_){}
    , decltype(_impl_.accountid_){}
    , decltype(_impl_.serverid_){}
    , decltype(_impl_.productid_){}
    , decltype(_impl_.buyid_){}
    , decltype(_impl_.proxyid_){}
    , decltype(_impl_.clientid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.orderid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.orderid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orderid().empty()) {
    _this->_impl_.orderid_.Set(from._internal_orderid(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.platform_, &from._impl_.platform_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.clientid_) -
    reinterpret_cast<char*>(&_impl_.platform_)) + sizeof(_impl_.clientid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.CreatePaymentReq)
}

inline void CreatePaymentReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orderid_){}
    , decltype(_impl_.platform_){0}
    , decltype(_impl_.channel_){0}
    , decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.accountid_){uint64_t{0u}}
    , decltype(_impl_.serverid_){0}
    , decltype(_impl_.productid_){0}
    , decltype(_impl_.buyid_){0}
    , decltype(_impl_.proxyid_){0}
    , decltype(_impl_.clientid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.orderid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.orderid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreatePaymentReq::~CreatePaymentReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.CreatePaymentReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreatePaymentReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orderid_.Destroy();
}

void CreatePaymentReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreatePaymentReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.CreatePaymentReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orderid_.ClearToEmpty();
  ::memset(&_impl_.platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.clientid_) -
      reinterpret_cast<char*>(&_impl_.platform_)) + sizeof(_impl_.clientid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePaymentReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string OrderID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_orderid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.CreatePaymentReq.OrderID"));
        } else
          goto handle_unusual;
        continue;
      // int32 Platform = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.platform_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Channel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoleID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ServerID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.serverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 AccountID = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ProductID = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.productid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 BuyID = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.buyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ProxyID = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.proxyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ClientID = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.clientid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreatePaymentReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.CreatePaymentReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string OrderID = 1;
  if (!this->_internal_orderid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_orderid().data(), static_cast<int>(this->_internal_orderid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.CreatePaymentReq.OrderID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_orderid(), target);
  }

  // int32 Platform = 2;
  if (this->_internal_platform() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_platform(), target);
  }

  // int32 Channel = 3;
  if (this->_internal_channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_channel(), target);
  }

  // uint64 RoleID = 4;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(4, this->_internal_roleid(), target);
  }

  // int32 ServerID = 5;
  if (this->_internal_serverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_serverid(), target);
  }

  // uint64 AccountID = 6;
  if (this->_internal_accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(6, this->_internal_accountid(), target);
  }

  // int32 ProductID = 7;
  if (this->_internal_productid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_productid(), target);
  }

  // int32 BuyID = 8;
  if (this->_internal_buyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_buyid(), target);
  }

  // int32 ProxyID = 9;
  if (this->_internal_proxyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_proxyid(), target);
  }

  // int32 ClientID = 10;
  if (this->_internal_clientid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_clientid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.CreatePaymentReq)
  return target;
}

size_t CreatePaymentReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.CreatePaymentReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string OrderID = 1;
  if (!this->_internal_orderid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_orderid());
  }

  // int32 Platform = 2;
  if (this->_internal_platform() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_platform());
  }

  // int32 Channel = 3;
  if (this->_internal_channel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_channel());
  }

  // uint64 RoleID = 4;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint64 AccountID = 6;
  if (this->_internal_accountid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_accountid());
  }

  // int32 ServerID = 5;
  if (this->_internal_serverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_serverid());
  }

  // int32 ProductID = 7;
  if (this->_internal_productid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_productid());
  }

  // int32 BuyID = 8;
  if (this->_internal_buyid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_buyid());
  }

  // int32 ProxyID = 9;
  if (this->_internal_proxyid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_proxyid());
  }

  // int32 ClientID = 10;
  if (this->_internal_clientid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_clientid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePaymentReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreatePaymentReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePaymentReq::GetClassData() const { return &_class_data_; }


void CreatePaymentReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreatePaymentReq*>(&to_msg);
  auto& from = static_cast<const CreatePaymentReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.CreatePaymentReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orderid().empty()) {
    _this->_internal_set_orderid(from._internal_orderid());
  }
  if (from._internal_platform() != 0) {
    _this->_internal_set_platform(from._internal_platform());
  }
  if (from._internal_channel() != 0) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_accountid() != 0) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (from._internal_serverid() != 0) {
    _this->_internal_set_serverid(from._internal_serverid());
  }
  if (from._internal_productid() != 0) {
    _this->_internal_set_productid(from._internal_productid());
  }
  if (from._internal_buyid() != 0) {
    _this->_internal_set_buyid(from._internal_buyid());
  }
  if (from._internal_proxyid() != 0) {
    _this->_internal_set_proxyid(from._internal_proxyid());
  }
  if (from._internal_clientid() != 0) {
    _this->_internal_set_clientid(from._internal_clientid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePaymentReq::CopyFrom(const CreatePaymentReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.CreatePaymentReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePaymentReq::IsInitialized() const {
  return true;
}

void CreatePaymentReq::InternalSwap(CreatePaymentReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.orderid_, lhs_arena,
      &other->_impl_.orderid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreatePaymentReq, _impl_.clientid_)
      + sizeof(CreatePaymentReq::_impl_.clientid_)
      - PROTOBUF_FIELD_OFFSET(CreatePaymentReq, _impl_.platform_)>(
          reinterpret_cast<char*>(&_impl_.platform_),
          reinterpret_cast<char*>(&other->_impl_.platform_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePaymentReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fpayment_2eproto[0]);
}

// ===================================================================

class CreatePaymentAck::_Internal {
 public:
};

CreatePaymentAck::CreatePaymentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.CreatePaymentAck)
}
CreatePaymentAck::CreatePaymentAck(const CreatePaymentAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreatePaymentAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orderid_){}
    , decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.orderid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.orderid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orderid().empty()) {
    _this->_impl_.orderid_.Set(from._internal_orderid(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.retcode_ = from._impl_.retcode_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.CreatePaymentAck)
}

inline void CreatePaymentAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orderid_){}
    , decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.orderid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.orderid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreatePaymentAck::~CreatePaymentAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.CreatePaymentAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreatePaymentAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orderid_.Destroy();
}

void CreatePaymentAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreatePaymentAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.CreatePaymentAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orderid_.ClearToEmpty();
  _impl_.retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreatePaymentAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string OrderID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_orderid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.CreatePaymentAck.OrderID"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreatePaymentAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.CreatePaymentAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // string OrderID = 2;
  if (!this->_internal_orderid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_orderid().data(), static_cast<int>(this->_internal_orderid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.CreatePaymentAck.OrderID");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_orderid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.CreatePaymentAck)
  return target;
}

size_t CreatePaymentAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.CreatePaymentAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string OrderID = 2;
  if (!this->_internal_orderid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_orderid());
  }

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreatePaymentAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreatePaymentAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreatePaymentAck::GetClassData() const { return &_class_data_; }


void CreatePaymentAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreatePaymentAck*>(&to_msg);
  auto& from = static_cast<const CreatePaymentAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.CreatePaymentAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orderid().empty()) {
    _this->_internal_set_orderid(from._internal_orderid());
  }
  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreatePaymentAck::CopyFrom(const CreatePaymentAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.CreatePaymentAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePaymentAck::IsInitialized() const {
  return true;
}

void CreatePaymentAck::InternalSwap(CreatePaymentAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.orderid_, lhs_arena,
      &other->_impl_.orderid_, rhs_arena
  );
  swap(_impl_.retcode_, other->_impl_.retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreatePaymentAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fpayment_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace symphony
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::symphony::proto::CreatePaymentReq*
Arena::CreateMaybeMessage< ::symphony::proto::CreatePaymentReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::CreatePaymentReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::CreatePaymentAck*
Arena::CreateMaybeMessage< ::symphony::proto::CreatePaymentAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::CreatePaymentAck >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
