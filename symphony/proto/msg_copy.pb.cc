// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symphony/proto/msg_copy.proto

#include "symphony/proto/msg_copy.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace symphony {
namespace proto {
PROTOBUF_CONSTEXPR ResultObject::ResultObject(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.objectid_)*/uint64_t{0u}
  , /*decltype(_impl_.actorid_)*/0
  , /*decltype(_impl_.objecttype_)*/0
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.kill_)*/0
  , /*decltype(_impl_.death_)*/0
  , /*decltype(_impl_.heal_)*/0
  , /*decltype(_impl_.damage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResultObjectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultObjectDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultObjectDefaultTypeInternal() {}
  union {
    ResultObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultObjectDefaultTypeInternal _ResultObject_default_instance_;
PROTOBUF_CONSTEXPR ResultPlayer::ResultPlayer(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.objectid_)*/uint64_t{0u}
  , /*decltype(_impl_.actorid_)*/0
  , /*decltype(_impl_.objecttype_)*/0
  , /*decltype(_impl_.result_)*/0
  , /*decltype(_impl_.kill_)*/0
  , /*decltype(_impl_.death_)*/0
  , /*decltype(_impl_.heal_)*/0
  , /*decltype(_impl_.damage_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResultPlayerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultPlayerDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultPlayerDefaultTypeInternal() {}
  union {
    ResultPlayer _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultPlayerDefaultTypeInternal _ResultPlayer_default_instance_;
PROTOBUF_CONSTEXPR BattleResultNty::BattleResultNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.playerlist_)*/{}
  , /*decltype(_impl_.objectlist_)*/{}
  , /*decltype(_impl_.serverid_)*/0
  , /*decltype(_impl_.copyguid_)*/0u
  , /*decltype(_impl_.copyid_)*/0
  , /*decltype(_impl_.copytype_)*/0
  , /*decltype(_impl_.lasttime_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BattleResultNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BattleResultNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BattleResultNtyDefaultTypeInternal() {}
  union {
    BattleResultNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BattleResultNtyDefaultTypeInternal _BattleResultNty_default_instance_;
PROTOBUF_CONSTEXPR MainCopyReq::MainCopyReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.copyid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MainCopyReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MainCopyReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MainCopyReqDefaultTypeInternal() {}
  union {
    MainCopyReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MainCopyReqDefaultTypeInternal _MainCopyReq_default_instance_;
PROTOBUF_CONSTEXPR MainCopyAck::MainCopyAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MainCopyAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MainCopyAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MainCopyAckDefaultTypeInternal() {}
  union {
    MainCopyAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MainCopyAckDefaultTypeInternal _MainCopyAck_default_instance_;
PROTOBUF_CONSTEXPR MainCopyResultNty::MainCopyResultNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.itemlist_)*/{}
  , /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.copyid_)*/0
  , /*decltype(_impl_.copyresult_)*/0
  , /*decltype(_impl_.lasttime_)*/uint64_t{0u}
  , /*decltype(_impl_.starnum_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MainCopyResultNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MainCopyResultNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MainCopyResultNtyDefaultTypeInternal() {}
  union {
    MainCopyResultNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MainCopyResultNtyDefaultTypeInternal _MainCopyResultNty_default_instance_;
PROTOBUF_CONSTEXPR Msg_CreateRoomReq::Msg_CreateRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.copyid_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_CreateRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_CreateRoomReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_CreateRoomReqDefaultTypeInternal() {}
  union {
    Msg_CreateRoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_CreateRoomReqDefaultTypeInternal _Msg_CreateRoomReq_default_instance_;
PROTOBUF_CONSTEXPR Msg_CreateRoomAck::Msg_CreateRoomAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roomid_)*/uint64_t{0u}
  , /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_CreateRoomAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_CreateRoomAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_CreateRoomAckDefaultTypeInternal() {}
  union {
    Msg_CreateRoomAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_CreateRoomAckDefaultTypeInternal _Msg_CreateRoomAck_default_instance_;
PROTOBUF_CONSTEXPR Msg_JoinRoomReq::Msg_JoinRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.roomid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_JoinRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_JoinRoomReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_JoinRoomReqDefaultTypeInternal() {}
  union {
    Msg_JoinRoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_JoinRoomReqDefaultTypeInternal _Msg_JoinRoomReq_default_instance_;
PROTOBUF_CONSTEXPR Msg_JoinRoomAck::Msg_JoinRoomAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roomid_)*/uint64_t{0u}
  , /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_JoinRoomAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_JoinRoomAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_JoinRoomAckDefaultTypeInternal() {}
  union {
    Msg_JoinRoomAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_JoinRoomAckDefaultTypeInternal _Msg_JoinRoomAck_default_instance_;
PROTOBUF_CONSTEXPR Msg_KickRoomReq::Msg_KickRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.roomid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_KickRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_KickRoomReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_KickRoomReqDefaultTypeInternal() {}
  union {
    Msg_KickRoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_KickRoomReqDefaultTypeInternal _Msg_KickRoomReq_default_instance_;
PROTOBUF_CONSTEXPR Msg_KickRoomAck::Msg_KickRoomAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_KickRoomAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_KickRoomAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_KickRoomAckDefaultTypeInternal() {}
  union {
    Msg_KickRoomAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_KickRoomAckDefaultTypeInternal _Msg_KickRoomAck_default_instance_;
PROTOBUF_CONSTEXPR Msg_LeaveRoomReq::Msg_LeaveRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.roomid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_LeaveRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_LeaveRoomReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_LeaveRoomReqDefaultTypeInternal() {}
  union {
    Msg_LeaveRoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_LeaveRoomReqDefaultTypeInternal _Msg_LeaveRoomReq_default_instance_;
PROTOBUF_CONSTEXPR Msg_LeaveRoomAck::Msg_LeaveRoomAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_LeaveRoomAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_LeaveRoomAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_LeaveRoomAckDefaultTypeInternal() {}
  union {
    Msg_LeaveRoomAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_LeaveRoomAckDefaultTypeInternal _Msg_LeaveRoomAck_default_instance_;
PROTOBUF_CONSTEXPR Msg_StartRoomReq::Msg_StartRoomReq(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.roomid_)*/uint64_t{0u}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_StartRoomReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_StartRoomReqDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_StartRoomReqDefaultTypeInternal() {}
  union {
    Msg_StartRoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_StartRoomReqDefaultTypeInternal _Msg_StartRoomReq_default_instance_;
PROTOBUF_CONSTEXPR Msg_StartRoomAck::Msg_StartRoomAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_StartRoomAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_StartRoomAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_StartRoomAckDefaultTypeInternal() {}
  union {
    Msg_StartRoomAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_StartRoomAckDefaultTypeInternal _Msg_StartRoomAck_default_instance_;
PROTOBUF_CONSTEXPR Msg_RoomPlayerInfo::Msg_RoomPlayerInfo(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.equips_)*/{}
  , /*decltype(_impl_._equips_cached_byte_size_)*/{0}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.actorid_)*/0
  , /*decltype(_impl_.mountid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_RoomPlayerInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_RoomPlayerInfoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_RoomPlayerInfoDefaultTypeInternal() {}
  union {
    Msg_RoomPlayerInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_RoomPlayerInfoDefaultTypeInternal _Msg_RoomPlayerInfo_default_instance_;
PROTOBUF_CONSTEXPR Msg_BroadRoomNotify::Msg_BroadRoomNotify(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.playerlist_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Msg_BroadRoomNotifyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Msg_BroadRoomNotifyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Msg_BroadRoomNotifyDefaultTypeInternal() {}
  union {
    Msg_BroadRoomNotify _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Msg_BroadRoomNotifyDefaultTypeInternal _Msg_BroadRoomNotify_default_instance_;
}  // namespace proto
}  // namespace symphony
static ::_pb::Metadata file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[18];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_symphony_2fproto_2fmsg_5fcopy_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_symphony_2fproto_2fmsg_5fcopy_2eproto = nullptr;

const uint32_t TableStruct_symphony_2fproto_2fmsg_5fcopy_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.objectid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.actorid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.objecttype_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.kill_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.death_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.heal_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultObject, _impl_.damage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.objectid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.actorid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.objecttype_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.kill_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.death_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.heal_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ResultPlayer, _impl_.damage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.serverid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.copyguid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.copyid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.copytype_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.lasttime_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.playerlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BattleResultNty, _impl_.objectlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyReq, _impl_.copyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyAck, _impl_.retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _impl_.copyid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _impl_.copyresult_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _impl_.starnum_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _impl_.lasttime_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MainCopyResultNty, _impl_.itemlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_CreateRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_CreateRoomReq, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_CreateRoomReq, _impl_.copyid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_CreateRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_CreateRoomAck, _impl_.retcode_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_CreateRoomAck, _impl_.roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_JoinRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_JoinRoomReq, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_JoinRoomReq, _impl_.roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_JoinRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_JoinRoomAck, _impl_.retcode_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_JoinRoomAck, _impl_.roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_KickRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_KickRoomReq, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_KickRoomReq, _impl_.roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_KickRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_KickRoomAck, _impl_.retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_LeaveRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_LeaveRoomReq, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_LeaveRoomReq, _impl_.roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_LeaveRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_LeaveRoomAck, _impl_.retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_StartRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_StartRoomReq, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_StartRoomReq, _impl_.roomid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_StartRoomAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_StartRoomAck, _impl_.retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _impl_.actorid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _impl_.mountid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_RoomPlayerInfo, _impl_.equips_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_BroadRoomNotify, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::Msg_BroadRoomNotify, _impl_.playerlist_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::symphony::proto::ResultObject)},
  { 14, -1, -1, sizeof(::symphony::proto::ResultPlayer)},
  { 28, -1, -1, sizeof(::symphony::proto::BattleResultNty)},
  { 41, -1, -1, sizeof(::symphony::proto::MainCopyReq)},
  { 48, -1, -1, sizeof(::symphony::proto::MainCopyAck)},
  { 55, -1, -1, sizeof(::symphony::proto::MainCopyResultNty)},
  { 67, -1, -1, sizeof(::symphony::proto::Msg_CreateRoomReq)},
  { 75, -1, -1, sizeof(::symphony::proto::Msg_CreateRoomAck)},
  { 83, -1, -1, sizeof(::symphony::proto::Msg_JoinRoomReq)},
  { 91, -1, -1, sizeof(::symphony::proto::Msg_JoinRoomAck)},
  { 99, -1, -1, sizeof(::symphony::proto::Msg_KickRoomReq)},
  { 107, -1, -1, sizeof(::symphony::proto::Msg_KickRoomAck)},
  { 114, -1, -1, sizeof(::symphony::proto::Msg_LeaveRoomReq)},
  { 122, -1, -1, sizeof(::symphony::proto::Msg_LeaveRoomAck)},
  { 129, -1, -1, sizeof(::symphony::proto::Msg_StartRoomReq)},
  { 137, -1, -1, sizeof(::symphony::proto::Msg_StartRoomAck)},
  { 144, -1, -1, sizeof(::symphony::proto::Msg_RoomPlayerInfo)},
  { 156, -1, -1, sizeof(::symphony::proto::Msg_BroadRoomNotify)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::symphony::proto::_ResultObject_default_instance_._instance,
  &::symphony::proto::_ResultPlayer_default_instance_._instance,
  &::symphony::proto::_BattleResultNty_default_instance_._instance,
  &::symphony::proto::_MainCopyReq_default_instance_._instance,
  &::symphony::proto::_MainCopyAck_default_instance_._instance,
  &::symphony::proto::_MainCopyResultNty_default_instance_._instance,
  &::symphony::proto::_Msg_CreateRoomReq_default_instance_._instance,
  &::symphony::proto::_Msg_CreateRoomAck_default_instance_._instance,
  &::symphony::proto::_Msg_JoinRoomReq_default_instance_._instance,
  &::symphony::proto::_Msg_JoinRoomAck_default_instance_._instance,
  &::symphony::proto::_Msg_KickRoomReq_default_instance_._instance,
  &::symphony::proto::_Msg_KickRoomAck_default_instance_._instance,
  &::symphony::proto::_Msg_LeaveRoomReq_default_instance_._instance,
  &::symphony::proto::_Msg_LeaveRoomAck_default_instance_._instance,
  &::symphony::proto::_Msg_StartRoomReq_default_instance_._instance,
  &::symphony::proto::_Msg_StartRoomAck_default_instance_._instance,
  &::symphony::proto::_Msg_RoomPlayerInfo_default_instance_._instance,
  &::symphony::proto::_Msg_BroadRoomNotify_default_instance_._instance,
};

const char descriptor_table_protodef_symphony_2fproto_2fmsg_5fcopy_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035symphony/proto/msg_copy.proto\022\016symphon"
  "y.proto\032\035symphony/proto/msg_base.proto\"\220"
  "\001\n\014ResultObject\022\020\n\010ObjectID\030\001 \001(\004\022\017\n\007Act"
  "orID\030\002 \001(\005\022\022\n\nObjectType\030\003 \001(\005\022\016\n\006Result"
  "\030\004 \001(\005\022\014\n\004Kill\030\005 \001(\005\022\r\n\005Death\030\006 \001(\005\022\014\n\004H"
  "eal\030\007 \001(\005\022\016\n\006Damage\030\010 \001(\005\"\220\001\n\014ResultPlay"
  "er\022\020\n\010ObjectID\030\001 \001(\004\022\017\n\007ActorID\030\002 \001(\005\022\022\n"
  "\nObjectType\030\003 \001(\005\022\016\n\006Result\030\004 \001(\005\022\014\n\004Kil"
  "l\030\005 \001(\005\022\r\n\005Death\030\006 \001(\005\022\014\n\004Heal\030\007 \001(\005\022\016\n\006"
  "Damage\030\010 \001(\005\"\315\001\n\017BattleResultNty\022\020\n\010Serv"
  "erID\030\001 \001(\005\022\020\n\010CopyGuid\030\002 \001(\r\022\016\n\006CopyID\030\003"
  " \001(\005\022\020\n\010CopyType\030\004 \001(\005\022\020\n\010LastTime\030\005 \001(\004"
  "\0220\n\nPlayerList\030\006 \003(\0132\034.symphony.proto.Re"
  "sultPlayer\0220\n\nObjectList\030\007 \003(\0132\034.symphon"
  "y.proto.ResultObject\"\035\n\013MainCopyReq\022\016\n\006C"
  "opyID\030\001 \001(\005\"\036\n\013MainCopyAck\022\017\n\007RetCode\030\001 "
  "\001(\r\"\226\001\n\021MainCopyResultNty\022\016\n\006RoleID\030\001 \001("
  "\004\022\016\n\006CopyID\030\002 \001(\005\022\022\n\nCopyResult\030\003 \001(\005\022\017\n"
  "\007StarNum\030\004 \001(\005\022\020\n\010LastTime\030\005 \001(\004\022*\n\010Item"
  "List\030\006 \003(\0132\030.symphony.proto.ItemData\"3\n\021"
  "Msg_CreateRoomReq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006Cop"
  "yID\030\002 \001(\r\"4\n\021Msg_CreateRoomAck\022\017\n\007RetCod"
  "e\030\001 \001(\r\022\016\n\006RoomID\030\002 \001(\004\"1\n\017Msg_JoinRoomR"
  "eq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\"2\n\017Ms"
  "g_JoinRoomAck\022\017\n\007RetCode\030\001 \001(\r\022\016\n\006RoomID"
  "\030\002 \001(\004\"1\n\017Msg_KickRoomReq\022\016\n\006RoleID\030\001 \001("
  "\004\022\016\n\006RoomID\030\002 \001(\004\"\"\n\017Msg_KickRoomAck\022\017\n\007"
  "RetCode\030\001 \001(\r\"2\n\020Msg_LeaveRoomReq\022\016\n\006Rol"
  "eID\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\"#\n\020Msg_LeaveRo"
  "omAck\022\017\n\007RetCode\030\001 \001(\r\"2\n\020Msg_StartRoomR"
  "eq\022\016\n\006RoleID\030\001 \001(\004\022\016\n\006RoomID\030\002 \001(\004\"#\n\020Ms"
  "g_StartRoomAck\022\017\n\007RetCode\030\001 \001(\r\"s\n\022Msg_R"
  "oomPlayerInfo\022\016\n\006RoleID\030\001 \001(\004\022\r\n\005Level\030\002"
  " \001(\005\022\014\n\004Name\030\003 \001(\t\022\017\n\007ActorID\030\004 \001(\005\022\017\n\007M"
  "ountID\030\005 \001(\005\022\016\n\006Equips\030\006 \003(\005\"M\n\023Msg_Broa"
  "dRoomNotify\0226\n\nPlayerList\030\001 \003(\0132\".sympho"
  "ny.proto.Msg_RoomPlayerInfob\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_deps[1] = {
  &::descriptor_table_symphony_2fproto_2fmsg_5fbase_2eproto,
};
static ::_pbi::once_flag descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto = {
    false, false, 1475, descriptor_table_protodef_symphony_2fproto_2fmsg_5fcopy_2eproto,
    "symphony/proto/msg_copy.proto",
    &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once, descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_deps, 1, 18,
    schemas, file_default_instances, TableStruct_symphony_2fproto_2fmsg_5fcopy_2eproto::offsets,
    file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto, file_level_enum_descriptors_symphony_2fproto_2fmsg_5fcopy_2eproto,
    file_level_service_descriptors_symphony_2fproto_2fmsg_5fcopy_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter() {
  return &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_symphony_2fproto_2fmsg_5fcopy_2eproto(&descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto);
namespace symphony {
namespace proto {

// ===================================================================

class ResultObject::_Internal {
 public:
};

ResultObject::ResultObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.ResultObject)
}
ResultObject::ResultObject(const ResultObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResultObject* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.objectid_){}
    , decltype(_impl_.actorid_){}
    , decltype(_impl_.objecttype_){}
    , decltype(_impl_.result_){}
    , decltype(_impl_.kill_){}
    , decltype(_impl_.death_){}
    , decltype(_impl_.heal_){}
    , decltype(_impl_.damage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.objectid_, &from._impl_.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.damage_) -
    reinterpret_cast<char*>(&_impl_.objectid_)) + sizeof(_impl_.damage_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.ResultObject)
}

inline void ResultObject::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.objectid_){uint64_t{0u}}
    , decltype(_impl_.actorid_){0}
    , decltype(_impl_.objecttype_){0}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.kill_){0}
    , decltype(_impl_.death_){0}
    , decltype(_impl_.heal_){0}
    , decltype(_impl_.damage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResultObject::~ResultObject() {
  // @@protoc_insertion_point(destructor:symphony.proto.ResultObject)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResultObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResultObject::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResultObject::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.ResultObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.damage_) -
      reinterpret_cast<char*>(&_impl_.objectid_)) + sizeof(_impl_.damage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultObject::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 ObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ActorID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ObjectType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.objecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Kill = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.kill_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Death = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.death_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Heal = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.heal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Damage = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResultObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.ResultObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->_internal_objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 ActorID = 2;
  if (this->_internal_actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_actorid(), target);
  }

  // int32 ObjectType = 3;
  if (this->_internal_objecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_objecttype(), target);
  }

  // int32 Result = 4;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_result(), target);
  }

  // int32 Kill = 5;
  if (this->_internal_kill() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_kill(), target);
  }

  // int32 Death = 6;
  if (this->_internal_death() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_death(), target);
  }

  // int32 Heal = 7;
  if (this->_internal_heal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_heal(), target);
  }

  // int32 Damage = 8;
  if (this->_internal_damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_damage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.ResultObject)
  return target;
}

size_t ResultObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.ResultObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->_internal_objectid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_objectid());
  }

  // int32 ActorID = 2;
  if (this->_internal_actorid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_actorid());
  }

  // int32 ObjectType = 3;
  if (this->_internal_objecttype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_objecttype());
  }

  // int32 Result = 4;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_result());
  }

  // int32 Kill = 5;
  if (this->_internal_kill() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_kill());
  }

  // int32 Death = 6;
  if (this->_internal_death() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_death());
  }

  // int32 Heal = 7;
  if (this->_internal_heal() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_heal());
  }

  // int32 Damage = 8;
  if (this->_internal_damage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_damage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResultObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResultObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResultObject::GetClassData() const { return &_class_data_; }


void ResultObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResultObject*>(&to_msg);
  auto& from = static_cast<const ResultObject&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.ResultObject)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_objectid() != 0) {
    _this->_internal_set_objectid(from._internal_objectid());
  }
  if (from._internal_actorid() != 0) {
    _this->_internal_set_actorid(from._internal_actorid());
  }
  if (from._internal_objecttype() != 0) {
    _this->_internal_set_objecttype(from._internal_objecttype());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_kill() != 0) {
    _this->_internal_set_kill(from._internal_kill());
  }
  if (from._internal_death() != 0) {
    _this->_internal_set_death(from._internal_death());
  }
  if (from._internal_heal() != 0) {
    _this->_internal_set_heal(from._internal_heal());
  }
  if (from._internal_damage() != 0) {
    _this->_internal_set_damage(from._internal_damage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResultObject::CopyFrom(const ResultObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.ResultObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultObject::IsInitialized() const {
  return true;
}

void ResultObject::InternalSwap(ResultObject* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResultObject, _impl_.damage_)
      + sizeof(ResultObject::_impl_.damage_)
      - PROTOBUF_FIELD_OFFSET(ResultObject, _impl_.objectid_)>(
          reinterpret_cast<char*>(&_impl_.objectid_),
          reinterpret_cast<char*>(&other->_impl_.objectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultObject::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[0]);
}

// ===================================================================

class ResultPlayer::_Internal {
 public:
};

ResultPlayer::ResultPlayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.ResultPlayer)
}
ResultPlayer::ResultPlayer(const ResultPlayer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResultPlayer* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.objectid_){}
    , decltype(_impl_.actorid_){}
    , decltype(_impl_.objecttype_){}
    , decltype(_impl_.result_){}
    , decltype(_impl_.kill_){}
    , decltype(_impl_.death_){}
    , decltype(_impl_.heal_){}
    , decltype(_impl_.damage_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.objectid_, &from._impl_.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.damage_) -
    reinterpret_cast<char*>(&_impl_.objectid_)) + sizeof(_impl_.damage_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.ResultPlayer)
}

inline void ResultPlayer::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.objectid_){uint64_t{0u}}
    , decltype(_impl_.actorid_){0}
    , decltype(_impl_.objecttype_){0}
    , decltype(_impl_.result_){0}
    , decltype(_impl_.kill_){0}
    , decltype(_impl_.death_){0}
    , decltype(_impl_.heal_){0}
    , decltype(_impl_.damage_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ResultPlayer::~ResultPlayer() {
  // @@protoc_insertion_point(destructor:symphony.proto.ResultPlayer)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResultPlayer::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ResultPlayer::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResultPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.ResultPlayer)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.damage_) -
      reinterpret_cast<char*>(&_impl_.objectid_)) + sizeof(_impl_.damage_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultPlayer::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 ObjectID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ActorID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ObjectType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.objecttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Kill = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.kill_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Death = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.death_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Heal = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.heal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Damage = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.damage_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResultPlayer::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.ResultPlayer)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->_internal_objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_objectid(), target);
  }

  // int32 ActorID = 2;
  if (this->_internal_actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_actorid(), target);
  }

  // int32 ObjectType = 3;
  if (this->_internal_objecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_objecttype(), target);
  }

  // int32 Result = 4;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_result(), target);
  }

  // int32 Kill = 5;
  if (this->_internal_kill() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_kill(), target);
  }

  // int32 Death = 6;
  if (this->_internal_death() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_death(), target);
  }

  // int32 Heal = 7;
  if (this->_internal_heal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_heal(), target);
  }

  // int32 Damage = 8;
  if (this->_internal_damage() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_damage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.ResultPlayer)
  return target;
}

size_t ResultPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.ResultPlayer)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 ObjectID = 1;
  if (this->_internal_objectid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_objectid());
  }

  // int32 ActorID = 2;
  if (this->_internal_actorid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_actorid());
  }

  // int32 ObjectType = 3;
  if (this->_internal_objecttype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_objecttype());
  }

  // int32 Result = 4;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_result());
  }

  // int32 Kill = 5;
  if (this->_internal_kill() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_kill());
  }

  // int32 Death = 6;
  if (this->_internal_death() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_death());
  }

  // int32 Heal = 7;
  if (this->_internal_heal() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_heal());
  }

  // int32 Damage = 8;
  if (this->_internal_damage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_damage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResultPlayer::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResultPlayer::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResultPlayer::GetClassData() const { return &_class_data_; }


void ResultPlayer::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResultPlayer*>(&to_msg);
  auto& from = static_cast<const ResultPlayer&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.ResultPlayer)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_objectid() != 0) {
    _this->_internal_set_objectid(from._internal_objectid());
  }
  if (from._internal_actorid() != 0) {
    _this->_internal_set_actorid(from._internal_actorid());
  }
  if (from._internal_objecttype() != 0) {
    _this->_internal_set_objecttype(from._internal_objecttype());
  }
  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  if (from._internal_kill() != 0) {
    _this->_internal_set_kill(from._internal_kill());
  }
  if (from._internal_death() != 0) {
    _this->_internal_set_death(from._internal_death());
  }
  if (from._internal_heal() != 0) {
    _this->_internal_set_heal(from._internal_heal());
  }
  if (from._internal_damage() != 0) {
    _this->_internal_set_damage(from._internal_damage());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResultPlayer::CopyFrom(const ResultPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.ResultPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultPlayer::IsInitialized() const {
  return true;
}

void ResultPlayer::InternalSwap(ResultPlayer* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResultPlayer, _impl_.damage_)
      + sizeof(ResultPlayer::_impl_.damage_)
      - PROTOBUF_FIELD_OFFSET(ResultPlayer, _impl_.objectid_)>(
          reinterpret_cast<char*>(&_impl_.objectid_),
          reinterpret_cast<char*>(&other->_impl_.objectid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultPlayer::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[1]);
}

// ===================================================================

class BattleResultNty::_Internal {
 public:
};

BattleResultNty::BattleResultNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.BattleResultNty)
}
BattleResultNty::BattleResultNty(const BattleResultNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BattleResultNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.playerlist_){from._impl_.playerlist_}
    , decltype(_impl_.objectlist_){from._impl_.objectlist_}
    , decltype(_impl_.serverid_){}
    , decltype(_impl_.copyguid_){}
    , decltype(_impl_.copyid_){}
    , decltype(_impl_.copytype_){}
    , decltype(_impl_.lasttime_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.serverid_, &from._impl_.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.lasttime_) -
    reinterpret_cast<char*>(&_impl_.serverid_)) + sizeof(_impl_.lasttime_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.BattleResultNty)
}

inline void BattleResultNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.playerlist_){arena}
    , decltype(_impl_.objectlist_){arena}
    , decltype(_impl_.serverid_){0}
    , decltype(_impl_.copyguid_){0u}
    , decltype(_impl_.copyid_){0}
    , decltype(_impl_.copytype_){0}
    , decltype(_impl_.lasttime_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BattleResultNty::~BattleResultNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.BattleResultNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BattleResultNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playerlist_.~RepeatedPtrField();
  _impl_.objectlist_.~RepeatedPtrField();
}

void BattleResultNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BattleResultNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.BattleResultNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playerlist_.Clear();
  _impl_.objectlist_.Clear();
  ::memset(&_impl_.serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.lasttime_) -
      reinterpret_cast<char*>(&_impl_.serverid_)) + sizeof(_impl_.lasttime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BattleResultNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 ServerID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.serverid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CopyGuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.copyguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CopyID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CopyType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.copytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 LastTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.ResultPlayer PlayerList = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_playerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.ResultObject ObjectList = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objectlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BattleResultNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.BattleResultNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ServerID = 1;
  if (this->_internal_serverid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_serverid(), target);
  }

  // uint32 CopyGuid = 2;
  if (this->_internal_copyguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_copyguid(), target);
  }

  // int32 CopyID = 3;
  if (this->_internal_copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_copyid(), target);
  }

  // int32 CopyType = 4;
  if (this->_internal_copytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_copytype(), target);
  }

  // uint64 LastTime = 5;
  if (this->_internal_lasttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_lasttime(), target);
  }

  // repeated .symphony.proto.ResultPlayer PlayerList = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_playerlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_playerlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.ResultObject ObjectList = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_objectlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_objectlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.BattleResultNty)
  return target;
}

size_t BattleResultNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.BattleResultNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.ResultPlayer PlayerList = 6;
  total_size += 1UL * this->_internal_playerlist_size();
  for (const auto& msg : this->_impl_.playerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.ResultObject ObjectList = 7;
  total_size += 1UL * this->_internal_objectlist_size();
  for (const auto& msg : this->_impl_.objectlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 ServerID = 1;
  if (this->_internal_serverid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_serverid());
  }

  // uint32 CopyGuid = 2;
  if (this->_internal_copyguid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_copyguid());
  }

  // int32 CopyID = 3;
  if (this->_internal_copyid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_copyid());
  }

  // int32 CopyType = 4;
  if (this->_internal_copytype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_copytype());
  }

  // uint64 LastTime = 5;
  if (this->_internal_lasttime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lasttime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BattleResultNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BattleResultNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BattleResultNty::GetClassData() const { return &_class_data_; }


void BattleResultNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BattleResultNty*>(&to_msg);
  auto& from = static_cast<const BattleResultNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.BattleResultNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.playerlist_.MergeFrom(from._impl_.playerlist_);
  _this->_impl_.objectlist_.MergeFrom(from._impl_.objectlist_);
  if (from._internal_serverid() != 0) {
    _this->_internal_set_serverid(from._internal_serverid());
  }
  if (from._internal_copyguid() != 0) {
    _this->_internal_set_copyguid(from._internal_copyguid());
  }
  if (from._internal_copyid() != 0) {
    _this->_internal_set_copyid(from._internal_copyid());
  }
  if (from._internal_copytype() != 0) {
    _this->_internal_set_copytype(from._internal_copytype());
  }
  if (from._internal_lasttime() != 0) {
    _this->_internal_set_lasttime(from._internal_lasttime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BattleResultNty::CopyFrom(const BattleResultNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.BattleResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BattleResultNty::IsInitialized() const {
  return true;
}

void BattleResultNty::InternalSwap(BattleResultNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.playerlist_.InternalSwap(&other->_impl_.playerlist_);
  _impl_.objectlist_.InternalSwap(&other->_impl_.objectlist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BattleResultNty, _impl_.lasttime_)
      + sizeof(BattleResultNty::_impl_.lasttime_)
      - PROTOBUF_FIELD_OFFSET(BattleResultNty, _impl_.serverid_)>(
          reinterpret_cast<char*>(&_impl_.serverid_),
          reinterpret_cast<char*>(&other->_impl_.serverid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BattleResultNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[2]);
}

// ===================================================================

class MainCopyReq::_Internal {
 public:
};

MainCopyReq::MainCopyReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MainCopyReq)
}
MainCopyReq::MainCopyReq(const MainCopyReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MainCopyReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.copyid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.copyid_ = from._impl_.copyid_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MainCopyReq)
}

inline void MainCopyReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.copyid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MainCopyReq::~MainCopyReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.MainCopyReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MainCopyReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MainCopyReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MainCopyReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MainCopyReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.copyid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainCopyReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 CopyID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MainCopyReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MainCopyReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 CopyID = 1;
  if (this->_internal_copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_copyid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MainCopyReq)
  return target;
}

size_t MainCopyReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MainCopyReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 CopyID = 1;
  if (this->_internal_copyid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_copyid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MainCopyReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MainCopyReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MainCopyReq::GetClassData() const { return &_class_data_; }


void MainCopyReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MainCopyReq*>(&to_msg);
  auto& from = static_cast<const MainCopyReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MainCopyReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_copyid() != 0) {
    _this->_internal_set_copyid(from._internal_copyid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MainCopyReq::CopyFrom(const MainCopyReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MainCopyReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyReq::IsInitialized() const {
  return true;
}

void MainCopyReq::InternalSwap(MainCopyReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.copyid_, other->_impl_.copyid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MainCopyReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[3]);
}

// ===================================================================

class MainCopyAck::_Internal {
 public:
};

MainCopyAck::MainCopyAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MainCopyAck)
}
MainCopyAck::MainCopyAck(const MainCopyAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MainCopyAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.retcode_ = from._impl_.retcode_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MainCopyAck)
}

inline void MainCopyAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MainCopyAck::~MainCopyAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.MainCopyAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MainCopyAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MainCopyAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MainCopyAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MainCopyAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainCopyAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MainCopyAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MainCopyAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MainCopyAck)
  return target;
}

size_t MainCopyAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MainCopyAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MainCopyAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MainCopyAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MainCopyAck::GetClassData() const { return &_class_data_; }


void MainCopyAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MainCopyAck*>(&to_msg);
  auto& from = static_cast<const MainCopyAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MainCopyAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MainCopyAck::CopyFrom(const MainCopyAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MainCopyAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyAck::IsInitialized() const {
  return true;
}

void MainCopyAck::InternalSwap(MainCopyAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.retcode_, other->_impl_.retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MainCopyAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[4]);
}

// ===================================================================

class MainCopyResultNty::_Internal {
 public:
};

void MainCopyResultNty::clear_itemlist() {
  _impl_.itemlist_.Clear();
}
MainCopyResultNty::MainCopyResultNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MainCopyResultNty)
}
MainCopyResultNty::MainCopyResultNty(const MainCopyResultNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MainCopyResultNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.itemlist_){from._impl_.itemlist_}
    , decltype(_impl_.roleid_){}
    , decltype(_impl_.copyid_){}
    , decltype(_impl_.copyresult_){}
    , decltype(_impl_.lasttime_){}
    , decltype(_impl_.starnum_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.starnum_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.starnum_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MainCopyResultNty)
}

inline void MainCopyResultNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.itemlist_){arena}
    , decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.copyid_){0}
    , decltype(_impl_.copyresult_){0}
    , decltype(_impl_.lasttime_){uint64_t{0u}}
    , decltype(_impl_.starnum_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MainCopyResultNty::~MainCopyResultNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.MainCopyResultNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MainCopyResultNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.itemlist_.~RepeatedPtrField();
}

void MainCopyResultNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MainCopyResultNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MainCopyResultNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.itemlist_.Clear();
  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.starnum_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.starnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainCopyResultNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CopyID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CopyResult = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.copyresult_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarNum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.starnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 LastTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.lasttime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.ItemData ItemList = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_itemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MainCopyResultNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MainCopyResultNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // int32 CopyID = 2;
  if (this->_internal_copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_copyid(), target);
  }

  // int32 CopyResult = 3;
  if (this->_internal_copyresult() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_copyresult(), target);
  }

  // int32 StarNum = 4;
  if (this->_internal_starnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_starnum(), target);
  }

  // uint64 LastTime = 5;
  if (this->_internal_lasttime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(5, this->_internal_lasttime(), target);
  }

  // repeated .symphony.proto.ItemData ItemList = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_itemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_itemlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MainCopyResultNty)
  return target;
}

size_t MainCopyResultNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MainCopyResultNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.ItemData ItemList = 6;
  total_size += 1UL * this->_internal_itemlist_size();
  for (const auto& msg : this->_impl_.itemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // int32 CopyID = 2;
  if (this->_internal_copyid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_copyid());
  }

  // int32 CopyResult = 3;
  if (this->_internal_copyresult() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_copyresult());
  }

  // uint64 LastTime = 5;
  if (this->_internal_lasttime() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_lasttime());
  }

  // int32 StarNum = 4;
  if (this->_internal_starnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starnum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MainCopyResultNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MainCopyResultNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MainCopyResultNty::GetClassData() const { return &_class_data_; }


void MainCopyResultNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MainCopyResultNty*>(&to_msg);
  auto& from = static_cast<const MainCopyResultNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MainCopyResultNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.itemlist_.MergeFrom(from._impl_.itemlist_);
  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_copyid() != 0) {
    _this->_internal_set_copyid(from._internal_copyid());
  }
  if (from._internal_copyresult() != 0) {
    _this->_internal_set_copyresult(from._internal_copyresult());
  }
  if (from._internal_lasttime() != 0) {
    _this->_internal_set_lasttime(from._internal_lasttime());
  }
  if (from._internal_starnum() != 0) {
    _this->_internal_set_starnum(from._internal_starnum());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MainCopyResultNty::CopyFrom(const MainCopyResultNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MainCopyResultNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainCopyResultNty::IsInitialized() const {
  return true;
}

void MainCopyResultNty::InternalSwap(MainCopyResultNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.itemlist_.InternalSwap(&other->_impl_.itemlist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MainCopyResultNty, _impl_.starnum_)
      + sizeof(MainCopyResultNty::_impl_.starnum_)
      - PROTOBUF_FIELD_OFFSET(MainCopyResultNty, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MainCopyResultNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[5]);
}

// ===================================================================

class Msg_CreateRoomReq::_Internal {
 public:
};

Msg_CreateRoomReq::Msg_CreateRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_CreateRoomReq)
}
Msg_CreateRoomReq::Msg_CreateRoomReq(const Msg_CreateRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_CreateRoomReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){}
    , decltype(_impl_.copyid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.copyid_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.copyid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_CreateRoomReq)
}

inline void Msg_CreateRoomReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.copyid_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_CreateRoomReq::~Msg_CreateRoomReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_CreateRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_CreateRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_CreateRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_CreateRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_CreateRoomReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.copyid_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.copyid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_CreateRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CopyID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_CreateRoomReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_CreateRoomReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint32 CopyID = 2;
  if (this->_internal_copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_copyid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_CreateRoomReq)
  return target;
}

size_t Msg_CreateRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_CreateRoomReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint32 CopyID = 2;
  if (this->_internal_copyid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_copyid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_CreateRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_CreateRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_CreateRoomReq::GetClassData() const { return &_class_data_; }


void Msg_CreateRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_CreateRoomReq*>(&to_msg);
  auto& from = static_cast<const Msg_CreateRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_CreateRoomReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_copyid() != 0) {
    _this->_internal_set_copyid(from._internal_copyid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_CreateRoomReq::CopyFrom(const Msg_CreateRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_CreateRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateRoomReq::IsInitialized() const {
  return true;
}

void Msg_CreateRoomReq::InternalSwap(Msg_CreateRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_CreateRoomReq, _impl_.copyid_)
      + sizeof(Msg_CreateRoomReq::_impl_.copyid_)
      - PROTOBUF_FIELD_OFFSET(Msg_CreateRoomReq, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_CreateRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[6]);
}

// ===================================================================

class Msg_CreateRoomAck::_Internal {
 public:
};

Msg_CreateRoomAck::Msg_CreateRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_CreateRoomAck)
}
Msg_CreateRoomAck::Msg_CreateRoomAck(const Msg_CreateRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_CreateRoomAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roomid_){}
    , decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roomid_, &from._impl_.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.retcode_) -
    reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.retcode_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_CreateRoomAck)
}

inline void Msg_CreateRoomAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roomid_){uint64_t{0u}}
    , decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_CreateRoomAck::~Msg_CreateRoomAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_CreateRoomAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_CreateRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_CreateRoomAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_CreateRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_CreateRoomAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.retcode_) -
      reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_CreateRoomAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_CreateRoomAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_CreateRoomAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_CreateRoomAck)
  return target;
}

size_t Msg_CreateRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_CreateRoomAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_CreateRoomAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_CreateRoomAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_CreateRoomAck::GetClassData() const { return &_class_data_; }


void Msg_CreateRoomAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_CreateRoomAck*>(&to_msg);
  auto& from = static_cast<const Msg_CreateRoomAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_CreateRoomAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roomid() != 0) {
    _this->_internal_set_roomid(from._internal_roomid());
  }
  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_CreateRoomAck::CopyFrom(const Msg_CreateRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_CreateRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_CreateRoomAck::IsInitialized() const {
  return true;
}

void Msg_CreateRoomAck::InternalSwap(Msg_CreateRoomAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_CreateRoomAck, _impl_.retcode_)
      + sizeof(Msg_CreateRoomAck::_impl_.retcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_CreateRoomAck, _impl_.roomid_)>(
          reinterpret_cast<char*>(&_impl_.roomid_),
          reinterpret_cast<char*>(&other->_impl_.roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_CreateRoomAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[7]);
}

// ===================================================================

class Msg_JoinRoomReq::_Internal {
 public:
};

Msg_JoinRoomReq::Msg_JoinRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_JoinRoomReq)
}
Msg_JoinRoomReq::Msg_JoinRoomReq(const Msg_JoinRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_JoinRoomReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){}
    , decltype(_impl_.roomid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.roomid_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_JoinRoomReq)
}

inline void Msg_JoinRoomReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.roomid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_JoinRoomReq::~Msg_JoinRoomReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_JoinRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_JoinRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_JoinRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_JoinRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_JoinRoomReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.roomid_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_JoinRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_JoinRoomReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_JoinRoomReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_JoinRoomReq)
  return target;
}

size_t Msg_JoinRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_JoinRoomReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_JoinRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_JoinRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_JoinRoomReq::GetClassData() const { return &_class_data_; }


void Msg_JoinRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_JoinRoomReq*>(&to_msg);
  auto& from = static_cast<const Msg_JoinRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_JoinRoomReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_roomid() != 0) {
    _this->_internal_set_roomid(from._internal_roomid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_JoinRoomReq::CopyFrom(const Msg_JoinRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_JoinRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_JoinRoomReq::IsInitialized() const {
  return true;
}

void Msg_JoinRoomReq::InternalSwap(Msg_JoinRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_JoinRoomReq, _impl_.roomid_)
      + sizeof(Msg_JoinRoomReq::_impl_.roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_JoinRoomReq, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_JoinRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[8]);
}

// ===================================================================

class Msg_JoinRoomAck::_Internal {
 public:
};

Msg_JoinRoomAck::Msg_JoinRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_JoinRoomAck)
}
Msg_JoinRoomAck::Msg_JoinRoomAck(const Msg_JoinRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_JoinRoomAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roomid_){}
    , decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roomid_, &from._impl_.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.retcode_) -
    reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.retcode_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_JoinRoomAck)
}

inline void Msg_JoinRoomAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roomid_){uint64_t{0u}}
    , decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_JoinRoomAck::~Msg_JoinRoomAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_JoinRoomAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_JoinRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_JoinRoomAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_JoinRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_JoinRoomAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.retcode_) -
      reinterpret_cast<char*>(&_impl_.roomid_)) + sizeof(_impl_.retcode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_JoinRoomAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_JoinRoomAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_JoinRoomAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_JoinRoomAck)
  return target;
}

size_t Msg_JoinRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_JoinRoomAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_JoinRoomAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_JoinRoomAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_JoinRoomAck::GetClassData() const { return &_class_data_; }


void Msg_JoinRoomAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_JoinRoomAck*>(&to_msg);
  auto& from = static_cast<const Msg_JoinRoomAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_JoinRoomAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roomid() != 0) {
    _this->_internal_set_roomid(from._internal_roomid());
  }
  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_JoinRoomAck::CopyFrom(const Msg_JoinRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_JoinRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_JoinRoomAck::IsInitialized() const {
  return true;
}

void Msg_JoinRoomAck::InternalSwap(Msg_JoinRoomAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_JoinRoomAck, _impl_.retcode_)
      + sizeof(Msg_JoinRoomAck::_impl_.retcode_)
      - PROTOBUF_FIELD_OFFSET(Msg_JoinRoomAck, _impl_.roomid_)>(
          reinterpret_cast<char*>(&_impl_.roomid_),
          reinterpret_cast<char*>(&other->_impl_.roomid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_JoinRoomAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[9]);
}

// ===================================================================

class Msg_KickRoomReq::_Internal {
 public:
};

Msg_KickRoomReq::Msg_KickRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_KickRoomReq)
}
Msg_KickRoomReq::Msg_KickRoomReq(const Msg_KickRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_KickRoomReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){}
    , decltype(_impl_.roomid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.roomid_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_KickRoomReq)
}

inline void Msg_KickRoomReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.roomid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_KickRoomReq::~Msg_KickRoomReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_KickRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_KickRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_KickRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_KickRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_KickRoomReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.roomid_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_KickRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_KickRoomReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_KickRoomReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_KickRoomReq)
  return target;
}

size_t Msg_KickRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_KickRoomReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_KickRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_KickRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_KickRoomReq::GetClassData() const { return &_class_data_; }


void Msg_KickRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_KickRoomReq*>(&to_msg);
  auto& from = static_cast<const Msg_KickRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_KickRoomReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_roomid() != 0) {
    _this->_internal_set_roomid(from._internal_roomid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_KickRoomReq::CopyFrom(const Msg_KickRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_KickRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_KickRoomReq::IsInitialized() const {
  return true;
}

void Msg_KickRoomReq::InternalSwap(Msg_KickRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_KickRoomReq, _impl_.roomid_)
      + sizeof(Msg_KickRoomReq::_impl_.roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_KickRoomReq, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_KickRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[10]);
}

// ===================================================================

class Msg_KickRoomAck::_Internal {
 public:
};

Msg_KickRoomAck::Msg_KickRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_KickRoomAck)
}
Msg_KickRoomAck::Msg_KickRoomAck(const Msg_KickRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_KickRoomAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.retcode_ = from._impl_.retcode_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_KickRoomAck)
}

inline void Msg_KickRoomAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_KickRoomAck::~Msg_KickRoomAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_KickRoomAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_KickRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_KickRoomAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_KickRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_KickRoomAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_KickRoomAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_KickRoomAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_KickRoomAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_KickRoomAck)
  return target;
}

size_t Msg_KickRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_KickRoomAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_KickRoomAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_KickRoomAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_KickRoomAck::GetClassData() const { return &_class_data_; }


void Msg_KickRoomAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_KickRoomAck*>(&to_msg);
  auto& from = static_cast<const Msg_KickRoomAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_KickRoomAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_KickRoomAck::CopyFrom(const Msg_KickRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_KickRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_KickRoomAck::IsInitialized() const {
  return true;
}

void Msg_KickRoomAck::InternalSwap(Msg_KickRoomAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.retcode_, other->_impl_.retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_KickRoomAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[11]);
}

// ===================================================================

class Msg_LeaveRoomReq::_Internal {
 public:
};

Msg_LeaveRoomReq::Msg_LeaveRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_LeaveRoomReq)
}
Msg_LeaveRoomReq::Msg_LeaveRoomReq(const Msg_LeaveRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_LeaveRoomReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){}
    , decltype(_impl_.roomid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.roomid_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_LeaveRoomReq)
}

inline void Msg_LeaveRoomReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.roomid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_LeaveRoomReq::~Msg_LeaveRoomReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_LeaveRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_LeaveRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_LeaveRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_LeaveRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_LeaveRoomReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.roomid_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_LeaveRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_LeaveRoomReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_LeaveRoomReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_LeaveRoomReq)
  return target;
}

size_t Msg_LeaveRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_LeaveRoomReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_LeaveRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_LeaveRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_LeaveRoomReq::GetClassData() const { return &_class_data_; }


void Msg_LeaveRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_LeaveRoomReq*>(&to_msg);
  auto& from = static_cast<const Msg_LeaveRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_LeaveRoomReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_roomid() != 0) {
    _this->_internal_set_roomid(from._internal_roomid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_LeaveRoomReq::CopyFrom(const Msg_LeaveRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_LeaveRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_LeaveRoomReq::IsInitialized() const {
  return true;
}

void Msg_LeaveRoomReq::InternalSwap(Msg_LeaveRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_LeaveRoomReq, _impl_.roomid_)
      + sizeof(Msg_LeaveRoomReq::_impl_.roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_LeaveRoomReq, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_LeaveRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[12]);
}

// ===================================================================

class Msg_LeaveRoomAck::_Internal {
 public:
};

Msg_LeaveRoomAck::Msg_LeaveRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_LeaveRoomAck)
}
Msg_LeaveRoomAck::Msg_LeaveRoomAck(const Msg_LeaveRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_LeaveRoomAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.retcode_ = from._impl_.retcode_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_LeaveRoomAck)
}

inline void Msg_LeaveRoomAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_LeaveRoomAck::~Msg_LeaveRoomAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_LeaveRoomAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_LeaveRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_LeaveRoomAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_LeaveRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_LeaveRoomAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_LeaveRoomAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_LeaveRoomAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_LeaveRoomAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_LeaveRoomAck)
  return target;
}

size_t Msg_LeaveRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_LeaveRoomAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_LeaveRoomAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_LeaveRoomAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_LeaveRoomAck::GetClassData() const { return &_class_data_; }


void Msg_LeaveRoomAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_LeaveRoomAck*>(&to_msg);
  auto& from = static_cast<const Msg_LeaveRoomAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_LeaveRoomAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_LeaveRoomAck::CopyFrom(const Msg_LeaveRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_LeaveRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_LeaveRoomAck::IsInitialized() const {
  return true;
}

void Msg_LeaveRoomAck::InternalSwap(Msg_LeaveRoomAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.retcode_, other->_impl_.retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_LeaveRoomAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[13]);
}

// ===================================================================

class Msg_StartRoomReq::_Internal {
 public:
};

Msg_StartRoomReq::Msg_StartRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_StartRoomReq)
}
Msg_StartRoomReq::Msg_StartRoomReq(const Msg_StartRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_StartRoomReq* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){}
    , decltype(_impl_.roomid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.roomid_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_StartRoomReq)
}

inline void Msg_StartRoomReq::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.roomid_){uint64_t{0u}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_StartRoomReq::~Msg_StartRoomReq() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_StartRoomReq)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_StartRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_StartRoomReq::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_StartRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_StartRoomReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.roomid_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.roomid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_StartRoomReq::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoomID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.roomid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_StartRoomReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_StartRoomReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_roomid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_StartRoomReq)
  return target;
}

size_t Msg_StartRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_StartRoomReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // uint64 RoomID = 2;
  if (this->_internal_roomid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roomid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_StartRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_StartRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_StartRoomReq::GetClassData() const { return &_class_data_; }


void Msg_StartRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_StartRoomReq*>(&to_msg);
  auto& from = static_cast<const Msg_StartRoomReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_StartRoomReq)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_roomid() != 0) {
    _this->_internal_set_roomid(from._internal_roomid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_StartRoomReq::CopyFrom(const Msg_StartRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_StartRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_StartRoomReq::IsInitialized() const {
  return true;
}

void Msg_StartRoomReq::InternalSwap(Msg_StartRoomReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_StartRoomReq, _impl_.roomid_)
      + sizeof(Msg_StartRoomReq::_impl_.roomid_)
      - PROTOBUF_FIELD_OFFSET(Msg_StartRoomReq, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_StartRoomReq::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[14]);
}

// ===================================================================

class Msg_StartRoomAck::_Internal {
 public:
};

Msg_StartRoomAck::Msg_StartRoomAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_StartRoomAck)
}
Msg_StartRoomAck::Msg_StartRoomAck(const Msg_StartRoomAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_StartRoomAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.retcode_ = from._impl_.retcode_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_StartRoomAck)
}

inline void Msg_StartRoomAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.retcode_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_StartRoomAck::~Msg_StartRoomAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_StartRoomAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_StartRoomAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Msg_StartRoomAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_StartRoomAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_StartRoomAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.retcode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_StartRoomAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_StartRoomAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_StartRoomAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_StartRoomAck)
  return target;
}

size_t Msg_StartRoomAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_StartRoomAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_StartRoomAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_StartRoomAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_StartRoomAck::GetClassData() const { return &_class_data_; }


void Msg_StartRoomAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_StartRoomAck*>(&to_msg);
  auto& from = static_cast<const Msg_StartRoomAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_StartRoomAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_StartRoomAck::CopyFrom(const Msg_StartRoomAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_StartRoomAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_StartRoomAck::IsInitialized() const {
  return true;
}

void Msg_StartRoomAck::InternalSwap(Msg_StartRoomAck* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.retcode_, other->_impl_.retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_StartRoomAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[15]);
}

// ===================================================================

class Msg_RoomPlayerInfo::_Internal {
 public:
};

Msg_RoomPlayerInfo::Msg_RoomPlayerInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_RoomPlayerInfo)
}
Msg_RoomPlayerInfo::Msg_RoomPlayerInfo(const Msg_RoomPlayerInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_RoomPlayerInfo* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.equips_){from._impl_.equips_}
    , /*decltype(_impl_._equips_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.roleid_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.actorid_){}
    , decltype(_impl_.mountid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.roleid_, &from._impl_.roleid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.mountid_) -
    reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.mountid_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_RoomPlayerInfo)
}

inline void Msg_RoomPlayerInfo::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.equips_){arena}
    , /*decltype(_impl_._equips_cached_byte_size_)*/{0}
    , decltype(_impl_.name_){}
    , decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.actorid_){0}
    , decltype(_impl_.mountid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Msg_RoomPlayerInfo::~Msg_RoomPlayerInfo() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_RoomPlayerInfo)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_RoomPlayerInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.equips_.~RepeatedField();
  _impl_.name_.Destroy();
}

void Msg_RoomPlayerInfo::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_RoomPlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_RoomPlayerInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.equips_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.roleid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.mountid_) -
      reinterpret_cast<char*>(&_impl_.roleid_)) + sizeof(_impl_.mountid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_RoomPlayerInfo::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 RoleID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Level = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.Msg_RoomPlayerInfo.Name"));
        } else
          goto handle_unusual;
        continue;
      // int32 ActorID = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.actorid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 MountID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.mountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 Equips = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_equips(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 48) {
          _internal_add_equips(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_RoomPlayerInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_RoomPlayerInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_roleid(), target);
  }

  // int32 Level = 2;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_level(), target);
  }

  // string Name = 3;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.Msg_RoomPlayerInfo.Name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // int32 ActorID = 4;
  if (this->_internal_actorid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_actorid(), target);
  }

  // int32 MountID = 5;
  if (this->_internal_mountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_mountid(), target);
  }

  // repeated int32 Equips = 6;
  {
    int byte_size = _impl_._equips_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          6, _internal_equips(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_RoomPlayerInfo)
  return target;
}

size_t Msg_RoomPlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_RoomPlayerInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 Equips = 6;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.equips_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._equips_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string Name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 RoleID = 1;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // int32 Level = 2;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 ActorID = 4;
  if (this->_internal_actorid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_actorid());
  }

  // int32 MountID = 5;
  if (this->_internal_mountid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mountid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_RoomPlayerInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_RoomPlayerInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_RoomPlayerInfo::GetClassData() const { return &_class_data_; }


void Msg_RoomPlayerInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_RoomPlayerInfo*>(&to_msg);
  auto& from = static_cast<const Msg_RoomPlayerInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_RoomPlayerInfo)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.equips_.MergeFrom(from._impl_.equips_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_actorid() != 0) {
    _this->_internal_set_actorid(from._internal_actorid());
  }
  if (from._internal_mountid() != 0) {
    _this->_internal_set_mountid(from._internal_mountid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_RoomPlayerInfo::CopyFrom(const Msg_RoomPlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_RoomPlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_RoomPlayerInfo::IsInitialized() const {
  return true;
}

void Msg_RoomPlayerInfo::InternalSwap(Msg_RoomPlayerInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.equips_.InternalSwap(&other->_impl_.equips_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Msg_RoomPlayerInfo, _impl_.mountid_)
      + sizeof(Msg_RoomPlayerInfo::_impl_.mountid_)
      - PROTOBUF_FIELD_OFFSET(Msg_RoomPlayerInfo, _impl_.roleid_)>(
          reinterpret_cast<char*>(&_impl_.roleid_),
          reinterpret_cast<char*>(&other->_impl_.roleid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_RoomPlayerInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[16]);
}

// ===================================================================

class Msg_BroadRoomNotify::_Internal {
 public:
};

Msg_BroadRoomNotify::Msg_BroadRoomNotify(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.Msg_BroadRoomNotify)
}
Msg_BroadRoomNotify::Msg_BroadRoomNotify(const Msg_BroadRoomNotify& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Msg_BroadRoomNotify* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.playerlist_){from._impl_.playerlist_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.Msg_BroadRoomNotify)
}

inline void Msg_BroadRoomNotify::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.playerlist_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Msg_BroadRoomNotify::~Msg_BroadRoomNotify() {
  // @@protoc_insertion_point(destructor:symphony.proto.Msg_BroadRoomNotify)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Msg_BroadRoomNotify::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.playerlist_.~RepeatedPtrField();
}

void Msg_BroadRoomNotify::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Msg_BroadRoomNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.Msg_BroadRoomNotify)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.playerlist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Msg_BroadRoomNotify::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.Msg_RoomPlayerInfo PlayerList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_playerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Msg_BroadRoomNotify::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.Msg_BroadRoomNotify)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.Msg_RoomPlayerInfo PlayerList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_playerlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_playerlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.Msg_BroadRoomNotify)
  return target;
}

size_t Msg_BroadRoomNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.Msg_BroadRoomNotify)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.Msg_RoomPlayerInfo PlayerList = 1;
  total_size += 1UL * this->_internal_playerlist_size();
  for (const auto& msg : this->_impl_.playerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Msg_BroadRoomNotify::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Msg_BroadRoomNotify::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Msg_BroadRoomNotify::GetClassData() const { return &_class_data_; }


void Msg_BroadRoomNotify::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Msg_BroadRoomNotify*>(&to_msg);
  auto& from = static_cast<const Msg_BroadRoomNotify&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.Msg_BroadRoomNotify)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.playerlist_.MergeFrom(from._impl_.playerlist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Msg_BroadRoomNotify::CopyFrom(const Msg_BroadRoomNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.Msg_BroadRoomNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Msg_BroadRoomNotify::IsInitialized() const {
  return true;
}

void Msg_BroadRoomNotify::InternalSwap(Msg_BroadRoomNotify* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.playerlist_.InternalSwap(&other->_impl_.playerlist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Msg_BroadRoomNotify::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5fcopy_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5fcopy_2eproto[17]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace symphony
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::symphony::proto::ResultObject*
Arena::CreateMaybeMessage< ::symphony::proto::ResultObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::ResultObject >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::ResultPlayer*
Arena::CreateMaybeMessage< ::symphony::proto::ResultPlayer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::ResultPlayer >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::BattleResultNty*
Arena::CreateMaybeMessage< ::symphony::proto::BattleResultNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::BattleResultNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MainCopyReq*
Arena::CreateMaybeMessage< ::symphony::proto::MainCopyReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MainCopyReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MainCopyAck*
Arena::CreateMaybeMessage< ::symphony::proto::MainCopyAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MainCopyAck >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MainCopyResultNty*
Arena::CreateMaybeMessage< ::symphony::proto::MainCopyResultNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MainCopyResultNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_CreateRoomReq*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_CreateRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_CreateRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_CreateRoomAck*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_CreateRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_CreateRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_JoinRoomReq*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_JoinRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_JoinRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_JoinRoomAck*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_JoinRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_JoinRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_KickRoomReq*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_KickRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_KickRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_KickRoomAck*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_KickRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_KickRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_LeaveRoomReq*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_LeaveRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_LeaveRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_LeaveRoomAck*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_LeaveRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_LeaveRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_StartRoomReq*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_StartRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_StartRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_StartRoomAck*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_StartRoomAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_StartRoomAck >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_RoomPlayerInfo*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_RoomPlayerInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_RoomPlayerInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::Msg_BroadRoomNotify*
Arena::CreateMaybeMessage< ::symphony::proto::Msg_BroadRoomNotify >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::Msg_BroadRoomNotify >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
