// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symphony/proto/msg_payment.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_symphony_2fproto_2fmsg_5fpayment_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_symphony_2fproto_2fmsg_5fpayment_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_symphony_2fproto_2fmsg_5fpayment_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_symphony_2fproto_2fmsg_5fpayment_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_symphony_2fproto_2fmsg_5fpayment_2eproto;
namespace symphony {
namespace proto {
class CreatePaymentAck;
struct CreatePaymentAckDefaultTypeInternal;
extern CreatePaymentAckDefaultTypeInternal _CreatePaymentAck_default_instance_;
class CreatePaymentReq;
struct CreatePaymentReqDefaultTypeInternal;
extern CreatePaymentReqDefaultTypeInternal _CreatePaymentReq_default_instance_;
}  // namespace proto
}  // namespace symphony
PROTOBUF_NAMESPACE_OPEN
template<> ::symphony::proto::CreatePaymentAck* Arena::CreateMaybeMessage<::symphony::proto::CreatePaymentAck>(Arena*);
template<> ::symphony::proto::CreatePaymentReq* Arena::CreateMaybeMessage<::symphony::proto::CreatePaymentReq>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace symphony {
namespace proto {

// ===================================================================

class CreatePaymentReq final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.CreatePaymentReq) */ {
 public:
  inline CreatePaymentReq() : CreatePaymentReq(nullptr) {}
  ~CreatePaymentReq() override;
  explicit PROTOBUF_CONSTEXPR CreatePaymentReq(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreatePaymentReq(const CreatePaymentReq& from);
  CreatePaymentReq(CreatePaymentReq&& from) noexcept
    : CreatePaymentReq() {
    *this = ::std::move(from);
  }

  inline CreatePaymentReq& operator=(const CreatePaymentReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePaymentReq& operator=(CreatePaymentReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreatePaymentReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreatePaymentReq* internal_default_instance() {
    return reinterpret_cast<const CreatePaymentReq*>(
               &_CreatePaymentReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CreatePaymentReq& a, CreatePaymentReq& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePaymentReq* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePaymentReq* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreatePaymentReq* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreatePaymentReq>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreatePaymentReq& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreatePaymentReq& from) {
    CreatePaymentReq::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePaymentReq* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.CreatePaymentReq";
  }
  protected:
  explicit CreatePaymentReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderIDFieldNumber = 1,
    kPlatformFieldNumber = 2,
    kChannelFieldNumber = 3,
    kRoleIDFieldNumber = 4,
    kAccountIDFieldNumber = 6,
    kServerIDFieldNumber = 5,
    kProductIDFieldNumber = 7,
    kBuyIDFieldNumber = 8,
    kProxyIDFieldNumber = 9,
    kClientIDFieldNumber = 10,
  };
  // string OrderID = 1;
  void clear_orderid();
  const std::string& orderid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_orderid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_orderid();
  PROTOBUF_NODISCARD std::string* release_orderid();
  void set_allocated_orderid(std::string* orderid);
  private:
  const std::string& _internal_orderid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_orderid(const std::string& value);
  std::string* _internal_mutable_orderid();
  public:

  // int32 Platform = 2;
  void clear_platform();
  int32_t platform() const;
  void set_platform(int32_t value);
  private:
  int32_t _internal_platform() const;
  void _internal_set_platform(int32_t value);
  public:

  // int32 Channel = 3;
  void clear_channel();
  int32_t channel() const;
  void set_channel(int32_t value);
  private:
  int32_t _internal_channel() const;
  void _internal_set_channel(int32_t value);
  public:

  // uint64 RoleID = 4;
  void clear_roleid();
  uint64_t roleid() const;
  void set_roleid(uint64_t value);
  private:
  uint64_t _internal_roleid() const;
  void _internal_set_roleid(uint64_t value);
  public:

  // uint64 AccountID = 6;
  void clear_accountid();
  uint64_t accountid() const;
  void set_accountid(uint64_t value);
  private:
  uint64_t _internal_accountid() const;
  void _internal_set_accountid(uint64_t value);
  public:

  // int32 ServerID = 5;
  void clear_serverid();
  int32_t serverid() const;
  void set_serverid(int32_t value);
  private:
  int32_t _internal_serverid() const;
  void _internal_set_serverid(int32_t value);
  public:

  // int32 ProductID = 7;
  void clear_productid();
  int32_t productid() const;
  void set_productid(int32_t value);
  private:
  int32_t _internal_productid() const;
  void _internal_set_productid(int32_t value);
  public:

  // int32 BuyID = 8;
  void clear_buyid();
  int32_t buyid() const;
  void set_buyid(int32_t value);
  private:
  int32_t _internal_buyid() const;
  void _internal_set_buyid(int32_t value);
  public:

  // int32 ProxyID = 9;
  void clear_proxyid();
  int32_t proxyid() const;
  void set_proxyid(int32_t value);
  private:
  int32_t _internal_proxyid() const;
  void _internal_set_proxyid(int32_t value);
  public:

  // int32 ClientID = 10;
  void clear_clientid();
  int32_t clientid() const;
  void set_clientid(int32_t value);
  private:
  int32_t _internal_clientid() const;
  void _internal_set_clientid(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.CreatePaymentReq)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr orderid_;
    int32_t platform_;
    int32_t channel_;
    uint64_t roleid_;
    uint64_t accountid_;
    int32_t serverid_;
    int32_t productid_;
    int32_t buyid_;
    int32_t proxyid_;
    int32_t clientid_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5fpayment_2eproto;
};
// -------------------------------------------------------------------

class CreatePaymentAck final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.CreatePaymentAck) */ {
 public:
  inline CreatePaymentAck() : CreatePaymentAck(nullptr) {}
  ~CreatePaymentAck() override;
  explicit PROTOBUF_CONSTEXPR CreatePaymentAck(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CreatePaymentAck(const CreatePaymentAck& from);
  CreatePaymentAck(CreatePaymentAck&& from) noexcept
    : CreatePaymentAck() {
    *this = ::std::move(from);
  }

  inline CreatePaymentAck& operator=(const CreatePaymentAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreatePaymentAck& operator=(CreatePaymentAck&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreatePaymentAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const CreatePaymentAck* internal_default_instance() {
    return reinterpret_cast<const CreatePaymentAck*>(
               &_CreatePaymentAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreatePaymentAck& a, CreatePaymentAck& b) {
    a.Swap(&b);
  }
  inline void Swap(CreatePaymentAck* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreatePaymentAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreatePaymentAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CreatePaymentAck>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CreatePaymentAck& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CreatePaymentAck& from) {
    CreatePaymentAck::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreatePaymentAck* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.CreatePaymentAck";
  }
  protected:
  explicit CreatePaymentAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOrderIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // string OrderID = 2;
  void clear_orderid();
  const std::string& orderid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_orderid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_orderid();
  PROTOBUF_NODISCARD std::string* release_orderid();
  void set_allocated_orderid(std::string* orderid);
  private:
  const std::string& _internal_orderid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_orderid(const std::string& value);
  std::string* _internal_mutable_orderid();
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  uint32_t retcode() const;
  void set_retcode(uint32_t value);
  private:
  uint32_t _internal_retcode() const;
  void _internal_set_retcode(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.CreatePaymentAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr orderid_;
    uint32_t retcode_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5fpayment_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreatePaymentReq

// string OrderID = 1;
inline void CreatePaymentReq::clear_orderid() {
  _impl_.orderid_.ClearToEmpty();
}
inline const std::string& CreatePaymentReq::orderid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.OrderID)
  return _internal_orderid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreatePaymentReq::set_orderid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.orderid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.OrderID)
}
inline std::string* CreatePaymentReq::mutable_orderid() {
  std::string* _s = _internal_mutable_orderid();
  // @@protoc_insertion_point(field_mutable:symphony.proto.CreatePaymentReq.OrderID)
  return _s;
}
inline const std::string& CreatePaymentReq::_internal_orderid() const {
  return _impl_.orderid_.Get();
}
inline void CreatePaymentReq::_internal_set_orderid(const std::string& value) {
  
  _impl_.orderid_.Set(value, GetArenaForAllocation());
}
inline std::string* CreatePaymentReq::_internal_mutable_orderid() {
  
  return _impl_.orderid_.Mutable(GetArenaForAllocation());
}
inline std::string* CreatePaymentReq::release_orderid() {
  // @@protoc_insertion_point(field_release:symphony.proto.CreatePaymentReq.OrderID)
  return _impl_.orderid_.Release();
}
inline void CreatePaymentReq::set_allocated_orderid(std::string* orderid) {
  if (orderid != nullptr) {
    
  } else {
    
  }
  _impl_.orderid_.SetAllocated(orderid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.orderid_.IsDefault()) {
    _impl_.orderid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:symphony.proto.CreatePaymentReq.OrderID)
}

// int32 Platform = 2;
inline void CreatePaymentReq::clear_platform() {
  _impl_.platform_ = 0;
}
inline int32_t CreatePaymentReq::_internal_platform() const {
  return _impl_.platform_;
}
inline int32_t CreatePaymentReq::platform() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.Platform)
  return _internal_platform();
}
inline void CreatePaymentReq::_internal_set_platform(int32_t value) {
  
  _impl_.platform_ = value;
}
inline void CreatePaymentReq::set_platform(int32_t value) {
  _internal_set_platform(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.Platform)
}

// int32 Channel = 3;
inline void CreatePaymentReq::clear_channel() {
  _impl_.channel_ = 0;
}
inline int32_t CreatePaymentReq::_internal_channel() const {
  return _impl_.channel_;
}
inline int32_t CreatePaymentReq::channel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.Channel)
  return _internal_channel();
}
inline void CreatePaymentReq::_internal_set_channel(int32_t value) {
  
  _impl_.channel_ = value;
}
inline void CreatePaymentReq::set_channel(int32_t value) {
  _internal_set_channel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.Channel)
}

// uint64 RoleID = 4;
inline void CreatePaymentReq::clear_roleid() {
  _impl_.roleid_ = uint64_t{0u};
}
inline uint64_t CreatePaymentReq::_internal_roleid() const {
  return _impl_.roleid_;
}
inline uint64_t CreatePaymentReq::roleid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.RoleID)
  return _internal_roleid();
}
inline void CreatePaymentReq::_internal_set_roleid(uint64_t value) {
  
  _impl_.roleid_ = value;
}
inline void CreatePaymentReq::set_roleid(uint64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.RoleID)
}

// int32 ServerID = 5;
inline void CreatePaymentReq::clear_serverid() {
  _impl_.serverid_ = 0;
}
inline int32_t CreatePaymentReq::_internal_serverid() const {
  return _impl_.serverid_;
}
inline int32_t CreatePaymentReq::serverid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.ServerID)
  return _internal_serverid();
}
inline void CreatePaymentReq::_internal_set_serverid(int32_t value) {
  
  _impl_.serverid_ = value;
}
inline void CreatePaymentReq::set_serverid(int32_t value) {
  _internal_set_serverid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.ServerID)
}

// uint64 AccountID = 6;
inline void CreatePaymentReq::clear_accountid() {
  _impl_.accountid_ = uint64_t{0u};
}
inline uint64_t CreatePaymentReq::_internal_accountid() const {
  return _impl_.accountid_;
}
inline uint64_t CreatePaymentReq::accountid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.AccountID)
  return _internal_accountid();
}
inline void CreatePaymentReq::_internal_set_accountid(uint64_t value) {
  
  _impl_.accountid_ = value;
}
inline void CreatePaymentReq::set_accountid(uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.AccountID)
}

// int32 ProductID = 7;
inline void CreatePaymentReq::clear_productid() {
  _impl_.productid_ = 0;
}
inline int32_t CreatePaymentReq::_internal_productid() const {
  return _impl_.productid_;
}
inline int32_t CreatePaymentReq::productid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.ProductID)
  return _internal_productid();
}
inline void CreatePaymentReq::_internal_set_productid(int32_t value) {
  
  _impl_.productid_ = value;
}
inline void CreatePaymentReq::set_productid(int32_t value) {
  _internal_set_productid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.ProductID)
}

// int32 BuyID = 8;
inline void CreatePaymentReq::clear_buyid() {
  _impl_.buyid_ = 0;
}
inline int32_t CreatePaymentReq::_internal_buyid() const {
  return _impl_.buyid_;
}
inline int32_t CreatePaymentReq::buyid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.BuyID)
  return _internal_buyid();
}
inline void CreatePaymentReq::_internal_set_buyid(int32_t value) {
  
  _impl_.buyid_ = value;
}
inline void CreatePaymentReq::set_buyid(int32_t value) {
  _internal_set_buyid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.BuyID)
}

// int32 ProxyID = 9;
inline void CreatePaymentReq::clear_proxyid() {
  _impl_.proxyid_ = 0;
}
inline int32_t CreatePaymentReq::_internal_proxyid() const {
  return _impl_.proxyid_;
}
inline int32_t CreatePaymentReq::proxyid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.ProxyID)
  return _internal_proxyid();
}
inline void CreatePaymentReq::_internal_set_proxyid(int32_t value) {
  
  _impl_.proxyid_ = value;
}
inline void CreatePaymentReq::set_proxyid(int32_t value) {
  _internal_set_proxyid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.ProxyID)
}

// int32 ClientID = 10;
inline void CreatePaymentReq::clear_clientid() {
  _impl_.clientid_ = 0;
}
inline int32_t CreatePaymentReq::_internal_clientid() const {
  return _impl_.clientid_;
}
inline int32_t CreatePaymentReq::clientid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentReq.ClientID)
  return _internal_clientid();
}
inline void CreatePaymentReq::_internal_set_clientid(int32_t value) {
  
  _impl_.clientid_ = value;
}
inline void CreatePaymentReq::set_clientid(int32_t value) {
  _internal_set_clientid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentReq.ClientID)
}

// -------------------------------------------------------------------

// CreatePaymentAck

// uint32 RetCode = 1;
inline void CreatePaymentAck::clear_retcode() {
  _impl_.retcode_ = 0u;
}
inline uint32_t CreatePaymentAck::_internal_retcode() const {
  return _impl_.retcode_;
}
inline uint32_t CreatePaymentAck::retcode() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentAck.RetCode)
  return _internal_retcode();
}
inline void CreatePaymentAck::_internal_set_retcode(uint32_t value) {
  
  _impl_.retcode_ = value;
}
inline void CreatePaymentAck::set_retcode(uint32_t value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentAck.RetCode)
}

// string OrderID = 2;
inline void CreatePaymentAck::clear_orderid() {
  _impl_.orderid_.ClearToEmpty();
}
inline const std::string& CreatePaymentAck::orderid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CreatePaymentAck.OrderID)
  return _internal_orderid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void CreatePaymentAck::set_orderid(ArgT0&& arg0, ArgT... args) {
 
 _impl_.orderid_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:symphony.proto.CreatePaymentAck.OrderID)
}
inline std::string* CreatePaymentAck::mutable_orderid() {
  std::string* _s = _internal_mutable_orderid();
  // @@protoc_insertion_point(field_mutable:symphony.proto.CreatePaymentAck.OrderID)
  return _s;
}
inline const std::string& CreatePaymentAck::_internal_orderid() const {
  return _impl_.orderid_.Get();
}
inline void CreatePaymentAck::_internal_set_orderid(const std::string& value) {
  
  _impl_.orderid_.Set(value, GetArenaForAllocation());
}
inline std::string* CreatePaymentAck::_internal_mutable_orderid() {
  
  return _impl_.orderid_.Mutable(GetArenaForAllocation());
}
inline std::string* CreatePaymentAck::release_orderid() {
  // @@protoc_insertion_point(field_release:symphony.proto.CreatePaymentAck.OrderID)
  return _impl_.orderid_.Release();
}
inline void CreatePaymentAck::set_allocated_orderid(std::string* orderid) {
  if (orderid != nullptr) {
    
  } else {
    
  }
  _impl_.orderid_.SetAllocated(orderid, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.orderid_.IsDefault()) {
    _impl_.orderid_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:symphony.proto.CreatePaymentAck.OrderID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace symphony

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_symphony_2fproto_2fmsg_5fpayment_2eproto
