// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symphony/proto/game_define.proto

#include "symphony/proto/game_define.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace symphony {
namespace proto {
}  // namespace proto
}  // namespace symphony
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[19];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto = nullptr;
const uint32_t TableStruct_symphony_2fproto_2fgame_5fdefine_2eproto::offsets[1] = {};
static constexpr ::_pbi::MigrationSchema* schemas = nullptr;
static constexpr ::_pb::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_symphony_2fproto_2fgame_5fdefine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n symphony/proto/game_define.proto\022\016symp"
  "hony.proto*\216\001\n\013EObjectType\022\013\n\007OT_NONE\020\000\022"
  "\r\n\tOT_PLAYER\020\001\022\n\n\006OT_NPC\020\002\022\016\n\nOT_MONSTER"
  "\020\003\022\n\n\006OT_PET\020\004\022\014\n\010OT_MOUNT\020\005\022\016\n\nOT_MACHI"
  "NE\020\006\022\016\n\nOT_PARTNER\020\007\022\r\n\tOT_SUMMON\020\010*\371\001\n\013"
  "EActionType\022\013\n\007AT_NONE\020\000\022\013\n\007AT_IDLE\020\001\022\016\n"
  "\nAT_FIXBODY\020\002\022\013\n\007AT_WALK\020\003\022\n\n\006AT_RUN\020\004\022\n"
  "\n\006AT_FLY\020\005\022\014\n\010AT_SKILL\020\006\022\013\n\007AT_MINE\020\007\022\013\n"
  "\007AT_ROLL\020\010\022\013\n\007AT_JUMP\020\t\022\013\n\007AT_BORN\020\n\022\014\n\010"
  "AT_DANCE\020\013\022\013\n\007AT_DEAD\020\014\022\014\n\010AT_WOUND\020\r\022\017\n"
  "\013AT_BEATBACK\020\016\022\017\n\013AT_BEATDOWN\020\017\022\016\n\nAT_BE"
  "ATFLY\020\020*F\n\rEActionStatue\022\013\n\007AS_NONE\020\000\022\013\n"
  "\007AS_HURT\020\001\022\014\n\010AS_START\020\002\022\r\n\006AS_END\020\377\377\377\177*"
  "q\n\tECopyType\022\014\n\010CPT_NONE\020\000\022\r\n\tCPT_LOGIN\020"
  "\001\022\017\n\013CPT_SELROLE\020\002\022\014\n\010CPT_CITY\020\003\022\014\n\010CPT_"
  "MAIN\020\004\022\r\n\tCPT_WORLD\020\005\022\013\n\007CPT_END\020d*\232\001\n\rE"
  "ObjectStatus\022\014\n\010EOS_NONE\020\000\022\014\n\010EOS_DEAD\020\001"
  "\022\020\n\014EOS_NOT_MOVE\020\002\022\020\n\014EOS_NOT_CAST\020\003\022\022\n\016"
  "EOS_NOT_BEHURT\020\004\022\025\n\021EOS_NOT_BECONTROL\020\005\022"
  "\017\n\013EOS_STEALTH\020\006\022\r\n\tEOS_BLIND\020\007*\367\001\n\tEIte"
  "mType\022\014\n\010EIT_NONE\020\000\022\r\n\tEIT_MONEY\020\001\022\016\n\nEI"
  "T_ACTION\020\002\022\014\n\010EIT_ITEM\020\003\022\r\n\tEIT_EQUIP\020\004\022"
  "\013\n\007EIT_GEM\020\005\022\016\n\nEIT_RELICS\020\006\022\r\n\tEIT_MOUN"
  "T\020\007\022\013\n\007EIT_PET\020\010\022\017\n\013EIT_PARTNER\020\t\022\017\n\013EIT"
  "_FASHION\020\n\022\013\n\007EIT_BOX\020\013\022\016\n\nEIT_ACTBOX\020\014\022"
  "\014\n\010EIT_CHIP\020\r\022\014\n\010EIT_RUNE\020\016\022\014\n\010EIT_DRUG\020"
  "\017*\212\001\n\010EBagType\022\014\n\010EBT_NONE\020\000\022\014\n\010EBT_ITEM"
  "\020\001\022\013\n\007EBT_GEM\020\002\022\017\n\013EBT_FASHION\020\003\022\014\n\010EBT_"
  "CHIP\020\004\022\014\n\010EBT_RUNE\020\005\022\014\n\010EBT_TASK\020\006\022\014\n\010EB"
  "T_SOUL\020\007\022\014\n\010EBT_CARD\020\010*4\n\rEFunctionType\022"
  "\021\n\rFUNC_BEGIN_ID\020\000\022\020\n\013FUNC_END_ID\020\226\001*\227\002\n"
  "\007EAttrID\022\t\n\005EA_HP\020\000\022\t\n\005EA_MP\020\001\022\r\n\tEA_HP_"
  "MAX\020\002\022\r\n\tEA_MP_MAX\020\003\022\014\n\010EA_SPEED\020\004\022\r\n\tEA"
  "_ATTACK\020\005\022\016\n\nEA_ELEMENT\020\006\022\020\n\014EA_MAGIC_DE"
  "F\020\007\022\021\n\rEA_PHYSIC_DEF\020\010\022\017\n\013EA_HIT_RATE\020\t\022"
  "\014\n\010EA_DODGE\020\n\022\020\n\014EA_MORE_HURT\020\013\022\020\n\014EA_LE"
  "SS_HURT\020\014\022\017\n\013EA_CRIT_HIT\020\r\022\017\n\013EA_CRIT_DE"
  "F\020\016\022\020\n\014EA_CRIT_HURT\020\017\022\017\n\013EA_ATTR_NUM\020\020*4"
  "\n\005EShip\022\016\n\nES_NEUTRAL\020\000\022\r\n\tES_FRIEND\020\001\022\014"
  "\n\010ES_ENEMY\020\002*=\n\014EHitShipType\022\014\n\010EHST_ALL"
  "\020\000\022\017\n\013EHST_FRIEND\020\001\022\016\n\nEHST_ENEMY\020\002*\031\n\tE"
  "BuffType\022\014\n\010BFT_NONE\020\000*\\\n\014EChatChannel\022\014"
  "\n\010CHL_NONE\020\000\022\r\n\tCHL_WORLD\020\001\022\017\n\013CHL_PRIVA"
  "TE\020\002\022\r\n\tCHL_GUILD\020\003\022\017\n\013CHL_ROLLTIP\020\004*\230\001\n"
  "\tEEquipPos\022\014\n\010EEP_NONE\020\000\022\016\n\nEEP_HELMET\020\001"
  "\022\020\n\014EEP_NECKLACE\020\002\022\r\n\tEEP_ARMOR\020\003\022\r\n\tEEP"
  "_SHOES\020\004\022\r\n\tEEP_WRIST\020\005\022\014\n\010EEP_RING\020\006\022\020\n"
  "\014EEP_TALISMAN\020\007\022\016\n\nEEP_WEAPON\020\010*K\n\013ETask"
  "Status\022\014\n\010ETS_INIT\020\000\022\016\n\nETS_ACCEPT\020\001\022\016\n\n"
  "ETS_FINISH\020\002\022\016\n\nETS_COMMIT\020\003*D\n\013ECopyRes"
  "ult\022\014\n\010ECR_NONE\020\000\022\013\n\007ECR_WIN\020\001\022\014\n\010ECR_LO"
  "ST\020\002\022\014\n\010ECR_DRAW\020\003*\?\n\tEGuildPos\022\016\n\nEGP_M"
  "EMBER\020\000\022\016\n\nEGP_LEADER\020\001\022\022\n\016EGP_VICELEADE"
  "R\020\002**\n\tEMailType\022\r\n\tEMT_BEGIN\020\000\022\016\n\nEMT_C"
  "USTOM\020\001*0\n\013EMailStatus\022\017\n\013EMS_NEWMAIL\020\000\022"
  "\020\n\014EMS_RECEIVED\020\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto = {
    false, false, 2225, descriptor_table_protodef_symphony_2fproto_2fgame_5fdefine_2eproto,
    "symphony/proto/game_define.proto",
    &descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto_once, nullptr, 0, 0,
    schemas, file_default_instances, TableStruct_symphony_2fproto_2fgame_5fdefine_2eproto::offsets,
    nullptr, file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto,
    file_level_service_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto_getter() {
  return &descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_symphony_2fproto_2fgame_5fdefine_2eproto(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
namespace symphony {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EObjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[0];
}
bool EObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EActionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[1];
}
bool EActionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EActionStatue_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[2];
}
bool EActionStatue_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 268435455:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECopyType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[3];
}
bool ECopyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 100:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EObjectStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[4];
}
bool EObjectStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EItemType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[5];
}
bool EItemType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EBagType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[6];
}
bool EBagType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EFunctionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[7];
}
bool EFunctionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 150:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EAttrID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[8];
}
bool EAttrID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EShip_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[9];
}
bool EShip_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EHitShipType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[10];
}
bool EHitShipType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EBuffType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[11];
}
bool EBuffType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EChatChannel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[12];
}
bool EChatChannel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EEquipPos_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[13];
}
bool EEquipPos_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETaskStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[14];
}
bool ETaskStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ECopyResult_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[15];
}
bool ECopyResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EGuildPos_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[16];
}
bool EGuildPos_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[17];
}
bool EMailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMailStatus_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_symphony_2fproto_2fgame_5fdefine_2eproto);
  return file_level_enum_descriptors_symphony_2fproto_2fgame_5fdefine_2eproto[18];
}
bool EMailStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace symphony
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
