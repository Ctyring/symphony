// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symphony/proto/msg_login_clt_data.proto

#include "symphony/proto/msg_login_clt_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace symphony {
namespace proto {
PROTOBUF_CONSTEXPR BagItem::BagItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.itemguid_)*/uint64_t{0u}
  , /*decltype(_impl_.itemnum_)*/int64_t{0}
  , /*decltype(_impl_.itemid_)*/0
  , /*decltype(_impl_.bind_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BagItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BagItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BagItemDefaultTypeInternal() {}
  union {
    BagItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BagItemDefaultTypeInternal _BagItem_default_instance_;
PROTOBUF_CONSTEXPR BagChangeNty::BagChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BagChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BagChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BagChangeNtyDefaultTypeInternal() {}
  union {
    BagChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BagChangeNtyDefaultTypeInternal _BagChangeNty_default_instance_;
PROTOBUF_CONSTEXPR EquipItem::EquipItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.equipid_)*/0
  , /*decltype(_impl_.strengthlvl_)*/0
  , /*decltype(_impl_.refinelevel_)*/0
  , /*decltype(_impl_.starlevel_)*/0
  , /*decltype(_impl_.refineexp_)*/0
  , /*decltype(_impl_.starexp_)*/0
  , /*decltype(_impl_.isusing_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipItemDefaultTypeInternal() {}
  union {
    EquipItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipItemDefaultTypeInternal _EquipItem_default_instance_;
PROTOBUF_CONSTEXPR EquipChangeNty::EquipChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct EquipChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EquipChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EquipChangeNtyDefaultTypeInternal() {}
  union {
    EquipChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EquipChangeNtyDefaultTypeInternal _EquipChangeNty_default_instance_;
PROTOBUF_CONSTEXPR GemItem::GemItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.gemid_)*/0
  , /*decltype(_impl_.strengthlvl_)*/0
  , /*decltype(_impl_.refinelevel_)*/0
  , /*decltype(_impl_.starlevel_)*/0
  , /*decltype(_impl_.refineexp_)*/0
  , /*decltype(_impl_.starexp_)*/0
  , /*decltype(_impl_.pos_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GemItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GemItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GemItemDefaultTypeInternal() {}
  union {
    GemItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GemItemDefaultTypeInternal _GemItem_default_instance_;
PROTOBUF_CONSTEXPR GemChangeNty::GemChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GemChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GemChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GemChangeNtyDefaultTypeInternal() {}
  union {
    GemChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GemChangeNtyDefaultTypeInternal _GemChangeNty_default_instance_;
PROTOBUF_CONSTEXPR PetItem::PetItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.petid_)*/0
  , /*decltype(_impl_.strengthlvl_)*/0
  , /*decltype(_impl_.refinelevel_)*/0
  , /*decltype(_impl_.starlevel_)*/0
  , /*decltype(_impl_.refineexp_)*/0
  , /*decltype(_impl_.starexp_)*/0
  , /*decltype(_impl_.isusing_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PetItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PetItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PetItemDefaultTypeInternal() {}
  union {
    PetItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PetItemDefaultTypeInternal _PetItem_default_instance_;
PROTOBUF_CONSTEXPR PetChangeNty::PetChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PetChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PetChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PetChangeNtyDefaultTypeInternal() {}
  union {
    PetChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PetChangeNtyDefaultTypeInternal _PetChangeNty_default_instance_;
PROTOBUF_CONSTEXPR PartnerItem::PartnerItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.partnerid_)*/0
  , /*decltype(_impl_.strengthlvl_)*/0
  , /*decltype(_impl_.refinelevel_)*/0
  , /*decltype(_impl_.starlevel_)*/0
  , /*decltype(_impl_.refineexp_)*/0
  , /*decltype(_impl_.starexp_)*/0
  , /*decltype(_impl_.setpos_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PartnerItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartnerItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartnerItemDefaultTypeInternal() {}
  union {
    PartnerItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartnerItemDefaultTypeInternal _PartnerItem_default_instance_;
PROTOBUF_CONSTEXPR PartnerChangeNty::PartnerChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PartnerChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PartnerChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PartnerChangeNtyDefaultTypeInternal() {}
  union {
    PartnerChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PartnerChangeNtyDefaultTypeInternal _PartnerChangeNty_default_instance_;
PROTOBUF_CONSTEXPR MountItem::MountItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.mountid_)*/0
  , /*decltype(_impl_.strengthlvl_)*/0
  , /*decltype(_impl_.refinelevel_)*/0
  , /*decltype(_impl_.starlevel_)*/0
  , /*decltype(_impl_.refineexp_)*/0
  , /*decltype(_impl_.starexp_)*/0
  , /*decltype(_impl_.isusing_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MountItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MountItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MountItemDefaultTypeInternal() {}
  union {
    MountItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MountItemDefaultTypeInternal _MountItem_default_instance_;
PROTOBUF_CONSTEXPR MountChangeNty::MountChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MountChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MountChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MountChangeNtyDefaultTypeInternal() {}
  union {
    MountChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MountChangeNtyDefaultTypeInternal _MountChangeNty_default_instance_;
PROTOBUF_CONSTEXPR MailItem::MailItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.itemid_)*/{}
  , /*decltype(_impl_._itemid_cached_byte_size_)*/{0}
  , /*decltype(_impl_.itemnum_)*/{}
  , /*decltype(_impl_._itemnum_cached_byte_size_)*/{0}
  , /*decltype(_impl_.title_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.content_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.sender_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.guid_)*/uint64_t{0u}
  , /*decltype(_impl_.mailtype_)*/0
  , /*decltype(_impl_.status_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MailItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MailItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MailItemDefaultTypeInternal() {}
  union {
    MailItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MailItemDefaultTypeInternal _MailItem_default_instance_;
PROTOBUF_CONSTEXPR MailChangeNty::MailChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MailChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MailChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MailChangeNtyDefaultTypeInternal() {}
  union {
    MailChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MailChangeNtyDefaultTypeInternal _MailChangeNty_default_instance_;
PROTOBUF_CONSTEXPR TaskItem::TaskItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.taskid_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TaskItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskItemDefaultTypeInternal() {}
  union {
    TaskItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskItemDefaultTypeInternal _TaskItem_default_instance_;
PROTOBUF_CONSTEXPR TaskChangeNty::TaskChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TaskChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskChangeNtyDefaultTypeInternal() {}
  union {
    TaskChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskChangeNtyDefaultTypeInternal _TaskChangeNty_default_instance_;
PROTOBUF_CONSTEXPR CopyItem::CopyItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.copyid_)*/0u
  , /*decltype(_impl_.starnum_)*/0
  , /*decltype(_impl_.battlecnt_)*/0
  , /*decltype(_impl_.resetcnt_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CopyItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CopyItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CopyItemDefaultTypeInternal() {}
  union {
    CopyItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CopyItemDefaultTypeInternal _CopyItem_default_instance_;
PROTOBUF_CONSTEXPR ChapterItem::ChapterItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.chapterid_)*/0u
  , /*decltype(_impl_.staraward_)*/0u
  , /*decltype(_impl_.sceneaward_)*/0u
  , /*decltype(_impl_.copytype_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChapterItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChapterItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChapterItemDefaultTypeInternal() {}
  union {
    ChapterItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChapterItemDefaultTypeInternal _ChapterItem_default_instance_;
PROTOBUF_CONSTEXPR ActionItem::ActionItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.action_)*/int64_t{0}
  , /*decltype(_impl_.actime_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ActionItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ActionItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ActionItemDefaultTypeInternal() {}
  union {
    ActionItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ActionItemDefaultTypeInternal _ActionItem_default_instance_;
PROTOBUF_CONSTEXPR GuideItem::GuideItem(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GuideItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GuideItemDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GuideItemDefaultTypeInternal() {}
  union {
    GuideItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GuideItemDefaultTypeInternal _GuideItem_default_instance_;
PROTOBUF_CONSTEXPR SkillChangeNty::SkillChangeNty(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.changelist_)*/{}
  , /*decltype(_impl_.removelist_)*/{}
  , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SkillChangeNtyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SkillChangeNtyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SkillChangeNtyDefaultTypeInternal() {}
  union {
    SkillChangeNty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SkillChangeNtyDefaultTypeInternal _SkillChangeNty_default_instance_;
PROTOBUF_CONSTEXPR RoleLoginAck::RoleLoginAck(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.actionlist_)*/{}
  , /*decltype(_impl_.equiplist_)*/{}
  , /*decltype(_impl_.gemlist_)*/{}
  , /*decltype(_impl_.petlist_)*/{}
  , /*decltype(_impl_.partnerlist_)*/{}
  , /*decltype(_impl_.mountlist_)*/{}
  , /*decltype(_impl_.bagitemlist_)*/{}
  , /*decltype(_impl_.maillist_)*/{}
  , /*decltype(_impl_.tasklist_)*/{}
  , /*decltype(_impl_.copylist_)*/{}
  , /*decltype(_impl_.chapterlist_)*/{}
  , /*decltype(_impl_.skilllist_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.accountid_)*/uint64_t{0u}
  , /*decltype(_impl_.retcode_)*/0u
  , /*decltype(_impl_.carrer_)*/0
  , /*decltype(_impl_.roleid_)*/uint64_t{0u}
  , /*decltype(_impl_.exp_)*/int64_t{0}
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.viplvl_)*/0
  , /*decltype(_impl_.fightvalue_)*/int64_t{0}
  , /*decltype(_impl_.vipexp_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RoleLoginAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RoleLoginAckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RoleLoginAckDefaultTypeInternal() {}
  union {
    RoleLoginAck _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RoleLoginAckDefaultTypeInternal _RoleLoginAck_default_instance_;
}  // namespace proto
}  // namespace symphony
static ::_pb::Metadata file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[22];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto = nullptr;

const uint32_t TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagItem, _impl_.itemguid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagItem, _impl_.itemid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagItem, _impl_.itemnum_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagItem, _impl_.bind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::BagChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.equipid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.strengthlvl_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.refinelevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.starlevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.refineexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.starexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipItem, _impl_.isusing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::EquipChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.gemid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.strengthlvl_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.refinelevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.starlevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.refineexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.starexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemItem, _impl_.pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GemChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.petid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.strengthlvl_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.refinelevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.starlevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.refineexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.starexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetItem, _impl_.isusing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PetChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.partnerid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.strengthlvl_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.refinelevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.starlevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.refineexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.starexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerItem, _impl_.setpos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::PartnerChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.mountid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.strengthlvl_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.refinelevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.starlevel_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.refineexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.starexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountItem, _impl_.isusing_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MountChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.guid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.mailtype_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.title_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.content_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.sender_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.itemid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailItem, _impl_.itemnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::MailChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::TaskItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::TaskItem, _impl_.taskid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::TaskChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::TaskChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::TaskChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CopyItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CopyItem, _impl_.copyid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CopyItem, _impl_.starnum_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CopyItem, _impl_.battlecnt_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::CopyItem, _impl_.resetcnt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ChapterItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ChapterItem, _impl_.chapterid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ChapterItem, _impl_.staraward_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ChapterItem, _impl_.sceneaward_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ChapterItem, _impl_.copytype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ActionItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ActionItem, _impl_.action_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::ActionItem, _impl_.actime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GuideItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::GuideItem, _impl_.id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::SkillChangeNty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::SkillChangeNty, _impl_.changelist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::SkillChangeNty, _impl_.removelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.retcode_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.accountid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.roleid_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.carrer_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.exp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.viplvl_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.vipexp_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.fightvalue_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.actionlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.equiplist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.gemlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.petlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.partnerlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.mountlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.bagitemlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.maillist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.tasklist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.copylist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.chapterlist_),
  PROTOBUF_FIELD_OFFSET(::symphony::proto::RoleLoginAck, _impl_.skilllist_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::symphony::proto::BagItem)},
  { 11, -1, -1, sizeof(::symphony::proto::BagChangeNty)},
  { 19, -1, -1, sizeof(::symphony::proto::EquipItem)},
  { 33, -1, -1, sizeof(::symphony::proto::EquipChangeNty)},
  { 41, -1, -1, sizeof(::symphony::proto::GemItem)},
  { 55, -1, -1, sizeof(::symphony::proto::GemChangeNty)},
  { 63, -1, -1, sizeof(::symphony::proto::PetItem)},
  { 77, -1, -1, sizeof(::symphony::proto::PetChangeNty)},
  { 85, -1, -1, sizeof(::symphony::proto::PartnerItem)},
  { 99, -1, -1, sizeof(::symphony::proto::PartnerChangeNty)},
  { 107, -1, -1, sizeof(::symphony::proto::MountItem)},
  { 121, -1, -1, sizeof(::symphony::proto::MountChangeNty)},
  { 129, -1, -1, sizeof(::symphony::proto::MailItem)},
  { 143, -1, -1, sizeof(::symphony::proto::MailChangeNty)},
  { 151, -1, -1, sizeof(::symphony::proto::TaskItem)},
  { 158, -1, -1, sizeof(::symphony::proto::TaskChangeNty)},
  { 166, -1, -1, sizeof(::symphony::proto::CopyItem)},
  { 176, -1, -1, sizeof(::symphony::proto::ChapterItem)},
  { 186, -1, -1, sizeof(::symphony::proto::ActionItem)},
  { 194, -1, -1, sizeof(::symphony::proto::GuideItem)},
  { 201, -1, -1, sizeof(::symphony::proto::SkillChangeNty)},
  { 209, -1, -1, sizeof(::symphony::proto::RoleLoginAck)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::symphony::proto::_BagItem_default_instance_._instance,
  &::symphony::proto::_BagChangeNty_default_instance_._instance,
  &::symphony::proto::_EquipItem_default_instance_._instance,
  &::symphony::proto::_EquipChangeNty_default_instance_._instance,
  &::symphony::proto::_GemItem_default_instance_._instance,
  &::symphony::proto::_GemChangeNty_default_instance_._instance,
  &::symphony::proto::_PetItem_default_instance_._instance,
  &::symphony::proto::_PetChangeNty_default_instance_._instance,
  &::symphony::proto::_PartnerItem_default_instance_._instance,
  &::symphony::proto::_PartnerChangeNty_default_instance_._instance,
  &::symphony::proto::_MountItem_default_instance_._instance,
  &::symphony::proto::_MountChangeNty_default_instance_._instance,
  &::symphony::proto::_MailItem_default_instance_._instance,
  &::symphony::proto::_MailChangeNty_default_instance_._instance,
  &::symphony::proto::_TaskItem_default_instance_._instance,
  &::symphony::proto::_TaskChangeNty_default_instance_._instance,
  &::symphony::proto::_CopyItem_default_instance_._instance,
  &::symphony::proto::_ChapterItem_default_instance_._instance,
  &::symphony::proto::_ActionItem_default_instance_._instance,
  &::symphony::proto::_GuideItem_default_instance_._instance,
  &::symphony::proto::_SkillChangeNty_default_instance_._instance,
  &::symphony::proto::_RoleLoginAck_default_instance_._instance,
};

const char descriptor_table_protodef_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\'symphony/proto/msg_login_clt_data.prot"
  "o\022\016symphony.proto\032\035symphony/proto/msg_ba"
  "se.proto\"X\n\007BagItem\022\014\n\004Guid\030\001 \001(\004\022\020\n\010Ite"
  "mGuid\030\002 \001(\004\022\016\n\006ItemID\030\003 \001(\005\022\017\n\007ItemNum\030\004"
  " \001(\003\022\014\n\004Bind\030\005 \001(\010\"O\n\014BagChangeNty\022+\n\nCh"
  "angeList\030\001 \003(\0132\027.symphony.proto.BagItem\022"
  "\022\n\nRemoveList\030\002 \003(\004\"\234\001\n\tEquipItem\022\014\n\004Gui"
  "d\030\001 \001(\004\022\017\n\007EquipID\030\002 \001(\005\022\023\n\013StrengthLvl\030"
  "\003 \001(\005\022\023\n\013RefineLevel\030\004 \001(\005\022\021\n\tStarLevel\030"
  "\005 \001(\005\022\021\n\tRefineExp\030\006 \001(\005\022\017\n\007StarExp\030\007 \001("
  "\005\022\017\n\007IsUsing\030\010 \001(\005\"S\n\016EquipChangeNty\022-\n\n"
  "ChangeList\030\001 \003(\0132\031.symphony.proto.EquipI"
  "tem\022\022\n\nRemoveList\030\002 \003(\004\"\224\001\n\007GemItem\022\014\n\004G"
  "uid\030\001 \001(\004\022\r\n\005GemID\030\002 \001(\005\022\023\n\013StrengthLvl\030"
  "\003 \001(\005\022\023\n\013RefineLevel\030\004 \001(\005\022\021\n\tStarLevel\030"
  "\005 \001(\005\022\021\n\tRefineExp\030\006 \001(\005\022\017\n\007StarExp\030\007 \001("
  "\005\022\013\n\003Pos\030\010 \001(\005\"O\n\014GemChangeNty\022+\n\nChange"
  "List\030\001 \003(\0132\027.symphony.proto.GemItem\022\022\n\nR"
  "emoveList\030\002 \003(\004\"\230\001\n\007PetItem\022\014\n\004Guid\030\001 \001("
  "\004\022\r\n\005PetID\030\002 \001(\005\022\023\n\013StrengthLvl\030\003 \001(\005\022\023\n"
  "\013RefineLevel\030\004 \001(\005\022\021\n\tStarLevel\030\005 \001(\005\022\021\n"
  "\tRefineExp\030\006 \001(\005\022\017\n\007StarExp\030\007 \001(\005\022\017\n\007IsU"
  "sing\030\010 \001(\005\"O\n\014PetChangeNty\022+\n\nChangeList"
  "\030\001 \003(\0132\027.symphony.proto.PetItem\022\022\n\nRemov"
  "eList\030\002 \003(\004\"\237\001\n\013PartnerItem\022\014\n\004Guid\030\001 \001("
  "\004\022\021\n\tPartnerID\030\002 \001(\005\022\023\n\013StrengthLvl\030\003 \001("
  "\005\022\023\n\013RefineLevel\030\004 \001(\005\022\021\n\tStarLevel\030\005 \001("
  "\005\022\021\n\tRefineExp\030\006 \001(\005\022\017\n\007StarExp\030\007 \001(\005\022\016\n"
  "\006SetPos\030\010 \001(\005\"W\n\020PartnerChangeNty\022/\n\nCha"
  "ngeList\030\001 \003(\0132\033.symphony.proto.PartnerIt"
  "em\022\022\n\nRemoveList\030\002 \003(\004\"\234\001\n\tMountItem\022\014\n\004"
  "Guid\030\001 \001(\004\022\017\n\007MountID\030\002 \001(\005\022\023\n\013StrengthL"
  "vl\030\003 \001(\005\022\023\n\013RefineLevel\030\004 \001(\005\022\021\n\tStarLev"
  "el\030\005 \001(\005\022\021\n\tRefineExp\030\006 \001(\005\022\017\n\007StarExp\030\007"
  " \001(\005\022\017\n\007IsUsing\030\010 \001(\005\"S\n\016MountChangeNty\022"
  "-\n\nChangeList\030\001 \003(\0132\031.symphony.proto.Mou"
  "ntItem\022\022\n\nRemoveList\030\002 \003(\004\"\213\001\n\010MailItem\022"
  "\014\n\004Guid\030\001 \001(\004\022\020\n\010MailType\030\002 \001(\005\022\016\n\006Statu"
  "s\030\003 \001(\005\022\r\n\005Title\030\004 \001(\t\022\017\n\007Content\030\005 \001(\t\022"
  "\016\n\006Sender\030\006 \001(\t\022\016\n\006ItemID\030\010 \003(\005\022\017\n\007ItemN"
  "um\030\t \003(\005\"Q\n\rMailChangeNty\022,\n\nChangeList\030"
  "\001 \003(\0132\030.symphony.proto.MailItem\022\022\n\nRemov"
  "eList\030\002 \003(\004\"\032\n\010TaskItem\022\016\n\006TaskID\030\001 \001(\r\""
  "Q\n\rTaskChangeNty\022,\n\nChangeList\030\001 \003(\0132\030.s"
  "ymphony.proto.TaskItem\022\022\n\nRemoveList\030\002 \003"
  "(\004\"P\n\010CopyItem\022\016\n\006CopyID\030\001 \001(\r\022\017\n\007StarNu"
  "m\030\002 \001(\005\022\021\n\tBattleCnt\030\003 \001(\005\022\020\n\010ResetCnt\030\004"
  " \001(\005\"Y\n\013ChapterItem\022\021\n\tChapterID\030\001 \001(\r\022\021"
  "\n\tStarAward\030\002 \001(\r\022\022\n\nSceneAward\030\003 \001(\r\022\020\n"
  "\010CopyType\030\004 \001(\r\",\n\nActionItem\022\016\n\006Action\030"
  "\001 \001(\003\022\016\n\006Actime\030\002 \001(\003\"\027\n\tGuideItem\022\n\n\002Id"
  "\030\001 \001(\005\"S\n\016SkillChangeNty\022-\n\nChangeList\030\001"
  " \003(\0132\031.symphony.proto.SkillItem\022\022\n\nRemov"
  "eList\030\002 \003(\004\"\324\005\n\014RoleLoginAck\022\017\n\007RetCode\030"
  "\001 \001(\r\022\021\n\tAccountID\030\002 \001(\004\022\016\n\006RoleID\030\003 \001(\004"
  "\022\016\n\006Carrer\030\004 \001(\005\022\r\n\005Level\030\005 \001(\005\022\013\n\003Exp\030\006"
  " \001(\003\022\014\n\004Name\030\007 \001(\t\022\016\n\006VipLvl\030\010 \001(\005\022\016\n\006Vi"
  "pExp\030\t \001(\005\022\022\n\nFightValue\030\n \001(\003\022.\n\nAction"
  "List\030\013 \003(\0132\032.symphony.proto.ActionItem\022,"
  "\n\tEquipList\030\014 \003(\0132\031.symphony.proto.Equip"
  "Item\022(\n\007GemList\030\r \003(\0132\027.symphony.proto.G"
  "emItem\022(\n\007PetList\030\016 \003(\0132\027.symphony.proto"
  ".PetItem\0220\n\013PartnerList\030\017 \003(\0132\033.symphony"
  ".proto.PartnerItem\022,\n\tMountList\030\020 \003(\0132\031."
  "symphony.proto.MountItem\022,\n\013BagItemList\030"
  "\021 \003(\0132\027.symphony.proto.BagItem\022*\n\010MailLi"
  "st\030\022 \003(\0132\030.symphony.proto.MailItem\022*\n\010Ta"
  "skList\030\023 \003(\0132\030.symphony.proto.TaskItem\022*"
  "\n\010CopyList\030\024 \003(\0132\030.symphony.proto.CopyIt"
  "em\0220\n\013ChapterList\030\025 \003(\0132\033.symphony.proto"
  ".ChapterItem\022,\n\tSkillList\030\026 \003(\0132\031.sympho"
  "ny.proto.SkillItemb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_deps[1] = {
  &::descriptor_table_symphony_2fproto_2fmsg_5fbase_2eproto,
};
static ::_pbi::once_flag descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto = {
    false, false, 2866, descriptor_table_protodef_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto,
    "symphony/proto/msg_login_clt_data.proto",
    &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once, descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_deps, 1, 22,
    schemas, file_default_instances, TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto::offsets,
    file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto, file_level_enum_descriptors_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto,
    file_level_service_descriptors_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter() {
  return &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto(&descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto);
namespace symphony {
namespace proto {

// ===================================================================

class BagItem::_Internal {
 public:
};

BagItem::BagItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.BagItem)
}
BagItem::BagItem(const BagItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BagItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){}
    , decltype(_impl_.itemguid_){}
    , decltype(_impl_.itemnum_){}
    , decltype(_impl_.itemid_){}
    , decltype(_impl_.bind_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.bind_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.bind_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.BagItem)
}

inline void BagItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.itemguid_){uint64_t{0u}}
    , decltype(_impl_.itemnum_){int64_t{0}}
    , decltype(_impl_.itemid_){0}
    , decltype(_impl_.bind_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BagItem::~BagItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.BagItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BagItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void BagItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BagItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.BagItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.bind_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.bind_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BagItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 ItemGuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.itemguid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ItemID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.itemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 ItemNum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.itemnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool Bind = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.bind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BagItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.BagItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // uint64 ItemGuid = 2;
  if (this->_internal_itemguid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_itemguid(), target);
  }

  // int32 ItemID = 3;
  if (this->_internal_itemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_itemid(), target);
  }

  // int64 ItemNum = 4;
  if (this->_internal_itemnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_itemnum(), target);
  }

  // bool Bind = 5;
  if (this->_internal_bind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_bind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.BagItem)
  return target;
}

size_t BagItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.BagItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // uint64 ItemGuid = 2;
  if (this->_internal_itemguid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_itemguid());
  }

  // int64 ItemNum = 4;
  if (this->_internal_itemnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_itemnum());
  }

  // int32 ItemID = 3;
  if (this->_internal_itemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_itemid());
  }

  // bool Bind = 5;
  if (this->_internal_bind() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BagItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BagItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BagItem::GetClassData() const { return &_class_data_; }


void BagItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BagItem*>(&to_msg);
  auto& from = static_cast<const BagItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.BagItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_itemguid() != 0) {
    _this->_internal_set_itemguid(from._internal_itemguid());
  }
  if (from._internal_itemnum() != 0) {
    _this->_internal_set_itemnum(from._internal_itemnum());
  }
  if (from._internal_itemid() != 0) {
    _this->_internal_set_itemid(from._internal_itemid());
  }
  if (from._internal_bind() != 0) {
    _this->_internal_set_bind(from._internal_bind());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BagItem::CopyFrom(const BagItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.BagItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagItem::IsInitialized() const {
  return true;
}

void BagItem::InternalSwap(BagItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BagItem, _impl_.bind_)
      + sizeof(BagItem::_impl_.bind_)
      - PROTOBUF_FIELD_OFFSET(BagItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BagItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[0]);
}

// ===================================================================

class BagChangeNty::_Internal {
 public:
};

BagChangeNty::BagChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.BagChangeNty)
}
BagChangeNty::BagChangeNty(const BagChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BagChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.BagChangeNty)
}

inline void BagChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BagChangeNty::~BagChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.BagChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BagChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void BagChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BagChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.BagChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BagChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.BagItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BagChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.BagChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.BagItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.BagChangeNty)
  return target;
}

size_t BagChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.BagChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.BagItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BagChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BagChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BagChangeNty::GetClassData() const { return &_class_data_; }


void BagChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BagChangeNty*>(&to_msg);
  auto& from = static_cast<const BagChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.BagChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BagChangeNty::CopyFrom(const BagChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.BagChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BagChangeNty::IsInitialized() const {
  return true;
}

void BagChangeNty::InternalSwap(BagChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BagChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[1]);
}

// ===================================================================

class EquipItem::_Internal {
 public:
};

EquipItem::EquipItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.EquipItem)
}
EquipItem::EquipItem(const EquipItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){}
    , decltype(_impl_.equipid_){}
    , decltype(_impl_.strengthlvl_){}
    , decltype(_impl_.refinelevel_){}
    , decltype(_impl_.starlevel_){}
    , decltype(_impl_.refineexp_){}
    , decltype(_impl_.starexp_){}
    , decltype(_impl_.isusing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isusing_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.isusing_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.EquipItem)
}

inline void EquipItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.equipid_){0}
    , decltype(_impl_.strengthlvl_){0}
    , decltype(_impl_.refinelevel_){0}
    , decltype(_impl_.starlevel_){0}
    , decltype(_impl_.refineexp_){0}
    , decltype(_impl_.starexp_){0}
    , decltype(_impl_.isusing_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipItem::~EquipItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.EquipItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void EquipItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.EquipItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isusing_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.isusing_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 EquipID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.equipid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StrengthLvl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.strengthlvl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.refinelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.starlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineExp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.refineexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarExp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.starexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 IsUsing = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.isusing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.EquipItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // int32 EquipID = 2;
  if (this->_internal_equipid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_equipid(), target);
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_strengthlvl(), target);
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_refinelevel(), target);
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_starlevel(), target);
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_refineexp(), target);
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_starexp(), target);
  }

  // int32 IsUsing = 8;
  if (this->_internal_isusing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_isusing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.EquipItem)
  return target;
}

size_t EquipItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.EquipItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // int32 EquipID = 2;
  if (this->_internal_equipid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_equipid());
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_strengthlvl());
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refinelevel());
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starlevel());
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refineexp());
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starexp());
  }

  // int32 IsUsing = 8;
  if (this->_internal_isusing() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_isusing());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipItem::GetClassData() const { return &_class_data_; }


void EquipItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipItem*>(&to_msg);
  auto& from = static_cast<const EquipItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.EquipItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_equipid() != 0) {
    _this->_internal_set_equipid(from._internal_equipid());
  }
  if (from._internal_strengthlvl() != 0) {
    _this->_internal_set_strengthlvl(from._internal_strengthlvl());
  }
  if (from._internal_refinelevel() != 0) {
    _this->_internal_set_refinelevel(from._internal_refinelevel());
  }
  if (from._internal_starlevel() != 0) {
    _this->_internal_set_starlevel(from._internal_starlevel());
  }
  if (from._internal_refineexp() != 0) {
    _this->_internal_set_refineexp(from._internal_refineexp());
  }
  if (from._internal_starexp() != 0) {
    _this->_internal_set_starexp(from._internal_starexp());
  }
  if (from._internal_isusing() != 0) {
    _this->_internal_set_isusing(from._internal_isusing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipItem::CopyFrom(const EquipItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.EquipItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipItem::IsInitialized() const {
  return true;
}

void EquipItem::InternalSwap(EquipItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EquipItem, _impl_.isusing_)
      + sizeof(EquipItem::_impl_.isusing_)
      - PROTOBUF_FIELD_OFFSET(EquipItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[2]);
}

// ===================================================================

class EquipChangeNty::_Internal {
 public:
};

EquipChangeNty::EquipChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.EquipChangeNty)
}
EquipChangeNty::EquipChangeNty(const EquipChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  EquipChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.EquipChangeNty)
}

inline void EquipChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

EquipChangeNty::~EquipChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.EquipChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EquipChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void EquipChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void EquipChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.EquipChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EquipChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.EquipItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EquipChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.EquipChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.EquipItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.EquipChangeNty)
  return target;
}

size_t EquipChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.EquipChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.EquipItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EquipChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    EquipChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EquipChangeNty::GetClassData() const { return &_class_data_; }


void EquipChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<EquipChangeNty*>(&to_msg);
  auto& from = static_cast<const EquipChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.EquipChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EquipChangeNty::CopyFrom(const EquipChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.EquipChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EquipChangeNty::IsInitialized() const {
  return true;
}

void EquipChangeNty::InternalSwap(EquipChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EquipChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[3]);
}

// ===================================================================

class GemItem::_Internal {
 public:
};

GemItem::GemItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.GemItem)
}
GemItem::GemItem(const GemItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GemItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){}
    , decltype(_impl_.gemid_){}
    , decltype(_impl_.strengthlvl_){}
    , decltype(_impl_.refinelevel_){}
    , decltype(_impl_.starlevel_){}
    , decltype(_impl_.refineexp_){}
    , decltype(_impl_.starexp_){}
    , decltype(_impl_.pos_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.pos_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.pos_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.GemItem)
}

inline void GemItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.gemid_){0}
    , decltype(_impl_.strengthlvl_){0}
    , decltype(_impl_.refinelevel_){0}
    , decltype(_impl_.starlevel_){0}
    , decltype(_impl_.refineexp_){0}
    , decltype(_impl_.starexp_){0}
    , decltype(_impl_.pos_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GemItem::~GemItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.GemItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GemItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GemItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GemItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.GemItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.pos_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.pos_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GemItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 GemID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.gemid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StrengthLvl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.strengthlvl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.refinelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.starlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineExp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.refineexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarExp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.starexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Pos = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.pos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GemItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.GemItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // int32 GemID = 2;
  if (this->_internal_gemid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_gemid(), target);
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_strengthlvl(), target);
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_refinelevel(), target);
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_starlevel(), target);
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_refineexp(), target);
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_starexp(), target);
  }

  // int32 Pos = 8;
  if (this->_internal_pos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_pos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.GemItem)
  return target;
}

size_t GemItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.GemItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // int32 GemID = 2;
  if (this->_internal_gemid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_gemid());
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_strengthlvl());
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refinelevel());
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starlevel());
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refineexp());
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starexp());
  }

  // int32 Pos = 8;
  if (this->_internal_pos() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GemItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GemItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GemItem::GetClassData() const { return &_class_data_; }


void GemItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GemItem*>(&to_msg);
  auto& from = static_cast<const GemItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.GemItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_gemid() != 0) {
    _this->_internal_set_gemid(from._internal_gemid());
  }
  if (from._internal_strengthlvl() != 0) {
    _this->_internal_set_strengthlvl(from._internal_strengthlvl());
  }
  if (from._internal_refinelevel() != 0) {
    _this->_internal_set_refinelevel(from._internal_refinelevel());
  }
  if (from._internal_starlevel() != 0) {
    _this->_internal_set_starlevel(from._internal_starlevel());
  }
  if (from._internal_refineexp() != 0) {
    _this->_internal_set_refineexp(from._internal_refineexp());
  }
  if (from._internal_starexp() != 0) {
    _this->_internal_set_starexp(from._internal_starexp());
  }
  if (from._internal_pos() != 0) {
    _this->_internal_set_pos(from._internal_pos());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GemItem::CopyFrom(const GemItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.GemItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GemItem::IsInitialized() const {
  return true;
}

void GemItem::InternalSwap(GemItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GemItem, _impl_.pos_)
      + sizeof(GemItem::_impl_.pos_)
      - PROTOBUF_FIELD_OFFSET(GemItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GemItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[4]);
}

// ===================================================================

class GemChangeNty::_Internal {
 public:
};

GemChangeNty::GemChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.GemChangeNty)
}
GemChangeNty::GemChangeNty(const GemChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GemChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.GemChangeNty)
}

inline void GemChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GemChangeNty::~GemChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.GemChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GemChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void GemChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GemChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.GemChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GemChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.GemItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GemChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.GemChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.GemItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.GemChangeNty)
  return target;
}

size_t GemChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.GemChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.GemItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GemChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GemChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GemChangeNty::GetClassData() const { return &_class_data_; }


void GemChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GemChangeNty*>(&to_msg);
  auto& from = static_cast<const GemChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.GemChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GemChangeNty::CopyFrom(const GemChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.GemChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GemChangeNty::IsInitialized() const {
  return true;
}

void GemChangeNty::InternalSwap(GemChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GemChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[5]);
}

// ===================================================================

class PetItem::_Internal {
 public:
};

PetItem::PetItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.PetItem)
}
PetItem::PetItem(const PetItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PetItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){}
    , decltype(_impl_.petid_){}
    , decltype(_impl_.strengthlvl_){}
    , decltype(_impl_.refinelevel_){}
    , decltype(_impl_.starlevel_){}
    , decltype(_impl_.refineexp_){}
    , decltype(_impl_.starexp_){}
    , decltype(_impl_.isusing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isusing_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.isusing_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.PetItem)
}

inline void PetItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.petid_){0}
    , decltype(_impl_.strengthlvl_){0}
    , decltype(_impl_.refinelevel_){0}
    , decltype(_impl_.starlevel_){0}
    , decltype(_impl_.refineexp_){0}
    , decltype(_impl_.starexp_){0}
    , decltype(_impl_.isusing_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PetItem::~PetItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.PetItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PetItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PetItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PetItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.PetItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isusing_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.isusing_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PetItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 PetID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.petid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StrengthLvl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.strengthlvl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.refinelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.starlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineExp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.refineexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarExp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.starexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 IsUsing = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.isusing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PetItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.PetItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // int32 PetID = 2;
  if (this->_internal_petid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_petid(), target);
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_strengthlvl(), target);
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_refinelevel(), target);
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_starlevel(), target);
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_refineexp(), target);
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_starexp(), target);
  }

  // int32 IsUsing = 8;
  if (this->_internal_isusing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_isusing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.PetItem)
  return target;
}

size_t PetItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.PetItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // int32 PetID = 2;
  if (this->_internal_petid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_petid());
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_strengthlvl());
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refinelevel());
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starlevel());
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refineexp());
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starexp());
  }

  // int32 IsUsing = 8;
  if (this->_internal_isusing() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_isusing());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PetItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PetItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PetItem::GetClassData() const { return &_class_data_; }


void PetItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PetItem*>(&to_msg);
  auto& from = static_cast<const PetItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.PetItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_petid() != 0) {
    _this->_internal_set_petid(from._internal_petid());
  }
  if (from._internal_strengthlvl() != 0) {
    _this->_internal_set_strengthlvl(from._internal_strengthlvl());
  }
  if (from._internal_refinelevel() != 0) {
    _this->_internal_set_refinelevel(from._internal_refinelevel());
  }
  if (from._internal_starlevel() != 0) {
    _this->_internal_set_starlevel(from._internal_starlevel());
  }
  if (from._internal_refineexp() != 0) {
    _this->_internal_set_refineexp(from._internal_refineexp());
  }
  if (from._internal_starexp() != 0) {
    _this->_internal_set_starexp(from._internal_starexp());
  }
  if (from._internal_isusing() != 0) {
    _this->_internal_set_isusing(from._internal_isusing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PetItem::CopyFrom(const PetItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.PetItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetItem::IsInitialized() const {
  return true;
}

void PetItem::InternalSwap(PetItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PetItem, _impl_.isusing_)
      + sizeof(PetItem::_impl_.isusing_)
      - PROTOBUF_FIELD_OFFSET(PetItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PetItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[6]);
}

// ===================================================================

class PetChangeNty::_Internal {
 public:
};

PetChangeNty::PetChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.PetChangeNty)
}
PetChangeNty::PetChangeNty(const PetChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PetChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.PetChangeNty)
}

inline void PetChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PetChangeNty::~PetChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.PetChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PetChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void PetChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PetChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.PetChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PetChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.PetItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PetChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.PetChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.PetItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.PetChangeNty)
  return target;
}

size_t PetChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.PetChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.PetItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PetChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PetChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PetChangeNty::GetClassData() const { return &_class_data_; }


void PetChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PetChangeNty*>(&to_msg);
  auto& from = static_cast<const PetChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.PetChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PetChangeNty::CopyFrom(const PetChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.PetChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PetChangeNty::IsInitialized() const {
  return true;
}

void PetChangeNty::InternalSwap(PetChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PetChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[7]);
}

// ===================================================================

class PartnerItem::_Internal {
 public:
};

PartnerItem::PartnerItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.PartnerItem)
}
PartnerItem::PartnerItem(const PartnerItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PartnerItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){}
    , decltype(_impl_.partnerid_){}
    , decltype(_impl_.strengthlvl_){}
    , decltype(_impl_.refinelevel_){}
    , decltype(_impl_.starlevel_){}
    , decltype(_impl_.refineexp_){}
    , decltype(_impl_.starexp_){}
    , decltype(_impl_.setpos_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.setpos_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.setpos_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.PartnerItem)
}

inline void PartnerItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.partnerid_){0}
    , decltype(_impl_.strengthlvl_){0}
    , decltype(_impl_.refinelevel_){0}
    , decltype(_impl_.starlevel_){0}
    , decltype(_impl_.refineexp_){0}
    , decltype(_impl_.starexp_){0}
    , decltype(_impl_.setpos_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PartnerItem::~PartnerItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.PartnerItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PartnerItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PartnerItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PartnerItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.PartnerItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.setpos_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.setpos_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PartnerItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 PartnerID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.partnerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StrengthLvl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.strengthlvl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.refinelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.starlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineExp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.refineexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarExp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.starexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 SetPos = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.setpos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PartnerItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.PartnerItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // int32 PartnerID = 2;
  if (this->_internal_partnerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_partnerid(), target);
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_strengthlvl(), target);
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_refinelevel(), target);
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_starlevel(), target);
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_refineexp(), target);
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_starexp(), target);
  }

  // int32 SetPos = 8;
  if (this->_internal_setpos() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_setpos(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.PartnerItem)
  return target;
}

size_t PartnerItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.PartnerItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // int32 PartnerID = 2;
  if (this->_internal_partnerid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_partnerid());
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_strengthlvl());
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refinelevel());
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starlevel());
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refineexp());
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starexp());
  }

  // int32 SetPos = 8;
  if (this->_internal_setpos() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_setpos());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PartnerItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PartnerItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PartnerItem::GetClassData() const { return &_class_data_; }


void PartnerItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PartnerItem*>(&to_msg);
  auto& from = static_cast<const PartnerItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.PartnerItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_partnerid() != 0) {
    _this->_internal_set_partnerid(from._internal_partnerid());
  }
  if (from._internal_strengthlvl() != 0) {
    _this->_internal_set_strengthlvl(from._internal_strengthlvl());
  }
  if (from._internal_refinelevel() != 0) {
    _this->_internal_set_refinelevel(from._internal_refinelevel());
  }
  if (from._internal_starlevel() != 0) {
    _this->_internal_set_starlevel(from._internal_starlevel());
  }
  if (from._internal_refineexp() != 0) {
    _this->_internal_set_refineexp(from._internal_refineexp());
  }
  if (from._internal_starexp() != 0) {
    _this->_internal_set_starexp(from._internal_starexp());
  }
  if (from._internal_setpos() != 0) {
    _this->_internal_set_setpos(from._internal_setpos());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PartnerItem::CopyFrom(const PartnerItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.PartnerItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartnerItem::IsInitialized() const {
  return true;
}

void PartnerItem::InternalSwap(PartnerItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PartnerItem, _impl_.setpos_)
      + sizeof(PartnerItem::_impl_.setpos_)
      - PROTOBUF_FIELD_OFFSET(PartnerItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PartnerItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[8]);
}

// ===================================================================

class PartnerChangeNty::_Internal {
 public:
};

PartnerChangeNty::PartnerChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.PartnerChangeNty)
}
PartnerChangeNty::PartnerChangeNty(const PartnerChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PartnerChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.PartnerChangeNty)
}

inline void PartnerChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PartnerChangeNty::~PartnerChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.PartnerChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PartnerChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void PartnerChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PartnerChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.PartnerChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PartnerChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.PartnerItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PartnerChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.PartnerChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.PartnerItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.PartnerChangeNty)
  return target;
}

size_t PartnerChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.PartnerChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.PartnerItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PartnerChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PartnerChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PartnerChangeNty::GetClassData() const { return &_class_data_; }


void PartnerChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PartnerChangeNty*>(&to_msg);
  auto& from = static_cast<const PartnerChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.PartnerChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PartnerChangeNty::CopyFrom(const PartnerChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.PartnerChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PartnerChangeNty::IsInitialized() const {
  return true;
}

void PartnerChangeNty::InternalSwap(PartnerChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PartnerChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[9]);
}

// ===================================================================

class MountItem::_Internal {
 public:
};

MountItem::MountItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MountItem)
}
MountItem::MountItem(const MountItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MountItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){}
    , decltype(_impl_.mountid_){}
    , decltype(_impl_.strengthlvl_){}
    , decltype(_impl_.refinelevel_){}
    , decltype(_impl_.starlevel_){}
    , decltype(_impl_.refineexp_){}
    , decltype(_impl_.starexp_){}
    , decltype(_impl_.isusing_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isusing_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.isusing_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MountItem)
}

inline void MountItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.mountid_){0}
    , decltype(_impl_.strengthlvl_){0}
    , decltype(_impl_.refinelevel_){0}
    , decltype(_impl_.starlevel_){0}
    , decltype(_impl_.refineexp_){0}
    , decltype(_impl_.starexp_){0}
    , decltype(_impl_.isusing_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MountItem::~MountItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.MountItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MountItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void MountItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MountItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MountItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isusing_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.isusing_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 MountID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.mountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StrengthLvl = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.strengthlvl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineLevel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.refinelevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarLevel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.starlevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 RefineExp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.refineexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarExp = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.starexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 IsUsing = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.isusing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MountItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MountItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // int32 MountID = 2;
  if (this->_internal_mountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_mountid(), target);
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_strengthlvl(), target);
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_refinelevel(), target);
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_starlevel(), target);
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_refineexp(), target);
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_starexp(), target);
  }

  // int32 IsUsing = 8;
  if (this->_internal_isusing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_isusing(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MountItem)
  return target;
}

size_t MountItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MountItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // int32 MountID = 2;
  if (this->_internal_mountid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mountid());
  }

  // int32 StrengthLvl = 3;
  if (this->_internal_strengthlvl() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_strengthlvl());
  }

  // int32 RefineLevel = 4;
  if (this->_internal_refinelevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refinelevel());
  }

  // int32 StarLevel = 5;
  if (this->_internal_starlevel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starlevel());
  }

  // int32 RefineExp = 6;
  if (this->_internal_refineexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_refineexp());
  }

  // int32 StarExp = 7;
  if (this->_internal_starexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starexp());
  }

  // int32 IsUsing = 8;
  if (this->_internal_isusing() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_isusing());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MountItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MountItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MountItem::GetClassData() const { return &_class_data_; }


void MountItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MountItem*>(&to_msg);
  auto& from = static_cast<const MountItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MountItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_mountid() != 0) {
    _this->_internal_set_mountid(from._internal_mountid());
  }
  if (from._internal_strengthlvl() != 0) {
    _this->_internal_set_strengthlvl(from._internal_strengthlvl());
  }
  if (from._internal_refinelevel() != 0) {
    _this->_internal_set_refinelevel(from._internal_refinelevel());
  }
  if (from._internal_starlevel() != 0) {
    _this->_internal_set_starlevel(from._internal_starlevel());
  }
  if (from._internal_refineexp() != 0) {
    _this->_internal_set_refineexp(from._internal_refineexp());
  }
  if (from._internal_starexp() != 0) {
    _this->_internal_set_starexp(from._internal_starexp());
  }
  if (from._internal_isusing() != 0) {
    _this->_internal_set_isusing(from._internal_isusing());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MountItem::CopyFrom(const MountItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MountItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountItem::IsInitialized() const {
  return true;
}

void MountItem::InternalSwap(MountItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MountItem, _impl_.isusing_)
      + sizeof(MountItem::_impl_.isusing_)
      - PROTOBUF_FIELD_OFFSET(MountItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MountItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[10]);
}

// ===================================================================

class MountChangeNty::_Internal {
 public:
};

MountChangeNty::MountChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MountChangeNty)
}
MountChangeNty::MountChangeNty(const MountChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MountChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MountChangeNty)
}

inline void MountChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MountChangeNty::~MountChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.MountChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MountChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void MountChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MountChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MountChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MountChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.MountItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MountChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MountChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.MountItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MountChangeNty)
  return target;
}

size_t MountChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MountChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.MountItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MountChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MountChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MountChangeNty::GetClassData() const { return &_class_data_; }


void MountChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MountChangeNty*>(&to_msg);
  auto& from = static_cast<const MountChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MountChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MountChangeNty::CopyFrom(const MountChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MountChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MountChangeNty::IsInitialized() const {
  return true;
}

void MountChangeNty::InternalSwap(MountChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MountChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[11]);
}

// ===================================================================

class MailItem::_Internal {
 public:
};

MailItem::MailItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MailItem)
}
MailItem::MailItem(const MailItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MailItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.itemid_){from._impl_.itemid_}
    , /*decltype(_impl_._itemid_cached_byte_size_)*/{0}
    , decltype(_impl_.itemnum_){from._impl_.itemnum_}
    , /*decltype(_impl_._itemnum_cached_byte_size_)*/{0}
    , decltype(_impl_.title_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.sender_){}
    , decltype(_impl_.guid_){}
    , decltype(_impl_.mailtype_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_title().empty()) {
    _this->_impl_.title_.Set(from._internal_title(), 
      _this->GetArenaForAllocation());
  }
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_content().empty()) {
    _this->_impl_.content_.Set(from._internal_content(), 
      _this->GetArenaForAllocation());
  }
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sender_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    _this->_impl_.sender_.Set(from._internal_sender(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.guid_, &from._impl_.guid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.status_) -
    reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.status_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MailItem)
}

inline void MailItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.itemid_){arena}
    , /*decltype(_impl_._itemid_cached_byte_size_)*/{0}
    , decltype(_impl_.itemnum_){arena}
    , /*decltype(_impl_._itemnum_cached_byte_size_)*/{0}
    , decltype(_impl_.title_){}
    , decltype(_impl_.content_){}
    , decltype(_impl_.sender_){}
    , decltype(_impl_.guid_){uint64_t{0u}}
    , decltype(_impl_.mailtype_){0}
    , decltype(_impl_.status_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.title_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.title_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.content_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.content_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.sender_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.sender_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MailItem::~MailItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.MailItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MailItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.itemid_.~RepeatedField();
  _impl_.itemnum_.~RepeatedField();
  _impl_.title_.Destroy();
  _impl_.content_.Destroy();
  _impl_.sender_.Destroy();
}

void MailItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MailItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MailItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.itemid_.Clear();
  _impl_.itemnum_.Clear();
  _impl_.title_.ClearToEmpty();
  _impl_.content_.ClearToEmpty();
  _impl_.sender_.ClearToEmpty();
  ::memset(&_impl_.guid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.guid_)) + sizeof(_impl_.status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MailItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 Guid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.guid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 MailType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.mailtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Status = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Title = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_title();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.MailItem.Title"));
        } else
          goto handle_unusual;
        continue;
      // string Content = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_content();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.MailItem.Content"));
        } else
          goto handle_unusual;
        continue;
      // string Sender = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_sender();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.MailItem.Sender"));
        } else
          goto handle_unusual;
        continue;
      // repeated int32 ItemID = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_itemid(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 64) {
          _internal_add_itemid(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated int32 ItemNum = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_itemnum(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 72) {
          _internal_add_itemnum(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MailItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MailItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_guid(), target);
  }

  // int32 MailType = 2;
  if (this->_internal_mailtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_mailtype(), target);
  }

  // int32 Status = 3;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_status(), target);
  }

  // string Title = 4;
  if (!this->_internal_title().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_title().data(), static_cast<int>(this->_internal_title().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.MailItem.Title");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_title(), target);
  }

  // string Content = 5;
  if (!this->_internal_content().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_content().data(), static_cast<int>(this->_internal_content().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.MailItem.Content");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_content(), target);
  }

  // string Sender = 6;
  if (!this->_internal_sender().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.MailItem.Sender");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_sender(), target);
  }

  // repeated int32 ItemID = 8;
  {
    int byte_size = _impl_._itemid_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          8, _internal_itemid(), byte_size, target);
    }
  }

  // repeated int32 ItemNum = 9;
  {
    int byte_size = _impl_._itemnum_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          9, _internal_itemnum(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MailItem)
  return target;
}

size_t MailItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MailItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 ItemID = 8;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.itemid_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._itemid_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 ItemNum = 9;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      Int32Size(this->_impl_.itemnum_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._itemnum_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string Title = 4;
  if (!this->_internal_title().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_title());
  }

  // string Content = 5;
  if (!this->_internal_content().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_content());
  }

  // string Sender = 6;
  if (!this->_internal_sender().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // uint64 Guid = 1;
  if (this->_internal_guid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_guid());
  }

  // int32 MailType = 2;
  if (this->_internal_mailtype() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mailtype());
  }

  // int32 Status = 3;
  if (this->_internal_status() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MailItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MailItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MailItem::GetClassData() const { return &_class_data_; }


void MailItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MailItem*>(&to_msg);
  auto& from = static_cast<const MailItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MailItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.itemid_.MergeFrom(from._impl_.itemid_);
  _this->_impl_.itemnum_.MergeFrom(from._impl_.itemnum_);
  if (!from._internal_title().empty()) {
    _this->_internal_set_title(from._internal_title());
  }
  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  if (!from._internal_sender().empty()) {
    _this->_internal_set_sender(from._internal_sender());
  }
  if (from._internal_guid() != 0) {
    _this->_internal_set_guid(from._internal_guid());
  }
  if (from._internal_mailtype() != 0) {
    _this->_internal_set_mailtype(from._internal_mailtype());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MailItem::CopyFrom(const MailItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MailItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailItem::IsInitialized() const {
  return true;
}

void MailItem::InternalSwap(MailItem* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.itemid_.InternalSwap(&other->_impl_.itemid_);
  _impl_.itemnum_.InternalSwap(&other->_impl_.itemnum_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.title_, lhs_arena,
      &other->_impl_.title_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.content_, lhs_arena,
      &other->_impl_.content_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.sender_, lhs_arena,
      &other->_impl_.sender_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MailItem, _impl_.status_)
      + sizeof(MailItem::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(MailItem, _impl_.guid_)>(
          reinterpret_cast<char*>(&_impl_.guid_),
          reinterpret_cast<char*>(&other->_impl_.guid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MailItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[12]);
}

// ===================================================================

class MailChangeNty::_Internal {
 public:
};

MailChangeNty::MailChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.MailChangeNty)
}
MailChangeNty::MailChangeNty(const MailChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MailChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.MailChangeNty)
}

inline void MailChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MailChangeNty::~MailChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.MailChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MailChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void MailChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MailChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.MailChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MailChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.MailItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MailChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.MailChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.MailItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.MailChangeNty)
  return target;
}

size_t MailChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.MailChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.MailItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MailChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MailChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MailChangeNty::GetClassData() const { return &_class_data_; }


void MailChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MailChangeNty*>(&to_msg);
  auto& from = static_cast<const MailChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.MailChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MailChangeNty::CopyFrom(const MailChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.MailChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MailChangeNty::IsInitialized() const {
  return true;
}

void MailChangeNty::InternalSwap(MailChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MailChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[13]);
}

// ===================================================================

class TaskItem::_Internal {
 public:
};

TaskItem::TaskItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.TaskItem)
}
TaskItem::TaskItem(const TaskItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TaskItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.taskid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.taskid_ = from._impl_.taskid_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.TaskItem)
}

inline void TaskItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.taskid_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TaskItem::~TaskItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.TaskItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TaskItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void TaskItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TaskItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.TaskItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.taskid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TaskItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 TaskID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.taskid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TaskItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.TaskItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TaskID = 1;
  if (this->_internal_taskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_taskid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.TaskItem)
  return target;
}

size_t TaskItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.TaskItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TaskID = 1;
  if (this->_internal_taskid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_taskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TaskItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TaskItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TaskItem::GetClassData() const { return &_class_data_; }


void TaskItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TaskItem*>(&to_msg);
  auto& from = static_cast<const TaskItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.TaskItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_taskid() != 0) {
    _this->_internal_set_taskid(from._internal_taskid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TaskItem::CopyFrom(const TaskItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.TaskItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskItem::IsInitialized() const {
  return true;
}

void TaskItem::InternalSwap(TaskItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.taskid_, other->_impl_.taskid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TaskItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[14]);
}

// ===================================================================

class TaskChangeNty::_Internal {
 public:
};

TaskChangeNty::TaskChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.TaskChangeNty)
}
TaskChangeNty::TaskChangeNty(const TaskChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  TaskChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.TaskChangeNty)
}

inline void TaskChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

TaskChangeNty::~TaskChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.TaskChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void TaskChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void TaskChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void TaskChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.TaskChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TaskChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.TaskItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TaskChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.TaskChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.TaskItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.TaskChangeNty)
  return target;
}

size_t TaskChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.TaskChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.TaskItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TaskChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    TaskChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TaskChangeNty::GetClassData() const { return &_class_data_; }


void TaskChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<TaskChangeNty*>(&to_msg);
  auto& from = static_cast<const TaskChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.TaskChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TaskChangeNty::CopyFrom(const TaskChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.TaskChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TaskChangeNty::IsInitialized() const {
  return true;
}

void TaskChangeNty::InternalSwap(TaskChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TaskChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[15]);
}

// ===================================================================

class CopyItem::_Internal {
 public:
};

CopyItem::CopyItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.CopyItem)
}
CopyItem::CopyItem(const CopyItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CopyItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.copyid_){}
    , decltype(_impl_.starnum_){}
    , decltype(_impl_.battlecnt_){}
    , decltype(_impl_.resetcnt_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.copyid_, &from._impl_.copyid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.resetcnt_) -
    reinterpret_cast<char*>(&_impl_.copyid_)) + sizeof(_impl_.resetcnt_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.CopyItem)
}

inline void CopyItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.copyid_){0u}
    , decltype(_impl_.starnum_){0}
    , decltype(_impl_.battlecnt_){0}
    , decltype(_impl_.resetcnt_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CopyItem::~CopyItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.CopyItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CopyItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CopyItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CopyItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.CopyItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.copyid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.resetcnt_) -
      reinterpret_cast<char*>(&_impl_.copyid_)) + sizeof(_impl_.resetcnt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CopyItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 CopyID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.copyid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 StarNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.starnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 BattleCnt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.battlecnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ResetCnt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.resetcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CopyItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.CopyItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CopyID = 1;
  if (this->_internal_copyid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_copyid(), target);
  }

  // int32 StarNum = 2;
  if (this->_internal_starnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_starnum(), target);
  }

  // int32 BattleCnt = 3;
  if (this->_internal_battlecnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_battlecnt(), target);
  }

  // int32 ResetCnt = 4;
  if (this->_internal_resetcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_resetcnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.CopyItem)
  return target;
}

size_t CopyItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.CopyItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 CopyID = 1;
  if (this->_internal_copyid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_copyid());
  }

  // int32 StarNum = 2;
  if (this->_internal_starnum() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_starnum());
  }

  // int32 BattleCnt = 3;
  if (this->_internal_battlecnt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_battlecnt());
  }

  // int32 ResetCnt = 4;
  if (this->_internal_resetcnt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_resetcnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CopyItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CopyItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CopyItem::GetClassData() const { return &_class_data_; }


void CopyItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CopyItem*>(&to_msg);
  auto& from = static_cast<const CopyItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.CopyItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_copyid() != 0) {
    _this->_internal_set_copyid(from._internal_copyid());
  }
  if (from._internal_starnum() != 0) {
    _this->_internal_set_starnum(from._internal_starnum());
  }
  if (from._internal_battlecnt() != 0) {
    _this->_internal_set_battlecnt(from._internal_battlecnt());
  }
  if (from._internal_resetcnt() != 0) {
    _this->_internal_set_resetcnt(from._internal_resetcnt());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CopyItem::CopyFrom(const CopyItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.CopyItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CopyItem::IsInitialized() const {
  return true;
}

void CopyItem::InternalSwap(CopyItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CopyItem, _impl_.resetcnt_)
      + sizeof(CopyItem::_impl_.resetcnt_)
      - PROTOBUF_FIELD_OFFSET(CopyItem, _impl_.copyid_)>(
          reinterpret_cast<char*>(&_impl_.copyid_),
          reinterpret_cast<char*>(&other->_impl_.copyid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CopyItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[16]);
}

// ===================================================================

class ChapterItem::_Internal {
 public:
};

ChapterItem::ChapterItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.ChapterItem)
}
ChapterItem::ChapterItem(const ChapterItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChapterItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.chapterid_){}
    , decltype(_impl_.staraward_){}
    , decltype(_impl_.sceneaward_){}
    , decltype(_impl_.copytype_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.chapterid_, &from._impl_.chapterid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.copytype_) -
    reinterpret_cast<char*>(&_impl_.chapterid_)) + sizeof(_impl_.copytype_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.ChapterItem)
}

inline void ChapterItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.chapterid_){0u}
    , decltype(_impl_.staraward_){0u}
    , decltype(_impl_.sceneaward_){0u}
    , decltype(_impl_.copytype_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChapterItem::~ChapterItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.ChapterItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChapterItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ChapterItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChapterItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.ChapterItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.chapterid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.copytype_) -
      reinterpret_cast<char*>(&_impl_.chapterid_)) + sizeof(_impl_.copytype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChapterItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ChapterID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.chapterid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StarAward = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.staraward_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SceneAward = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.sceneaward_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CopyType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.copytype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChapterItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.ChapterItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ChapterID = 1;
  if (this->_internal_chapterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_chapterid(), target);
  }

  // uint32 StarAward = 2;
  if (this->_internal_staraward() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_staraward(), target);
  }

  // uint32 SceneAward = 3;
  if (this->_internal_sceneaward() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_sceneaward(), target);
  }

  // uint32 CopyType = 4;
  if (this->_internal_copytype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_copytype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.ChapterItem)
  return target;
}

size_t ChapterItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.ChapterItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 ChapterID = 1;
  if (this->_internal_chapterid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_chapterid());
  }

  // uint32 StarAward = 2;
  if (this->_internal_staraward() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_staraward());
  }

  // uint32 SceneAward = 3;
  if (this->_internal_sceneaward() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_sceneaward());
  }

  // uint32 CopyType = 4;
  if (this->_internal_copytype() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_copytype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChapterItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChapterItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChapterItem::GetClassData() const { return &_class_data_; }


void ChapterItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChapterItem*>(&to_msg);
  auto& from = static_cast<const ChapterItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.ChapterItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_chapterid() != 0) {
    _this->_internal_set_chapterid(from._internal_chapterid());
  }
  if (from._internal_staraward() != 0) {
    _this->_internal_set_staraward(from._internal_staraward());
  }
  if (from._internal_sceneaward() != 0) {
    _this->_internal_set_sceneaward(from._internal_sceneaward());
  }
  if (from._internal_copytype() != 0) {
    _this->_internal_set_copytype(from._internal_copytype());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChapterItem::CopyFrom(const ChapterItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.ChapterItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChapterItem::IsInitialized() const {
  return true;
}

void ChapterItem::InternalSwap(ChapterItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChapterItem, _impl_.copytype_)
      + sizeof(ChapterItem::_impl_.copytype_)
      - PROTOBUF_FIELD_OFFSET(ChapterItem, _impl_.chapterid_)>(
          reinterpret_cast<char*>(&_impl_.chapterid_),
          reinterpret_cast<char*>(&other->_impl_.chapterid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChapterItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[17]);
}

// ===================================================================

class ActionItem::_Internal {
 public:
};

ActionItem::ActionItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.ActionItem)
}
ActionItem::ActionItem(const ActionItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ActionItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.action_){}
    , decltype(_impl_.actime_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.action_, &from._impl_.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.actime_) -
    reinterpret_cast<char*>(&_impl_.action_)) + sizeof(_impl_.actime_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.ActionItem)
}

inline void ActionItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.action_){int64_t{0}}
    , decltype(_impl_.actime_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ActionItem::~ActionItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.ActionItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ActionItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ActionItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ActionItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.ActionItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.actime_) -
      reinterpret_cast<char*>(&_impl_.action_)) + sizeof(_impl_.actime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 Action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.action_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 Actime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.actime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ActionItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.ActionItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 Action = 1;
  if (this->_internal_action() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_action(), target);
  }

  // int64 Actime = 2;
  if (this->_internal_actime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_actime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.ActionItem)
  return target;
}

size_t ActionItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.ActionItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 Action = 1;
  if (this->_internal_action() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_action());
  }

  // int64 Actime = 2;
  if (this->_internal_actime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_actime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ActionItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ActionItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ActionItem::GetClassData() const { return &_class_data_; }


void ActionItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ActionItem*>(&to_msg);
  auto& from = static_cast<const ActionItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.ActionItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_action() != 0) {
    _this->_internal_set_action(from._internal_action());
  }
  if (from._internal_actime() != 0) {
    _this->_internal_set_actime(from._internal_actime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ActionItem::CopyFrom(const ActionItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.ActionItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionItem::IsInitialized() const {
  return true;
}

void ActionItem::InternalSwap(ActionItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ActionItem, _impl_.actime_)
      + sizeof(ActionItem::_impl_.actime_)
      - PROTOBUF_FIELD_OFFSET(ActionItem, _impl_.action_)>(
          reinterpret_cast<char*>(&_impl_.action_),
          reinterpret_cast<char*>(&other->_impl_.action_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[18]);
}

// ===================================================================

class GuideItem::_Internal {
 public:
};

GuideItem::GuideItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.GuideItem)
}
GuideItem::GuideItem(const GuideItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GuideItem* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.id_ = from._impl_.id_;
  // @@protoc_insertion_point(copy_constructor:symphony.proto.GuideItem)
}

inline void GuideItem::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GuideItem::~GuideItem() {
  // @@protoc_insertion_point(destructor:symphony.proto.GuideItem)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GuideItem::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GuideItem::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GuideItem::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.GuideItem)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GuideItem::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 Id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GuideItem::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.GuideItem)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.GuideItem)
  return target;
}

size_t GuideItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.GuideItem)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Id = 1;
  if (this->_internal_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GuideItem::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GuideItem::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GuideItem::GetClassData() const { return &_class_data_; }


void GuideItem::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GuideItem*>(&to_msg);
  auto& from = static_cast<const GuideItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.GuideItem)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_id() != 0) {
    _this->_internal_set_id(from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GuideItem::CopyFrom(const GuideItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.GuideItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuideItem::IsInitialized() const {
  return true;
}

void GuideItem::InternalSwap(GuideItem* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GuideItem::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[19]);
}

// ===================================================================

class SkillChangeNty::_Internal {
 public:
};

void SkillChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
SkillChangeNty::SkillChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.SkillChangeNty)
}
SkillChangeNty::SkillChangeNty(const SkillChangeNty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SkillChangeNty* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){from._impl_.changelist_}
    , decltype(_impl_.removelist_){from._impl_.removelist_}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:symphony.proto.SkillChangeNty)
}

inline void SkillChangeNty::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.changelist_){arena}
    , decltype(_impl_.removelist_){arena}
    , /*decltype(_impl_._removelist_cached_byte_size_)*/{0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SkillChangeNty::~SkillChangeNty() {
  // @@protoc_insertion_point(destructor:symphony.proto.SkillChangeNty)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SkillChangeNty::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.changelist_.~RepeatedPtrField();
  _impl_.removelist_.~RepeatedField();
}

void SkillChangeNty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SkillChangeNty::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.SkillChangeNty)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.changelist_.Clear();
  _impl_.removelist_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SkillChangeNty::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .symphony.proto.SkillItem ChangeList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_changelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated uint64 RemoveList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_removelist(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_removelist(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SkillChangeNty::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.SkillChangeNty)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .symphony.proto.SkillItem ChangeList = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_changelist_size()); i < n; i++) {
    const auto& repfield = this->_internal_changelist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated uint64 RemoveList = 2;
  {
    int byte_size = _impl_._removelist_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_removelist(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.SkillChangeNty)
  return target;
}

size_t SkillChangeNty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.SkillChangeNty)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.SkillItem ChangeList = 1;
  total_size += 1UL * this->_internal_changelist_size();
  for (const auto& msg : this->_impl_.changelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated uint64 RemoveList = 2;
  {
    size_t data_size = ::_pbi::WireFormatLite::
      UInt64Size(this->_impl_.removelist_);
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    int cached_size = ::_pbi::ToCachedSize(data_size);
    _impl_._removelist_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SkillChangeNty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SkillChangeNty::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SkillChangeNty::GetClassData() const { return &_class_data_; }


void SkillChangeNty::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SkillChangeNty*>(&to_msg);
  auto& from = static_cast<const SkillChangeNty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.SkillChangeNty)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.changelist_.MergeFrom(from._impl_.changelist_);
  _this->_impl_.removelist_.MergeFrom(from._impl_.removelist_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SkillChangeNty::CopyFrom(const SkillChangeNty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.SkillChangeNty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkillChangeNty::IsInitialized() const {
  return true;
}

void SkillChangeNty::InternalSwap(SkillChangeNty* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.changelist_.InternalSwap(&other->_impl_.changelist_);
  _impl_.removelist_.InternalSwap(&other->_impl_.removelist_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SkillChangeNty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[20]);
}

// ===================================================================

class RoleLoginAck::_Internal {
 public:
};

void RoleLoginAck::clear_skilllist() {
  _impl_.skilllist_.Clear();
}
RoleLoginAck::RoleLoginAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:symphony.proto.RoleLoginAck)
}
RoleLoginAck::RoleLoginAck(const RoleLoginAck& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RoleLoginAck* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.actionlist_){from._impl_.actionlist_}
    , decltype(_impl_.equiplist_){from._impl_.equiplist_}
    , decltype(_impl_.gemlist_){from._impl_.gemlist_}
    , decltype(_impl_.petlist_){from._impl_.petlist_}
    , decltype(_impl_.partnerlist_){from._impl_.partnerlist_}
    , decltype(_impl_.mountlist_){from._impl_.mountlist_}
    , decltype(_impl_.bagitemlist_){from._impl_.bagitemlist_}
    , decltype(_impl_.maillist_){from._impl_.maillist_}
    , decltype(_impl_.tasklist_){from._impl_.tasklist_}
    , decltype(_impl_.copylist_){from._impl_.copylist_}
    , decltype(_impl_.chapterlist_){from._impl_.chapterlist_}
    , decltype(_impl_.skilllist_){from._impl_.skilllist_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.accountid_){}
    , decltype(_impl_.retcode_){}
    , decltype(_impl_.carrer_){}
    , decltype(_impl_.roleid_){}
    , decltype(_impl_.exp_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.viplvl_){}
    , decltype(_impl_.fightvalue_){}
    , decltype(_impl_.vipexp_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.accountid_, &from._impl_.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.vipexp_) -
    reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.vipexp_));
  // @@protoc_insertion_point(copy_constructor:symphony.proto.RoleLoginAck)
}

inline void RoleLoginAck::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.actionlist_){arena}
    , decltype(_impl_.equiplist_){arena}
    , decltype(_impl_.gemlist_){arena}
    , decltype(_impl_.petlist_){arena}
    , decltype(_impl_.partnerlist_){arena}
    , decltype(_impl_.mountlist_){arena}
    , decltype(_impl_.bagitemlist_){arena}
    , decltype(_impl_.maillist_){arena}
    , decltype(_impl_.tasklist_){arena}
    , decltype(_impl_.copylist_){arena}
    , decltype(_impl_.chapterlist_){arena}
    , decltype(_impl_.skilllist_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.accountid_){uint64_t{0u}}
    , decltype(_impl_.retcode_){0u}
    , decltype(_impl_.carrer_){0}
    , decltype(_impl_.roleid_){uint64_t{0u}}
    , decltype(_impl_.exp_){int64_t{0}}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.viplvl_){0}
    , decltype(_impl_.fightvalue_){int64_t{0}}
    , decltype(_impl_.vipexp_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RoleLoginAck::~RoleLoginAck() {
  // @@protoc_insertion_point(destructor:symphony.proto.RoleLoginAck)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RoleLoginAck::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.actionlist_.~RepeatedPtrField();
  _impl_.equiplist_.~RepeatedPtrField();
  _impl_.gemlist_.~RepeatedPtrField();
  _impl_.petlist_.~RepeatedPtrField();
  _impl_.partnerlist_.~RepeatedPtrField();
  _impl_.mountlist_.~RepeatedPtrField();
  _impl_.bagitemlist_.~RepeatedPtrField();
  _impl_.maillist_.~RepeatedPtrField();
  _impl_.tasklist_.~RepeatedPtrField();
  _impl_.copylist_.~RepeatedPtrField();
  _impl_.chapterlist_.~RepeatedPtrField();
  _impl_.skilllist_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}

void RoleLoginAck::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RoleLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:symphony.proto.RoleLoginAck)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.actionlist_.Clear();
  _impl_.equiplist_.Clear();
  _impl_.gemlist_.Clear();
  _impl_.petlist_.Clear();
  _impl_.partnerlist_.Clear();
  _impl_.mountlist_.Clear();
  _impl_.bagitemlist_.Clear();
  _impl_.maillist_.Clear();
  _impl_.tasklist_.Clear();
  _impl_.copylist_.Clear();
  _impl_.chapterlist_.Clear();
  _impl_.skilllist_.Clear();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.vipexp_) -
      reinterpret_cast<char*>(&_impl_.accountid_)) + sizeof(_impl_.vipexp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoleLoginAck::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.retcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 AccountID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.accountid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 RoleID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Carrer = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.carrer_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 Exp = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "symphony.proto.RoleLoginAck.Name"));
        } else
          goto handle_unusual;
        continue;
      // int32 VipLvl = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.viplvl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 VipExp = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.vipexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 FightValue = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.fightvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.ActionItem ActionList = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_actionlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<90>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.EquipItem EquipList = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_equiplist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<98>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.GemItem GemList = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_gemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.PetItem PetList = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 114)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_petlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<114>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.PartnerItem PartnerList = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_partnerlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.MountItem MountList = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 130)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_mountlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<130>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.BagItem BagItemList = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 138)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_bagitemlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<138>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.MailItem MailList = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 146)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_maillist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<146>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.TaskItem TaskList = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 154)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_tasklist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<154>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.CopyItem CopyList = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_copylist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.ChapterItem ChapterList = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 170)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_chapterlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<170>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .symphony.proto.SkillItem SkillList = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 178)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_skilllist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<178>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoleLoginAck::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:symphony.proto.RoleLoginAck)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_retcode(), target);
  }

  // uint64 AccountID = 2;
  if (this->_internal_accountid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_accountid(), target);
  }

  // uint64 RoleID = 3;
  if (this->_internal_roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(3, this->_internal_roleid(), target);
  }

  // int32 Carrer = 4;
  if (this->_internal_carrer() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_carrer(), target);
  }

  // int32 Level = 5;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_level(), target);
  }

  // int64 Exp = 6;
  if (this->_internal_exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_exp(), target);
  }

  // string Name = 7;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "symphony.proto.RoleLoginAck.Name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  // int32 VipLvl = 8;
  if (this->_internal_viplvl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_viplvl(), target);
  }

  // int32 VipExp = 9;
  if (this->_internal_vipexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_vipexp(), target);
  }

  // int64 FightValue = 10;
  if (this->_internal_fightvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(10, this->_internal_fightvalue(), target);
  }

  // repeated .symphony.proto.ActionItem ActionList = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_actionlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_actionlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.EquipItem EquipList = 12;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_equiplist_size()); i < n; i++) {
    const auto& repfield = this->_internal_equiplist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(12, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.GemItem GemList = 13;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_gemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_gemlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(13, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.PetItem PetList = 14;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_petlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_petlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(14, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.PartnerItem PartnerList = 15;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_partnerlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_partnerlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(15, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.MountItem MountList = 16;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_mountlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_mountlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(16, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.BagItem BagItemList = 17;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bagitemlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_bagitemlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(17, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.MailItem MailList = 18;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_maillist_size()); i < n; i++) {
    const auto& repfield = this->_internal_maillist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(18, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.TaskItem TaskList = 19;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_tasklist_size()); i < n; i++) {
    const auto& repfield = this->_internal_tasklist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(19, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.CopyItem CopyList = 20;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_copylist_size()); i < n; i++) {
    const auto& repfield = this->_internal_copylist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(20, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.ChapterItem ChapterList = 21;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_chapterlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_chapterlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(21, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .symphony.proto.SkillItem SkillList = 22;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_skilllist_size()); i < n; i++) {
    const auto& repfield = this->_internal_skilllist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(22, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:symphony.proto.RoleLoginAck)
  return target;
}

size_t RoleLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:symphony.proto.RoleLoginAck)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .symphony.proto.ActionItem ActionList = 11;
  total_size += 1UL * this->_internal_actionlist_size();
  for (const auto& msg : this->_impl_.actionlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.EquipItem EquipList = 12;
  total_size += 1UL * this->_internal_equiplist_size();
  for (const auto& msg : this->_impl_.equiplist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.GemItem GemList = 13;
  total_size += 1UL * this->_internal_gemlist_size();
  for (const auto& msg : this->_impl_.gemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.PetItem PetList = 14;
  total_size += 1UL * this->_internal_petlist_size();
  for (const auto& msg : this->_impl_.petlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.PartnerItem PartnerList = 15;
  total_size += 1UL * this->_internal_partnerlist_size();
  for (const auto& msg : this->_impl_.partnerlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.MountItem MountList = 16;
  total_size += 2UL * this->_internal_mountlist_size();
  for (const auto& msg : this->_impl_.mountlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.BagItem BagItemList = 17;
  total_size += 2UL * this->_internal_bagitemlist_size();
  for (const auto& msg : this->_impl_.bagitemlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.MailItem MailList = 18;
  total_size += 2UL * this->_internal_maillist_size();
  for (const auto& msg : this->_impl_.maillist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.TaskItem TaskList = 19;
  total_size += 2UL * this->_internal_tasklist_size();
  for (const auto& msg : this->_impl_.tasklist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.CopyItem CopyList = 20;
  total_size += 2UL * this->_internal_copylist_size();
  for (const auto& msg : this->_impl_.copylist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.ChapterItem ChapterList = 21;
  total_size += 2UL * this->_internal_chapterlist_size();
  for (const auto& msg : this->_impl_.chapterlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .symphony.proto.SkillItem SkillList = 22;
  total_size += 2UL * this->_internal_skilllist_size();
  for (const auto& msg : this->_impl_.skilllist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 7;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 AccountID = 2;
  if (this->_internal_accountid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_accountid());
  }

  // uint32 RetCode = 1;
  if (this->_internal_retcode() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_retcode());
  }

  // int32 Carrer = 4;
  if (this->_internal_carrer() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_carrer());
  }

  // uint64 RoleID = 3;
  if (this->_internal_roleid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_roleid());
  }

  // int64 Exp = 6;
  if (this->_internal_exp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_exp());
  }

  // int32 Level = 5;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 VipLvl = 8;
  if (this->_internal_viplvl() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_viplvl());
  }

  // int64 FightValue = 10;
  if (this->_internal_fightvalue() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_fightvalue());
  }

  // int32 VipExp = 9;
  if (this->_internal_vipexp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_vipexp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoleLoginAck::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RoleLoginAck::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoleLoginAck::GetClassData() const { return &_class_data_; }


void RoleLoginAck::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RoleLoginAck*>(&to_msg);
  auto& from = static_cast<const RoleLoginAck&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:symphony.proto.RoleLoginAck)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.actionlist_.MergeFrom(from._impl_.actionlist_);
  _this->_impl_.equiplist_.MergeFrom(from._impl_.equiplist_);
  _this->_impl_.gemlist_.MergeFrom(from._impl_.gemlist_);
  _this->_impl_.petlist_.MergeFrom(from._impl_.petlist_);
  _this->_impl_.partnerlist_.MergeFrom(from._impl_.partnerlist_);
  _this->_impl_.mountlist_.MergeFrom(from._impl_.mountlist_);
  _this->_impl_.bagitemlist_.MergeFrom(from._impl_.bagitemlist_);
  _this->_impl_.maillist_.MergeFrom(from._impl_.maillist_);
  _this->_impl_.tasklist_.MergeFrom(from._impl_.tasklist_);
  _this->_impl_.copylist_.MergeFrom(from._impl_.copylist_);
  _this->_impl_.chapterlist_.MergeFrom(from._impl_.chapterlist_);
  _this->_impl_.skilllist_.MergeFrom(from._impl_.skilllist_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_accountid() != 0) {
    _this->_internal_set_accountid(from._internal_accountid());
  }
  if (from._internal_retcode() != 0) {
    _this->_internal_set_retcode(from._internal_retcode());
  }
  if (from._internal_carrer() != 0) {
    _this->_internal_set_carrer(from._internal_carrer());
  }
  if (from._internal_roleid() != 0) {
    _this->_internal_set_roleid(from._internal_roleid());
  }
  if (from._internal_exp() != 0) {
    _this->_internal_set_exp(from._internal_exp());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_viplvl() != 0) {
    _this->_internal_set_viplvl(from._internal_viplvl());
  }
  if (from._internal_fightvalue() != 0) {
    _this->_internal_set_fightvalue(from._internal_fightvalue());
  }
  if (from._internal_vipexp() != 0) {
    _this->_internal_set_vipexp(from._internal_vipexp());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoleLoginAck::CopyFrom(const RoleLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:symphony.proto.RoleLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginAck::IsInitialized() const {
  return true;
}

void RoleLoginAck::InternalSwap(RoleLoginAck* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.actionlist_.InternalSwap(&other->_impl_.actionlist_);
  _impl_.equiplist_.InternalSwap(&other->_impl_.equiplist_);
  _impl_.gemlist_.InternalSwap(&other->_impl_.gemlist_);
  _impl_.petlist_.InternalSwap(&other->_impl_.petlist_);
  _impl_.partnerlist_.InternalSwap(&other->_impl_.partnerlist_);
  _impl_.mountlist_.InternalSwap(&other->_impl_.mountlist_);
  _impl_.bagitemlist_.InternalSwap(&other->_impl_.bagitemlist_);
  _impl_.maillist_.InternalSwap(&other->_impl_.maillist_);
  _impl_.tasklist_.InternalSwap(&other->_impl_.tasklist_);
  _impl_.copylist_.InternalSwap(&other->_impl_.copylist_);
  _impl_.chapterlist_.InternalSwap(&other->_impl_.chapterlist_);
  _impl_.skilllist_.InternalSwap(&other->_impl_.skilllist_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RoleLoginAck, _impl_.vipexp_)
      + sizeof(RoleLoginAck::_impl_.vipexp_)
      - PROTOBUF_FIELD_OFFSET(RoleLoginAck, _impl_.accountid_)>(
          reinterpret_cast<char*>(&_impl_.accountid_),
          reinterpret_cast<char*>(&other->_impl_.accountid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RoleLoginAck::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_getter, &descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto_once,
      file_level_metadata_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto[21]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace symphony
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::symphony::proto::BagItem*
Arena::CreateMaybeMessage< ::symphony::proto::BagItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::BagItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::BagChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::BagChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::BagChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::EquipItem*
Arena::CreateMaybeMessage< ::symphony::proto::EquipItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::EquipItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::EquipChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::EquipChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::EquipChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::GemItem*
Arena::CreateMaybeMessage< ::symphony::proto::GemItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::GemItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::GemChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::GemChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::GemChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::PetItem*
Arena::CreateMaybeMessage< ::symphony::proto::PetItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::PetItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::PetChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::PetChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::PetChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::PartnerItem*
Arena::CreateMaybeMessage< ::symphony::proto::PartnerItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::PartnerItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::PartnerChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::PartnerChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::PartnerChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MountItem*
Arena::CreateMaybeMessage< ::symphony::proto::MountItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MountItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MountChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::MountChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MountChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MailItem*
Arena::CreateMaybeMessage< ::symphony::proto::MailItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MailItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::MailChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::MailChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::MailChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::TaskItem*
Arena::CreateMaybeMessage< ::symphony::proto::TaskItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::TaskItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::TaskChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::TaskChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::TaskChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::CopyItem*
Arena::CreateMaybeMessage< ::symphony::proto::CopyItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::CopyItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::ChapterItem*
Arena::CreateMaybeMessage< ::symphony::proto::ChapterItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::ChapterItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::ActionItem*
Arena::CreateMaybeMessage< ::symphony::proto::ActionItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::ActionItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::GuideItem*
Arena::CreateMaybeMessage< ::symphony::proto::GuideItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::GuideItem >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::SkillChangeNty*
Arena::CreateMaybeMessage< ::symphony::proto::SkillChangeNty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::SkillChangeNty >(arena);
}
template<> PROTOBUF_NOINLINE ::symphony::proto::RoleLoginAck*
Arena::CreateMaybeMessage< ::symphony::proto::RoleLoginAck >(Arena* arena) {
  return Arena::CreateMessageInternal< ::symphony::proto::RoleLoginAck >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
