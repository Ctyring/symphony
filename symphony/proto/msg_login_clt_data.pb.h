// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: symphony/proto/msg_login_clt_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "symphony/proto/msg_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
namespace symphony {
namespace proto {
class ActionItem;
struct ActionItemDefaultTypeInternal;
extern ActionItemDefaultTypeInternal _ActionItem_default_instance_;
class BagChangeNty;
struct BagChangeNtyDefaultTypeInternal;
extern BagChangeNtyDefaultTypeInternal _BagChangeNty_default_instance_;
class BagItem;
struct BagItemDefaultTypeInternal;
extern BagItemDefaultTypeInternal _BagItem_default_instance_;
class ChapterItem;
struct ChapterItemDefaultTypeInternal;
extern ChapterItemDefaultTypeInternal _ChapterItem_default_instance_;
class CopyItem;
struct CopyItemDefaultTypeInternal;
extern CopyItemDefaultTypeInternal _CopyItem_default_instance_;
class EquipChangeNty;
struct EquipChangeNtyDefaultTypeInternal;
extern EquipChangeNtyDefaultTypeInternal _EquipChangeNty_default_instance_;
class EquipItem;
struct EquipItemDefaultTypeInternal;
extern EquipItemDefaultTypeInternal _EquipItem_default_instance_;
class GemChangeNty;
struct GemChangeNtyDefaultTypeInternal;
extern GemChangeNtyDefaultTypeInternal _GemChangeNty_default_instance_;
class GemItem;
struct GemItemDefaultTypeInternal;
extern GemItemDefaultTypeInternal _GemItem_default_instance_;
class GuideItem;
struct GuideItemDefaultTypeInternal;
extern GuideItemDefaultTypeInternal _GuideItem_default_instance_;
class MailChangeNty;
struct MailChangeNtyDefaultTypeInternal;
extern MailChangeNtyDefaultTypeInternal _MailChangeNty_default_instance_;
class MailItem;
struct MailItemDefaultTypeInternal;
extern MailItemDefaultTypeInternal _MailItem_default_instance_;
class MountChangeNty;
struct MountChangeNtyDefaultTypeInternal;
extern MountChangeNtyDefaultTypeInternal _MountChangeNty_default_instance_;
class MountItem;
struct MountItemDefaultTypeInternal;
extern MountItemDefaultTypeInternal _MountItem_default_instance_;
class PartnerChangeNty;
struct PartnerChangeNtyDefaultTypeInternal;
extern PartnerChangeNtyDefaultTypeInternal _PartnerChangeNty_default_instance_;
class PartnerItem;
struct PartnerItemDefaultTypeInternal;
extern PartnerItemDefaultTypeInternal _PartnerItem_default_instance_;
class PetChangeNty;
struct PetChangeNtyDefaultTypeInternal;
extern PetChangeNtyDefaultTypeInternal _PetChangeNty_default_instance_;
class PetItem;
struct PetItemDefaultTypeInternal;
extern PetItemDefaultTypeInternal _PetItem_default_instance_;
class RoleLoginAck;
struct RoleLoginAckDefaultTypeInternal;
extern RoleLoginAckDefaultTypeInternal _RoleLoginAck_default_instance_;
class SkillChangeNty;
struct SkillChangeNtyDefaultTypeInternal;
extern SkillChangeNtyDefaultTypeInternal _SkillChangeNty_default_instance_;
class TaskChangeNty;
struct TaskChangeNtyDefaultTypeInternal;
extern TaskChangeNtyDefaultTypeInternal _TaskChangeNty_default_instance_;
class TaskItem;
struct TaskItemDefaultTypeInternal;
extern TaskItemDefaultTypeInternal _TaskItem_default_instance_;
}  // namespace proto
}  // namespace symphony
PROTOBUF_NAMESPACE_OPEN
template<> ::symphony::proto::ActionItem* Arena::CreateMaybeMessage<::symphony::proto::ActionItem>(Arena*);
template<> ::symphony::proto::BagChangeNty* Arena::CreateMaybeMessage<::symphony::proto::BagChangeNty>(Arena*);
template<> ::symphony::proto::BagItem* Arena::CreateMaybeMessage<::symphony::proto::BagItem>(Arena*);
template<> ::symphony::proto::ChapterItem* Arena::CreateMaybeMessage<::symphony::proto::ChapterItem>(Arena*);
template<> ::symphony::proto::CopyItem* Arena::CreateMaybeMessage<::symphony::proto::CopyItem>(Arena*);
template<> ::symphony::proto::EquipChangeNty* Arena::CreateMaybeMessage<::symphony::proto::EquipChangeNty>(Arena*);
template<> ::symphony::proto::EquipItem* Arena::CreateMaybeMessage<::symphony::proto::EquipItem>(Arena*);
template<> ::symphony::proto::GemChangeNty* Arena::CreateMaybeMessage<::symphony::proto::GemChangeNty>(Arena*);
template<> ::symphony::proto::GemItem* Arena::CreateMaybeMessage<::symphony::proto::GemItem>(Arena*);
template<> ::symphony::proto::GuideItem* Arena::CreateMaybeMessage<::symphony::proto::GuideItem>(Arena*);
template<> ::symphony::proto::MailChangeNty* Arena::CreateMaybeMessage<::symphony::proto::MailChangeNty>(Arena*);
template<> ::symphony::proto::MailItem* Arena::CreateMaybeMessage<::symphony::proto::MailItem>(Arena*);
template<> ::symphony::proto::MountChangeNty* Arena::CreateMaybeMessage<::symphony::proto::MountChangeNty>(Arena*);
template<> ::symphony::proto::MountItem* Arena::CreateMaybeMessage<::symphony::proto::MountItem>(Arena*);
template<> ::symphony::proto::PartnerChangeNty* Arena::CreateMaybeMessage<::symphony::proto::PartnerChangeNty>(Arena*);
template<> ::symphony::proto::PartnerItem* Arena::CreateMaybeMessage<::symphony::proto::PartnerItem>(Arena*);
template<> ::symphony::proto::PetChangeNty* Arena::CreateMaybeMessage<::symphony::proto::PetChangeNty>(Arena*);
template<> ::symphony::proto::PetItem* Arena::CreateMaybeMessage<::symphony::proto::PetItem>(Arena*);
template<> ::symphony::proto::RoleLoginAck* Arena::CreateMaybeMessage<::symphony::proto::RoleLoginAck>(Arena*);
template<> ::symphony::proto::SkillChangeNty* Arena::CreateMaybeMessage<::symphony::proto::SkillChangeNty>(Arena*);
template<> ::symphony::proto::TaskChangeNty* Arena::CreateMaybeMessage<::symphony::proto::TaskChangeNty>(Arena*);
template<> ::symphony::proto::TaskItem* Arena::CreateMaybeMessage<::symphony::proto::TaskItem>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace symphony {
namespace proto {

// ===================================================================

class BagItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.BagItem) */ {
 public:
  inline BagItem() : BagItem(nullptr) {}
  ~BagItem() override;
  explicit PROTOBUF_CONSTEXPR BagItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BagItem(const BagItem& from);
  BagItem(BagItem&& from) noexcept
    : BagItem() {
    *this = ::std::move(from);
  }

  inline BagItem& operator=(const BagItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline BagItem& operator=(BagItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BagItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const BagItem* internal_default_instance() {
    return reinterpret_cast<const BagItem*>(
               &_BagItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BagItem& a, BagItem& b) {
    a.Swap(&b);
  }
  inline void Swap(BagItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BagItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BagItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BagItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BagItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BagItem& from) {
    BagItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BagItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.BagItem";
  }
  protected:
  explicit BagItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kItemGuidFieldNumber = 2,
    kItemNumFieldNumber = 4,
    kItemIDFieldNumber = 3,
    kBindFieldNumber = 5,
  };
  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // uint64 ItemGuid = 2;
  void clear_itemguid();
  uint64_t itemguid() const;
  void set_itemguid(uint64_t value);
  private:
  uint64_t _internal_itemguid() const;
  void _internal_set_itemguid(uint64_t value);
  public:

  // int64 ItemNum = 4;
  void clear_itemnum();
  int64_t itemnum() const;
  void set_itemnum(int64_t value);
  private:
  int64_t _internal_itemnum() const;
  void _internal_set_itemnum(int64_t value);
  public:

  // int32 ItemID = 3;
  void clear_itemid();
  int32_t itemid() const;
  void set_itemid(int32_t value);
  private:
  int32_t _internal_itemid() const;
  void _internal_set_itemid(int32_t value);
  public:

  // bool Bind = 5;
  void clear_bind();
  bool bind() const;
  void set_bind(bool value);
  private:
  bool _internal_bind() const;
  void _internal_set_bind(bool value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.BagItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t guid_;
    uint64_t itemguid_;
    int64_t itemnum_;
    int32_t itemid_;
    bool bind_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class BagChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.BagChangeNty) */ {
 public:
  inline BagChangeNty() : BagChangeNty(nullptr) {}
  ~BagChangeNty() override;
  explicit PROTOBUF_CONSTEXPR BagChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BagChangeNty(const BagChangeNty& from);
  BagChangeNty(BagChangeNty&& from) noexcept
    : BagChangeNty() {
    *this = ::std::move(from);
  }

  inline BagChangeNty& operator=(const BagChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline BagChangeNty& operator=(BagChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BagChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const BagChangeNty* internal_default_instance() {
    return reinterpret_cast<const BagChangeNty*>(
               &_BagChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BagChangeNty& a, BagChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(BagChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BagChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BagChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BagChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BagChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const BagChangeNty& from) {
    BagChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BagChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.BagChangeNty";
  }
  protected:
  explicit BagChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.BagItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::BagItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::BagItem& _internal_changelist(int index) const;
  ::symphony::proto::BagItem* _internal_add_changelist();
  public:
  const ::symphony::proto::BagItem& changelist(int index) const;
  ::symphony::proto::BagItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.BagChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class EquipItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.EquipItem) */ {
 public:
  inline EquipItem() : EquipItem(nullptr) {}
  ~EquipItem() override;
  explicit PROTOBUF_CONSTEXPR EquipItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EquipItem(const EquipItem& from);
  EquipItem(EquipItem&& from) noexcept
    : EquipItem() {
    *this = ::std::move(from);
  }

  inline EquipItem& operator=(const EquipItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline EquipItem& operator=(EquipItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EquipItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const EquipItem* internal_default_instance() {
    return reinterpret_cast<const EquipItem*>(
               &_EquipItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(EquipItem& a, EquipItem& b) {
    a.Swap(&b);
  }
  inline void Swap(EquipItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EquipItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EquipItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EquipItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EquipItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EquipItem& from) {
    EquipItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EquipItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.EquipItem";
  }
  protected:
  explicit EquipItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kEquipIDFieldNumber = 2,
    kStrengthLvlFieldNumber = 3,
    kRefineLevelFieldNumber = 4,
    kStarLevelFieldNumber = 5,
    kRefineExpFieldNumber = 6,
    kStarExpFieldNumber = 7,
    kIsUsingFieldNumber = 8,
  };
  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // int32 EquipID = 2;
  void clear_equipid();
  int32_t equipid() const;
  void set_equipid(int32_t value);
  private:
  int32_t _internal_equipid() const;
  void _internal_set_equipid(int32_t value);
  public:

  // int32 StrengthLvl = 3;
  void clear_strengthlvl();
  int32_t strengthlvl() const;
  void set_strengthlvl(int32_t value);
  private:
  int32_t _internal_strengthlvl() const;
  void _internal_set_strengthlvl(int32_t value);
  public:

  // int32 RefineLevel = 4;
  void clear_refinelevel();
  int32_t refinelevel() const;
  void set_refinelevel(int32_t value);
  private:
  int32_t _internal_refinelevel() const;
  void _internal_set_refinelevel(int32_t value);
  public:

  // int32 StarLevel = 5;
  void clear_starlevel();
  int32_t starlevel() const;
  void set_starlevel(int32_t value);
  private:
  int32_t _internal_starlevel() const;
  void _internal_set_starlevel(int32_t value);
  public:

  // int32 RefineExp = 6;
  void clear_refineexp();
  int32_t refineexp() const;
  void set_refineexp(int32_t value);
  private:
  int32_t _internal_refineexp() const;
  void _internal_set_refineexp(int32_t value);
  public:

  // int32 StarExp = 7;
  void clear_starexp();
  int32_t starexp() const;
  void set_starexp(int32_t value);
  private:
  int32_t _internal_starexp() const;
  void _internal_set_starexp(int32_t value);
  public:

  // int32 IsUsing = 8;
  void clear_isusing();
  int32_t isusing() const;
  void set_isusing(int32_t value);
  private:
  int32_t _internal_isusing() const;
  void _internal_set_isusing(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.EquipItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t guid_;
    int32_t equipid_;
    int32_t strengthlvl_;
    int32_t refinelevel_;
    int32_t starlevel_;
    int32_t refineexp_;
    int32_t starexp_;
    int32_t isusing_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class EquipChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.EquipChangeNty) */ {
 public:
  inline EquipChangeNty() : EquipChangeNty(nullptr) {}
  ~EquipChangeNty() override;
  explicit PROTOBUF_CONSTEXPR EquipChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EquipChangeNty(const EquipChangeNty& from);
  EquipChangeNty(EquipChangeNty&& from) noexcept
    : EquipChangeNty() {
    *this = ::std::move(from);
  }

  inline EquipChangeNty& operator=(const EquipChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline EquipChangeNty& operator=(EquipChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EquipChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const EquipChangeNty* internal_default_instance() {
    return reinterpret_cast<const EquipChangeNty*>(
               &_EquipChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EquipChangeNty& a, EquipChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(EquipChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EquipChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EquipChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EquipChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const EquipChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const EquipChangeNty& from) {
    EquipChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EquipChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.EquipChangeNty";
  }
  protected:
  explicit EquipChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.EquipItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::EquipItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::EquipItem& _internal_changelist(int index) const;
  ::symphony::proto::EquipItem* _internal_add_changelist();
  public:
  const ::symphony::proto::EquipItem& changelist(int index) const;
  ::symphony::proto::EquipItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.EquipChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class GemItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.GemItem) */ {
 public:
  inline GemItem() : GemItem(nullptr) {}
  ~GemItem() override;
  explicit PROTOBUF_CONSTEXPR GemItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GemItem(const GemItem& from);
  GemItem(GemItem&& from) noexcept
    : GemItem() {
    *this = ::std::move(from);
  }

  inline GemItem& operator=(const GemItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline GemItem& operator=(GemItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GemItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const GemItem* internal_default_instance() {
    return reinterpret_cast<const GemItem*>(
               &_GemItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GemItem& a, GemItem& b) {
    a.Swap(&b);
  }
  inline void Swap(GemItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GemItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GemItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GemItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GemItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GemItem& from) {
    GemItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GemItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.GemItem";
  }
  protected:
  explicit GemItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kGemIDFieldNumber = 2,
    kStrengthLvlFieldNumber = 3,
    kRefineLevelFieldNumber = 4,
    kStarLevelFieldNumber = 5,
    kRefineExpFieldNumber = 6,
    kStarExpFieldNumber = 7,
    kPosFieldNumber = 8,
  };
  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // int32 GemID = 2;
  void clear_gemid();
  int32_t gemid() const;
  void set_gemid(int32_t value);
  private:
  int32_t _internal_gemid() const;
  void _internal_set_gemid(int32_t value);
  public:

  // int32 StrengthLvl = 3;
  void clear_strengthlvl();
  int32_t strengthlvl() const;
  void set_strengthlvl(int32_t value);
  private:
  int32_t _internal_strengthlvl() const;
  void _internal_set_strengthlvl(int32_t value);
  public:

  // int32 RefineLevel = 4;
  void clear_refinelevel();
  int32_t refinelevel() const;
  void set_refinelevel(int32_t value);
  private:
  int32_t _internal_refinelevel() const;
  void _internal_set_refinelevel(int32_t value);
  public:

  // int32 StarLevel = 5;
  void clear_starlevel();
  int32_t starlevel() const;
  void set_starlevel(int32_t value);
  private:
  int32_t _internal_starlevel() const;
  void _internal_set_starlevel(int32_t value);
  public:

  // int32 RefineExp = 6;
  void clear_refineexp();
  int32_t refineexp() const;
  void set_refineexp(int32_t value);
  private:
  int32_t _internal_refineexp() const;
  void _internal_set_refineexp(int32_t value);
  public:

  // int32 StarExp = 7;
  void clear_starexp();
  int32_t starexp() const;
  void set_starexp(int32_t value);
  private:
  int32_t _internal_starexp() const;
  void _internal_set_starexp(int32_t value);
  public:

  // int32 Pos = 8;
  void clear_pos();
  int32_t pos() const;
  void set_pos(int32_t value);
  private:
  int32_t _internal_pos() const;
  void _internal_set_pos(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.GemItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t guid_;
    int32_t gemid_;
    int32_t strengthlvl_;
    int32_t refinelevel_;
    int32_t starlevel_;
    int32_t refineexp_;
    int32_t starexp_;
    int32_t pos_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class GemChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.GemChangeNty) */ {
 public:
  inline GemChangeNty() : GemChangeNty(nullptr) {}
  ~GemChangeNty() override;
  explicit PROTOBUF_CONSTEXPR GemChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GemChangeNty(const GemChangeNty& from);
  GemChangeNty(GemChangeNty&& from) noexcept
    : GemChangeNty() {
    *this = ::std::move(from);
  }

  inline GemChangeNty& operator=(const GemChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline GemChangeNty& operator=(GemChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GemChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const GemChangeNty* internal_default_instance() {
    return reinterpret_cast<const GemChangeNty*>(
               &_GemChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GemChangeNty& a, GemChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(GemChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GemChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GemChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GemChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GemChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GemChangeNty& from) {
    GemChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GemChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.GemChangeNty";
  }
  protected:
  explicit GemChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.GemItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::GemItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::GemItem& _internal_changelist(int index) const;
  ::symphony::proto::GemItem* _internal_add_changelist();
  public:
  const ::symphony::proto::GemItem& changelist(int index) const;
  ::symphony::proto::GemItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.GemChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PetItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.PetItem) */ {
 public:
  inline PetItem() : PetItem(nullptr) {}
  ~PetItem() override;
  explicit PROTOBUF_CONSTEXPR PetItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PetItem(const PetItem& from);
  PetItem(PetItem&& from) noexcept
    : PetItem() {
    *this = ::std::move(from);
  }

  inline PetItem& operator=(const PetItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline PetItem& operator=(PetItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PetItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const PetItem* internal_default_instance() {
    return reinterpret_cast<const PetItem*>(
               &_PetItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PetItem& a, PetItem& b) {
    a.Swap(&b);
  }
  inline void Swap(PetItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PetItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PetItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PetItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PetItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PetItem& from) {
    PetItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PetItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.PetItem";
  }
  protected:
  explicit PetItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kPetIDFieldNumber = 2,
    kStrengthLvlFieldNumber = 3,
    kRefineLevelFieldNumber = 4,
    kStarLevelFieldNumber = 5,
    kRefineExpFieldNumber = 6,
    kStarExpFieldNumber = 7,
    kIsUsingFieldNumber = 8,
  };
  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // int32 PetID = 2;
  void clear_petid();
  int32_t petid() const;
  void set_petid(int32_t value);
  private:
  int32_t _internal_petid() const;
  void _internal_set_petid(int32_t value);
  public:

  // int32 StrengthLvl = 3;
  void clear_strengthlvl();
  int32_t strengthlvl() const;
  void set_strengthlvl(int32_t value);
  private:
  int32_t _internal_strengthlvl() const;
  void _internal_set_strengthlvl(int32_t value);
  public:

  // int32 RefineLevel = 4;
  void clear_refinelevel();
  int32_t refinelevel() const;
  void set_refinelevel(int32_t value);
  private:
  int32_t _internal_refinelevel() const;
  void _internal_set_refinelevel(int32_t value);
  public:

  // int32 StarLevel = 5;
  void clear_starlevel();
  int32_t starlevel() const;
  void set_starlevel(int32_t value);
  private:
  int32_t _internal_starlevel() const;
  void _internal_set_starlevel(int32_t value);
  public:

  // int32 RefineExp = 6;
  void clear_refineexp();
  int32_t refineexp() const;
  void set_refineexp(int32_t value);
  private:
  int32_t _internal_refineexp() const;
  void _internal_set_refineexp(int32_t value);
  public:

  // int32 StarExp = 7;
  void clear_starexp();
  int32_t starexp() const;
  void set_starexp(int32_t value);
  private:
  int32_t _internal_starexp() const;
  void _internal_set_starexp(int32_t value);
  public:

  // int32 IsUsing = 8;
  void clear_isusing();
  int32_t isusing() const;
  void set_isusing(int32_t value);
  private:
  int32_t _internal_isusing() const;
  void _internal_set_isusing(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.PetItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t guid_;
    int32_t petid_;
    int32_t strengthlvl_;
    int32_t refinelevel_;
    int32_t starlevel_;
    int32_t refineexp_;
    int32_t starexp_;
    int32_t isusing_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PetChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.PetChangeNty) */ {
 public:
  inline PetChangeNty() : PetChangeNty(nullptr) {}
  ~PetChangeNty() override;
  explicit PROTOBUF_CONSTEXPR PetChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PetChangeNty(const PetChangeNty& from);
  PetChangeNty(PetChangeNty&& from) noexcept
    : PetChangeNty() {
    *this = ::std::move(from);
  }

  inline PetChangeNty& operator=(const PetChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline PetChangeNty& operator=(PetChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PetChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const PetChangeNty* internal_default_instance() {
    return reinterpret_cast<const PetChangeNty*>(
               &_PetChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(PetChangeNty& a, PetChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(PetChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PetChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PetChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PetChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PetChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PetChangeNty& from) {
    PetChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PetChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.PetChangeNty";
  }
  protected:
  explicit PetChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.PetItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::PetItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::PetItem& _internal_changelist(int index) const;
  ::symphony::proto::PetItem* _internal_add_changelist();
  public:
  const ::symphony::proto::PetItem& changelist(int index) const;
  ::symphony::proto::PetItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.PetChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PartnerItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.PartnerItem) */ {
 public:
  inline PartnerItem() : PartnerItem(nullptr) {}
  ~PartnerItem() override;
  explicit PROTOBUF_CONSTEXPR PartnerItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PartnerItem(const PartnerItem& from);
  PartnerItem(PartnerItem&& from) noexcept
    : PartnerItem() {
    *this = ::std::move(from);
  }

  inline PartnerItem& operator=(const PartnerItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline PartnerItem& operator=(PartnerItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PartnerItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const PartnerItem* internal_default_instance() {
    return reinterpret_cast<const PartnerItem*>(
               &_PartnerItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(PartnerItem& a, PartnerItem& b) {
    a.Swap(&b);
  }
  inline void Swap(PartnerItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PartnerItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PartnerItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PartnerItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PartnerItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PartnerItem& from) {
    PartnerItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartnerItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.PartnerItem";
  }
  protected:
  explicit PartnerItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kPartnerIDFieldNumber = 2,
    kStrengthLvlFieldNumber = 3,
    kRefineLevelFieldNumber = 4,
    kStarLevelFieldNumber = 5,
    kRefineExpFieldNumber = 6,
    kStarExpFieldNumber = 7,
    kSetPosFieldNumber = 8,
  };
  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // int32 PartnerID = 2;
  void clear_partnerid();
  int32_t partnerid() const;
  void set_partnerid(int32_t value);
  private:
  int32_t _internal_partnerid() const;
  void _internal_set_partnerid(int32_t value);
  public:

  // int32 StrengthLvl = 3;
  void clear_strengthlvl();
  int32_t strengthlvl() const;
  void set_strengthlvl(int32_t value);
  private:
  int32_t _internal_strengthlvl() const;
  void _internal_set_strengthlvl(int32_t value);
  public:

  // int32 RefineLevel = 4;
  void clear_refinelevel();
  int32_t refinelevel() const;
  void set_refinelevel(int32_t value);
  private:
  int32_t _internal_refinelevel() const;
  void _internal_set_refinelevel(int32_t value);
  public:

  // int32 StarLevel = 5;
  void clear_starlevel();
  int32_t starlevel() const;
  void set_starlevel(int32_t value);
  private:
  int32_t _internal_starlevel() const;
  void _internal_set_starlevel(int32_t value);
  public:

  // int32 RefineExp = 6;
  void clear_refineexp();
  int32_t refineexp() const;
  void set_refineexp(int32_t value);
  private:
  int32_t _internal_refineexp() const;
  void _internal_set_refineexp(int32_t value);
  public:

  // int32 StarExp = 7;
  void clear_starexp();
  int32_t starexp() const;
  void set_starexp(int32_t value);
  private:
  int32_t _internal_starexp() const;
  void _internal_set_starexp(int32_t value);
  public:

  // int32 SetPos = 8;
  void clear_setpos();
  int32_t setpos() const;
  void set_setpos(int32_t value);
  private:
  int32_t _internal_setpos() const;
  void _internal_set_setpos(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.PartnerItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t guid_;
    int32_t partnerid_;
    int32_t strengthlvl_;
    int32_t refinelevel_;
    int32_t starlevel_;
    int32_t refineexp_;
    int32_t starexp_;
    int32_t setpos_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class PartnerChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.PartnerChangeNty) */ {
 public:
  inline PartnerChangeNty() : PartnerChangeNty(nullptr) {}
  ~PartnerChangeNty() override;
  explicit PROTOBUF_CONSTEXPR PartnerChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PartnerChangeNty(const PartnerChangeNty& from);
  PartnerChangeNty(PartnerChangeNty&& from) noexcept
    : PartnerChangeNty() {
    *this = ::std::move(from);
  }

  inline PartnerChangeNty& operator=(const PartnerChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline PartnerChangeNty& operator=(PartnerChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PartnerChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const PartnerChangeNty* internal_default_instance() {
    return reinterpret_cast<const PartnerChangeNty*>(
               &_PartnerChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(PartnerChangeNty& a, PartnerChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(PartnerChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PartnerChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PartnerChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PartnerChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PartnerChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const PartnerChangeNty& from) {
    PartnerChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartnerChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.PartnerChangeNty";
  }
  protected:
  explicit PartnerChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.PartnerItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::PartnerItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::PartnerItem& _internal_changelist(int index) const;
  ::symphony::proto::PartnerItem* _internal_add_changelist();
  public:
  const ::symphony::proto::PartnerItem& changelist(int index) const;
  ::symphony::proto::PartnerItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.PartnerChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class MountItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.MountItem) */ {
 public:
  inline MountItem() : MountItem(nullptr) {}
  ~MountItem() override;
  explicit PROTOBUF_CONSTEXPR MountItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MountItem(const MountItem& from);
  MountItem(MountItem&& from) noexcept
    : MountItem() {
    *this = ::std::move(from);
  }

  inline MountItem& operator=(const MountItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MountItem& operator=(MountItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MountItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MountItem* internal_default_instance() {
    return reinterpret_cast<const MountItem*>(
               &_MountItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(MountItem& a, MountItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MountItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MountItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MountItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MountItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MountItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MountItem& from) {
    MountItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MountItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.MountItem";
  }
  protected:
  explicit MountItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuidFieldNumber = 1,
    kMountIDFieldNumber = 2,
    kStrengthLvlFieldNumber = 3,
    kRefineLevelFieldNumber = 4,
    kStarLevelFieldNumber = 5,
    kRefineExpFieldNumber = 6,
    kStarExpFieldNumber = 7,
    kIsUsingFieldNumber = 8,
  };
  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // int32 MountID = 2;
  void clear_mountid();
  int32_t mountid() const;
  void set_mountid(int32_t value);
  private:
  int32_t _internal_mountid() const;
  void _internal_set_mountid(int32_t value);
  public:

  // int32 StrengthLvl = 3;
  void clear_strengthlvl();
  int32_t strengthlvl() const;
  void set_strengthlvl(int32_t value);
  private:
  int32_t _internal_strengthlvl() const;
  void _internal_set_strengthlvl(int32_t value);
  public:

  // int32 RefineLevel = 4;
  void clear_refinelevel();
  int32_t refinelevel() const;
  void set_refinelevel(int32_t value);
  private:
  int32_t _internal_refinelevel() const;
  void _internal_set_refinelevel(int32_t value);
  public:

  // int32 StarLevel = 5;
  void clear_starlevel();
  int32_t starlevel() const;
  void set_starlevel(int32_t value);
  private:
  int32_t _internal_starlevel() const;
  void _internal_set_starlevel(int32_t value);
  public:

  // int32 RefineExp = 6;
  void clear_refineexp();
  int32_t refineexp() const;
  void set_refineexp(int32_t value);
  private:
  int32_t _internal_refineexp() const;
  void _internal_set_refineexp(int32_t value);
  public:

  // int32 StarExp = 7;
  void clear_starexp();
  int32_t starexp() const;
  void set_starexp(int32_t value);
  private:
  int32_t _internal_starexp() const;
  void _internal_set_starexp(int32_t value);
  public:

  // int32 IsUsing = 8;
  void clear_isusing();
  int32_t isusing() const;
  void set_isusing(int32_t value);
  private:
  int32_t _internal_isusing() const;
  void _internal_set_isusing(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.MountItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint64_t guid_;
    int32_t mountid_;
    int32_t strengthlvl_;
    int32_t refinelevel_;
    int32_t starlevel_;
    int32_t refineexp_;
    int32_t starexp_;
    int32_t isusing_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class MountChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.MountChangeNty) */ {
 public:
  inline MountChangeNty() : MountChangeNty(nullptr) {}
  ~MountChangeNty() override;
  explicit PROTOBUF_CONSTEXPR MountChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MountChangeNty(const MountChangeNty& from);
  MountChangeNty(MountChangeNty&& from) noexcept
    : MountChangeNty() {
    *this = ::std::move(from);
  }

  inline MountChangeNty& operator=(const MountChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline MountChangeNty& operator=(MountChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MountChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const MountChangeNty* internal_default_instance() {
    return reinterpret_cast<const MountChangeNty*>(
               &_MountChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MountChangeNty& a, MountChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(MountChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MountChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MountChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MountChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MountChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MountChangeNty& from) {
    MountChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MountChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.MountChangeNty";
  }
  protected:
  explicit MountChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.MountItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::MountItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::MountItem& _internal_changelist(int index) const;
  ::symphony::proto::MountItem* _internal_add_changelist();
  public:
  const ::symphony::proto::MountItem& changelist(int index) const;
  ::symphony::proto::MountItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.MountChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class MailItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.MailItem) */ {
 public:
  inline MailItem() : MailItem(nullptr) {}
  ~MailItem() override;
  explicit PROTOBUF_CONSTEXPR MailItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MailItem(const MailItem& from);
  MailItem(MailItem&& from) noexcept
    : MailItem() {
    *this = ::std::move(from);
  }

  inline MailItem& operator=(const MailItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline MailItem& operator=(MailItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MailItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const MailItem* internal_default_instance() {
    return reinterpret_cast<const MailItem*>(
               &_MailItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(MailItem& a, MailItem& b) {
    a.Swap(&b);
  }
  inline void Swap(MailItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MailItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MailItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MailItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MailItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MailItem& from) {
    MailItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MailItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.MailItem";
  }
  protected:
  explicit MailItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemIDFieldNumber = 8,
    kItemNumFieldNumber = 9,
    kTitleFieldNumber = 4,
    kContentFieldNumber = 5,
    kSenderFieldNumber = 6,
    kGuidFieldNumber = 1,
    kMailTypeFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // repeated int32 ItemID = 8;
  int itemid_size() const;
  private:
  int _internal_itemid_size() const;
  public:
  void clear_itemid();
  private:
  int32_t _internal_itemid(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_itemid() const;
  void _internal_add_itemid(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_itemid();
  public:
  int32_t itemid(int index) const;
  void set_itemid(int index, int32_t value);
  void add_itemid(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      itemid() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_itemid();

  // repeated int32 ItemNum = 9;
  int itemnum_size() const;
  private:
  int _internal_itemnum_size() const;
  public:
  void clear_itemnum();
  private:
  int32_t _internal_itemnum(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_itemnum() const;
  void _internal_add_itemnum(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_itemnum();
  public:
  int32_t itemnum(int index) const;
  void set_itemnum(int index, int32_t value);
  void add_itemnum(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      itemnum() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_itemnum();

  // string Title = 4;
  void clear_title();
  const std::string& title() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_title(ArgT0&& arg0, ArgT... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* title);
  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(const std::string& value);
  std::string* _internal_mutable_title();
  public:

  // string Content = 5;
  void clear_content();
  const std::string& content() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_content(ArgT0&& arg0, ArgT... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* content);
  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(const std::string& value);
  std::string* _internal_mutable_content();
  public:

  // string Sender = 6;
  void clear_sender();
  const std::string& sender() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_sender(ArgT0&& arg0, ArgT... args);
  std::string* mutable_sender();
  PROTOBUF_NODISCARD std::string* release_sender();
  void set_allocated_sender(std::string* sender);
  private:
  const std::string& _internal_sender() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sender(const std::string& value);
  std::string* _internal_mutable_sender();
  public:

  // uint64 Guid = 1;
  void clear_guid();
  uint64_t guid() const;
  void set_guid(uint64_t value);
  private:
  uint64_t _internal_guid() const;
  void _internal_set_guid(uint64_t value);
  public:

  // int32 MailType = 2;
  void clear_mailtype();
  int32_t mailtype() const;
  void set_mailtype(int32_t value);
  private:
  int32_t _internal_mailtype() const;
  void _internal_set_mailtype(int32_t value);
  public:

  // int32 Status = 3;
  void clear_status();
  int32_t status() const;
  void set_status(int32_t value);
  private:
  int32_t _internal_status() const;
  void _internal_set_status(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.MailItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > itemid_;
    mutable std::atomic<int> _itemid_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > itemnum_;
    mutable std::atomic<int> _itemnum_cached_byte_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr title_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr content_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sender_;
    uint64_t guid_;
    int32_t mailtype_;
    int32_t status_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class MailChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.MailChangeNty) */ {
 public:
  inline MailChangeNty() : MailChangeNty(nullptr) {}
  ~MailChangeNty() override;
  explicit PROTOBUF_CONSTEXPR MailChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MailChangeNty(const MailChangeNty& from);
  MailChangeNty(MailChangeNty&& from) noexcept
    : MailChangeNty() {
    *this = ::std::move(from);
  }

  inline MailChangeNty& operator=(const MailChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline MailChangeNty& operator=(MailChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MailChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const MailChangeNty* internal_default_instance() {
    return reinterpret_cast<const MailChangeNty*>(
               &_MailChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(MailChangeNty& a, MailChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(MailChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MailChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MailChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MailChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MailChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MailChangeNty& from) {
    MailChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MailChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.MailChangeNty";
  }
  protected:
  explicit MailChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.MailItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::MailItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::MailItem& _internal_changelist(int index) const;
  ::symphony::proto::MailItem* _internal_add_changelist();
  public:
  const ::symphony::proto::MailItem& changelist(int index) const;
  ::symphony::proto::MailItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.MailChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class TaskItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.TaskItem) */ {
 public:
  inline TaskItem() : TaskItem(nullptr) {}
  ~TaskItem() override;
  explicit PROTOBUF_CONSTEXPR TaskItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TaskItem(const TaskItem& from);
  TaskItem(TaskItem&& from) noexcept
    : TaskItem() {
    *this = ::std::move(from);
  }

  inline TaskItem& operator=(const TaskItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskItem& operator=(TaskItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskItem* internal_default_instance() {
    return reinterpret_cast<const TaskItem*>(
               &_TaskItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(TaskItem& a, TaskItem& b) {
    a.Swap(&b);
  }
  inline void Swap(TaskItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TaskItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TaskItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TaskItem& from) {
    TaskItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.TaskItem";
  }
  protected:
  explicit TaskItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskIDFieldNumber = 1,
  };
  // uint32 TaskID = 1;
  void clear_taskid();
  uint32_t taskid() const;
  void set_taskid(uint32_t value);
  private:
  uint32_t _internal_taskid() const;
  void _internal_set_taskid(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.TaskItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t taskid_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class TaskChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.TaskChangeNty) */ {
 public:
  inline TaskChangeNty() : TaskChangeNty(nullptr) {}
  ~TaskChangeNty() override;
  explicit PROTOBUF_CONSTEXPR TaskChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TaskChangeNty(const TaskChangeNty& from);
  TaskChangeNty(TaskChangeNty&& from) noexcept
    : TaskChangeNty() {
    *this = ::std::move(from);
  }

  inline TaskChangeNty& operator=(const TaskChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline TaskChangeNty& operator=(TaskChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TaskChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const TaskChangeNty* internal_default_instance() {
    return reinterpret_cast<const TaskChangeNty*>(
               &_TaskChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(TaskChangeNty& a, TaskChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(TaskChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TaskChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TaskChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TaskChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const TaskChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const TaskChangeNty& from) {
    TaskChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TaskChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.TaskChangeNty";
  }
  protected:
  explicit TaskChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.TaskItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::TaskItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::TaskItem& _internal_changelist(int index) const;
  ::symphony::proto::TaskItem* _internal_add_changelist();
  public:
  const ::symphony::proto::TaskItem& changelist(int index) const;
  ::symphony::proto::TaskItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.TaskChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class CopyItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.CopyItem) */ {
 public:
  inline CopyItem() : CopyItem(nullptr) {}
  ~CopyItem() override;
  explicit PROTOBUF_CONSTEXPR CopyItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CopyItem(const CopyItem& from);
  CopyItem(CopyItem&& from) noexcept
    : CopyItem() {
    *this = ::std::move(from);
  }

  inline CopyItem& operator=(const CopyItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline CopyItem& operator=(CopyItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CopyItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const CopyItem* internal_default_instance() {
    return reinterpret_cast<const CopyItem*>(
               &_CopyItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(CopyItem& a, CopyItem& b) {
    a.Swap(&b);
  }
  inline void Swap(CopyItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CopyItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CopyItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CopyItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CopyItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const CopyItem& from) {
    CopyItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CopyItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.CopyItem";
  }
  protected:
  explicit CopyItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCopyIDFieldNumber = 1,
    kStarNumFieldNumber = 2,
    kBattleCntFieldNumber = 3,
    kResetCntFieldNumber = 4,
  };
  // uint32 CopyID = 1;
  void clear_copyid();
  uint32_t copyid() const;
  void set_copyid(uint32_t value);
  private:
  uint32_t _internal_copyid() const;
  void _internal_set_copyid(uint32_t value);
  public:

  // int32 StarNum = 2;
  void clear_starnum();
  int32_t starnum() const;
  void set_starnum(int32_t value);
  private:
  int32_t _internal_starnum() const;
  void _internal_set_starnum(int32_t value);
  public:

  // int32 BattleCnt = 3;
  void clear_battlecnt();
  int32_t battlecnt() const;
  void set_battlecnt(int32_t value);
  private:
  int32_t _internal_battlecnt() const;
  void _internal_set_battlecnt(int32_t value);
  public:

  // int32 ResetCnt = 4;
  void clear_resetcnt();
  int32_t resetcnt() const;
  void set_resetcnt(int32_t value);
  private:
  int32_t _internal_resetcnt() const;
  void _internal_set_resetcnt(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.CopyItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t copyid_;
    int32_t starnum_;
    int32_t battlecnt_;
    int32_t resetcnt_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class ChapterItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.ChapterItem) */ {
 public:
  inline ChapterItem() : ChapterItem(nullptr) {}
  ~ChapterItem() override;
  explicit PROTOBUF_CONSTEXPR ChapterItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ChapterItem(const ChapterItem& from);
  ChapterItem(ChapterItem&& from) noexcept
    : ChapterItem() {
    *this = ::std::move(from);
  }

  inline ChapterItem& operator=(const ChapterItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChapterItem& operator=(ChapterItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChapterItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChapterItem* internal_default_instance() {
    return reinterpret_cast<const ChapterItem*>(
               &_ChapterItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ChapterItem& a, ChapterItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ChapterItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChapterItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChapterItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ChapterItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ChapterItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ChapterItem& from) {
    ChapterItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ChapterItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.ChapterItem";
  }
  protected:
  explicit ChapterItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChapterIDFieldNumber = 1,
    kStarAwardFieldNumber = 2,
    kSceneAwardFieldNumber = 3,
    kCopyTypeFieldNumber = 4,
  };
  // uint32 ChapterID = 1;
  void clear_chapterid();
  uint32_t chapterid() const;
  void set_chapterid(uint32_t value);
  private:
  uint32_t _internal_chapterid() const;
  void _internal_set_chapterid(uint32_t value);
  public:

  // uint32 StarAward = 2;
  void clear_staraward();
  uint32_t staraward() const;
  void set_staraward(uint32_t value);
  private:
  uint32_t _internal_staraward() const;
  void _internal_set_staraward(uint32_t value);
  public:

  // uint32 SceneAward = 3;
  void clear_sceneaward();
  uint32_t sceneaward() const;
  void set_sceneaward(uint32_t value);
  private:
  uint32_t _internal_sceneaward() const;
  void _internal_set_sceneaward(uint32_t value);
  public:

  // uint32 CopyType = 4;
  void clear_copytype();
  uint32_t copytype() const;
  void set_copytype(uint32_t value);
  private:
  uint32_t _internal_copytype() const;
  void _internal_set_copytype(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.ChapterItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    uint32_t chapterid_;
    uint32_t staraward_;
    uint32_t sceneaward_;
    uint32_t copytype_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class ActionItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.ActionItem) */ {
 public:
  inline ActionItem() : ActionItem(nullptr) {}
  ~ActionItem() override;
  explicit PROTOBUF_CONSTEXPR ActionItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ActionItem(const ActionItem& from);
  ActionItem(ActionItem&& from) noexcept
    : ActionItem() {
    *this = ::std::move(from);
  }

  inline ActionItem& operator=(const ActionItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActionItem& operator=(ActionItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ActionItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ActionItem* internal_default_instance() {
    return reinterpret_cast<const ActionItem*>(
               &_ActionItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ActionItem& a, ActionItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ActionItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ActionItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ActionItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ActionItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ActionItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ActionItem& from) {
    ActionItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActionItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.ActionItem";
  }
  protected:
  explicit ActionItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionFieldNumber = 1,
    kActimeFieldNumber = 2,
  };
  // int64 Action = 1;
  void clear_action();
  int64_t action() const;
  void set_action(int64_t value);
  private:
  int64_t _internal_action() const;
  void _internal_set_action(int64_t value);
  public:

  // int64 Actime = 2;
  void clear_actime();
  int64_t actime() const;
  void set_actime(int64_t value);
  private:
  int64_t _internal_actime() const;
  void _internal_set_actime(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.ActionItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int64_t action_;
    int64_t actime_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class GuideItem final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.GuideItem) */ {
 public:
  inline GuideItem() : GuideItem(nullptr) {}
  ~GuideItem() override;
  explicit PROTOBUF_CONSTEXPR GuideItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GuideItem(const GuideItem& from);
  GuideItem(GuideItem&& from) noexcept
    : GuideItem() {
    *this = ::std::move(from);
  }

  inline GuideItem& operator=(const GuideItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuideItem& operator=(GuideItem&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GuideItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const GuideItem* internal_default_instance() {
    return reinterpret_cast<const GuideItem*>(
               &_GuideItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GuideItem& a, GuideItem& b) {
    a.Swap(&b);
  }
  inline void Swap(GuideItem* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GuideItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GuideItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GuideItem>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const GuideItem& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const GuideItem& from) {
    GuideItem::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuideItem* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.GuideItem";
  }
  protected:
  explicit GuideItem(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // int32 Id = 1;
  void clear_id();
  int32_t id() const;
  void set_id(int32_t value);
  private:
  int32_t _internal_id() const;
  void _internal_set_id(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.GuideItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    int32_t id_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class SkillChangeNty final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.SkillChangeNty) */ {
 public:
  inline SkillChangeNty() : SkillChangeNty(nullptr) {}
  ~SkillChangeNty() override;
  explicit PROTOBUF_CONSTEXPR SkillChangeNty(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SkillChangeNty(const SkillChangeNty& from);
  SkillChangeNty(SkillChangeNty&& from) noexcept
    : SkillChangeNty() {
    *this = ::std::move(from);
  }

  inline SkillChangeNty& operator=(const SkillChangeNty& from) {
    CopyFrom(from);
    return *this;
  }
  inline SkillChangeNty& operator=(SkillChangeNty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SkillChangeNty& default_instance() {
    return *internal_default_instance();
  }
  static inline const SkillChangeNty* internal_default_instance() {
    return reinterpret_cast<const SkillChangeNty*>(
               &_SkillChangeNty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(SkillChangeNty& a, SkillChangeNty& b) {
    a.Swap(&b);
  }
  inline void Swap(SkillChangeNty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SkillChangeNty* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SkillChangeNty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SkillChangeNty>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SkillChangeNty& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SkillChangeNty& from) {
    SkillChangeNty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SkillChangeNty* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.SkillChangeNty";
  }
  protected:
  explicit SkillChangeNty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChangeListFieldNumber = 1,
    kRemoveListFieldNumber = 2,
  };
  // repeated .symphony.proto.SkillItem ChangeList = 1;
  int changelist_size() const;
  private:
  int _internal_changelist_size() const;
  public:
  void clear_changelist();
  ::symphony::proto::SkillItem* mutable_changelist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >*
      mutable_changelist();
  private:
  const ::symphony::proto::SkillItem& _internal_changelist(int index) const;
  ::symphony::proto::SkillItem* _internal_add_changelist();
  public:
  const ::symphony::proto::SkillItem& changelist(int index) const;
  ::symphony::proto::SkillItem* add_changelist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >&
      changelist() const;

  // repeated uint64 RemoveList = 2;
  int removelist_size() const;
  private:
  int _internal_removelist_size() const;
  public:
  void clear_removelist();
  private:
  uint64_t _internal_removelist(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      _internal_removelist() const;
  void _internal_add_removelist(uint64_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      _internal_mutable_removelist();
  public:
  uint64_t removelist(int index) const;
  void set_removelist(int index, uint64_t value);
  void add_removelist(uint64_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
      removelist() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
      mutable_removelist();

  // @@protoc_insertion_point(class_scope:symphony.proto.SkillChangeNty)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem > changelist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t > removelist_;
    mutable std::atomic<int> _removelist_cached_byte_size_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// -------------------------------------------------------------------

class RoleLoginAck final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:symphony.proto.RoleLoginAck) */ {
 public:
  inline RoleLoginAck() : RoleLoginAck(nullptr) {}
  ~RoleLoginAck() override;
  explicit PROTOBUF_CONSTEXPR RoleLoginAck(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RoleLoginAck(const RoleLoginAck& from);
  RoleLoginAck(RoleLoginAck&& from) noexcept
    : RoleLoginAck() {
    *this = ::std::move(from);
  }

  inline RoleLoginAck& operator=(const RoleLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoleLoginAck& operator=(RoleLoginAck&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoleLoginAck& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoleLoginAck* internal_default_instance() {
    return reinterpret_cast<const RoleLoginAck*>(
               &_RoleLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(RoleLoginAck& a, RoleLoginAck& b) {
    a.Swap(&b);
  }
  inline void Swap(RoleLoginAck* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoleLoginAck* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoleLoginAck* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RoleLoginAck>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const RoleLoginAck& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const RoleLoginAck& from) {
    RoleLoginAck::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RoleLoginAck* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "symphony.proto.RoleLoginAck";
  }
  protected:
  explicit RoleLoginAck(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActionListFieldNumber = 11,
    kEquipListFieldNumber = 12,
    kGemListFieldNumber = 13,
    kPetListFieldNumber = 14,
    kPartnerListFieldNumber = 15,
    kMountListFieldNumber = 16,
    kBagItemListFieldNumber = 17,
    kMailListFieldNumber = 18,
    kTaskListFieldNumber = 19,
    kCopyListFieldNumber = 20,
    kChapterListFieldNumber = 21,
    kSkillListFieldNumber = 22,
    kNameFieldNumber = 7,
    kAccountIDFieldNumber = 2,
    kRetCodeFieldNumber = 1,
    kCarrerFieldNumber = 4,
    kRoleIDFieldNumber = 3,
    kExpFieldNumber = 6,
    kLevelFieldNumber = 5,
    kVipLvlFieldNumber = 8,
    kFightValueFieldNumber = 10,
    kVipExpFieldNumber = 9,
  };
  // repeated .symphony.proto.ActionItem ActionList = 11;
  int actionlist_size() const;
  private:
  int _internal_actionlist_size() const;
  public:
  void clear_actionlist();
  ::symphony::proto::ActionItem* mutable_actionlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ActionItem >*
      mutable_actionlist();
  private:
  const ::symphony::proto::ActionItem& _internal_actionlist(int index) const;
  ::symphony::proto::ActionItem* _internal_add_actionlist();
  public:
  const ::symphony::proto::ActionItem& actionlist(int index) const;
  ::symphony::proto::ActionItem* add_actionlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ActionItem >&
      actionlist() const;

  // repeated .symphony.proto.EquipItem EquipList = 12;
  int equiplist_size() const;
  private:
  int _internal_equiplist_size() const;
  public:
  void clear_equiplist();
  ::symphony::proto::EquipItem* mutable_equiplist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >*
      mutable_equiplist();
  private:
  const ::symphony::proto::EquipItem& _internal_equiplist(int index) const;
  ::symphony::proto::EquipItem* _internal_add_equiplist();
  public:
  const ::symphony::proto::EquipItem& equiplist(int index) const;
  ::symphony::proto::EquipItem* add_equiplist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >&
      equiplist() const;

  // repeated .symphony.proto.GemItem GemList = 13;
  int gemlist_size() const;
  private:
  int _internal_gemlist_size() const;
  public:
  void clear_gemlist();
  ::symphony::proto::GemItem* mutable_gemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >*
      mutable_gemlist();
  private:
  const ::symphony::proto::GemItem& _internal_gemlist(int index) const;
  ::symphony::proto::GemItem* _internal_add_gemlist();
  public:
  const ::symphony::proto::GemItem& gemlist(int index) const;
  ::symphony::proto::GemItem* add_gemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >&
      gemlist() const;

  // repeated .symphony.proto.PetItem PetList = 14;
  int petlist_size() const;
  private:
  int _internal_petlist_size() const;
  public:
  void clear_petlist();
  ::symphony::proto::PetItem* mutable_petlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >*
      mutable_petlist();
  private:
  const ::symphony::proto::PetItem& _internal_petlist(int index) const;
  ::symphony::proto::PetItem* _internal_add_petlist();
  public:
  const ::symphony::proto::PetItem& petlist(int index) const;
  ::symphony::proto::PetItem* add_petlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >&
      petlist() const;

  // repeated .symphony.proto.PartnerItem PartnerList = 15;
  int partnerlist_size() const;
  private:
  int _internal_partnerlist_size() const;
  public:
  void clear_partnerlist();
  ::symphony::proto::PartnerItem* mutable_partnerlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >*
      mutable_partnerlist();
  private:
  const ::symphony::proto::PartnerItem& _internal_partnerlist(int index) const;
  ::symphony::proto::PartnerItem* _internal_add_partnerlist();
  public:
  const ::symphony::proto::PartnerItem& partnerlist(int index) const;
  ::symphony::proto::PartnerItem* add_partnerlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >&
      partnerlist() const;

  // repeated .symphony.proto.MountItem MountList = 16;
  int mountlist_size() const;
  private:
  int _internal_mountlist_size() const;
  public:
  void clear_mountlist();
  ::symphony::proto::MountItem* mutable_mountlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >*
      mutable_mountlist();
  private:
  const ::symphony::proto::MountItem& _internal_mountlist(int index) const;
  ::symphony::proto::MountItem* _internal_add_mountlist();
  public:
  const ::symphony::proto::MountItem& mountlist(int index) const;
  ::symphony::proto::MountItem* add_mountlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >&
      mountlist() const;

  // repeated .symphony.proto.BagItem BagItemList = 17;
  int bagitemlist_size() const;
  private:
  int _internal_bagitemlist_size() const;
  public:
  void clear_bagitemlist();
  ::symphony::proto::BagItem* mutable_bagitemlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >*
      mutable_bagitemlist();
  private:
  const ::symphony::proto::BagItem& _internal_bagitemlist(int index) const;
  ::symphony::proto::BagItem* _internal_add_bagitemlist();
  public:
  const ::symphony::proto::BagItem& bagitemlist(int index) const;
  ::symphony::proto::BagItem* add_bagitemlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >&
      bagitemlist() const;

  // repeated .symphony.proto.MailItem MailList = 18;
  int maillist_size() const;
  private:
  int _internal_maillist_size() const;
  public:
  void clear_maillist();
  ::symphony::proto::MailItem* mutable_maillist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >*
      mutable_maillist();
  private:
  const ::symphony::proto::MailItem& _internal_maillist(int index) const;
  ::symphony::proto::MailItem* _internal_add_maillist();
  public:
  const ::symphony::proto::MailItem& maillist(int index) const;
  ::symphony::proto::MailItem* add_maillist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >&
      maillist() const;

  // repeated .symphony.proto.TaskItem TaskList = 19;
  int tasklist_size() const;
  private:
  int _internal_tasklist_size() const;
  public:
  void clear_tasklist();
  ::symphony::proto::TaskItem* mutable_tasklist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >*
      mutable_tasklist();
  private:
  const ::symphony::proto::TaskItem& _internal_tasklist(int index) const;
  ::symphony::proto::TaskItem* _internal_add_tasklist();
  public:
  const ::symphony::proto::TaskItem& tasklist(int index) const;
  ::symphony::proto::TaskItem* add_tasklist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >&
      tasklist() const;

  // repeated .symphony.proto.CopyItem CopyList = 20;
  int copylist_size() const;
  private:
  int _internal_copylist_size() const;
  public:
  void clear_copylist();
  ::symphony::proto::CopyItem* mutable_copylist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::CopyItem >*
      mutable_copylist();
  private:
  const ::symphony::proto::CopyItem& _internal_copylist(int index) const;
  ::symphony::proto::CopyItem* _internal_add_copylist();
  public:
  const ::symphony::proto::CopyItem& copylist(int index) const;
  ::symphony::proto::CopyItem* add_copylist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::CopyItem >&
      copylist() const;

  // repeated .symphony.proto.ChapterItem ChapterList = 21;
  int chapterlist_size() const;
  private:
  int _internal_chapterlist_size() const;
  public:
  void clear_chapterlist();
  ::symphony::proto::ChapterItem* mutable_chapterlist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ChapterItem >*
      mutable_chapterlist();
  private:
  const ::symphony::proto::ChapterItem& _internal_chapterlist(int index) const;
  ::symphony::proto::ChapterItem* _internal_add_chapterlist();
  public:
  const ::symphony::proto::ChapterItem& chapterlist(int index) const;
  ::symphony::proto::ChapterItem* add_chapterlist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ChapterItem >&
      chapterlist() const;

  // repeated .symphony.proto.SkillItem SkillList = 22;
  int skilllist_size() const;
  private:
  int _internal_skilllist_size() const;
  public:
  void clear_skilllist();
  ::symphony::proto::SkillItem* mutable_skilllist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >*
      mutable_skilllist();
  private:
  const ::symphony::proto::SkillItem& _internal_skilllist(int index) const;
  ::symphony::proto::SkillItem* _internal_add_skilllist();
  public:
  const ::symphony::proto::SkillItem& skilllist(int index) const;
  ::symphony::proto::SkillItem* add_skilllist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >&
      skilllist() const;

  // string Name = 7;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 AccountID = 2;
  void clear_accountid();
  uint64_t accountid() const;
  void set_accountid(uint64_t value);
  private:
  uint64_t _internal_accountid() const;
  void _internal_set_accountid(uint64_t value);
  public:

  // uint32 RetCode = 1;
  void clear_retcode();
  uint32_t retcode() const;
  void set_retcode(uint32_t value);
  private:
  uint32_t _internal_retcode() const;
  void _internal_set_retcode(uint32_t value);
  public:

  // int32 Carrer = 4;
  void clear_carrer();
  int32_t carrer() const;
  void set_carrer(int32_t value);
  private:
  int32_t _internal_carrer() const;
  void _internal_set_carrer(int32_t value);
  public:

  // uint64 RoleID = 3;
  void clear_roleid();
  uint64_t roleid() const;
  void set_roleid(uint64_t value);
  private:
  uint64_t _internal_roleid() const;
  void _internal_set_roleid(uint64_t value);
  public:

  // int64 Exp = 6;
  void clear_exp();
  int64_t exp() const;
  void set_exp(int64_t value);
  private:
  int64_t _internal_exp() const;
  void _internal_set_exp(int64_t value);
  public:

  // int32 Level = 5;
  void clear_level();
  int32_t level() const;
  void set_level(int32_t value);
  private:
  int32_t _internal_level() const;
  void _internal_set_level(int32_t value);
  public:

  // int32 VipLvl = 8;
  void clear_viplvl();
  int32_t viplvl() const;
  void set_viplvl(int32_t value);
  private:
  int32_t _internal_viplvl() const;
  void _internal_set_viplvl(int32_t value);
  public:

  // int64 FightValue = 10;
  void clear_fightvalue();
  int64_t fightvalue() const;
  void set_fightvalue(int64_t value);
  private:
  int64_t _internal_fightvalue() const;
  void _internal_set_fightvalue(int64_t value);
  public:

  // int32 VipExp = 9;
  void clear_vipexp();
  int32_t vipexp() const;
  void set_vipexp(int32_t value);
  private:
  int32_t _internal_vipexp() const;
  void _internal_set_vipexp(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:symphony.proto.RoleLoginAck)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ActionItem > actionlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem > equiplist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem > gemlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem > petlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem > partnerlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem > mountlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem > bagitemlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem > maillist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem > tasklist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::CopyItem > copylist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ChapterItem > chapterlist_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem > skilllist_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
    uint64_t accountid_;
    uint32_t retcode_;
    int32_t carrer_;
    uint64_t roleid_;
    int64_t exp_;
    int32_t level_;
    int32_t viplvl_;
    int64_t fightvalue_;
    int32_t vipexp_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BagItem

// uint64 Guid = 1;
inline void BagItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t BagItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t BagItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagItem.Guid)
  return _internal_guid();
}
inline void BagItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void BagItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.BagItem.Guid)
}

// uint64 ItemGuid = 2;
inline void BagItem::clear_itemguid() {
  _impl_.itemguid_ = uint64_t{0u};
}
inline uint64_t BagItem::_internal_itemguid() const {
  return _impl_.itemguid_;
}
inline uint64_t BagItem::itemguid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagItem.ItemGuid)
  return _internal_itemguid();
}
inline void BagItem::_internal_set_itemguid(uint64_t value) {
  
  _impl_.itemguid_ = value;
}
inline void BagItem::set_itemguid(uint64_t value) {
  _internal_set_itemguid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.BagItem.ItemGuid)
}

// int32 ItemID = 3;
inline void BagItem::clear_itemid() {
  _impl_.itemid_ = 0;
}
inline int32_t BagItem::_internal_itemid() const {
  return _impl_.itemid_;
}
inline int32_t BagItem::itemid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagItem.ItemID)
  return _internal_itemid();
}
inline void BagItem::_internal_set_itemid(int32_t value) {
  
  _impl_.itemid_ = value;
}
inline void BagItem::set_itemid(int32_t value) {
  _internal_set_itemid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.BagItem.ItemID)
}

// int64 ItemNum = 4;
inline void BagItem::clear_itemnum() {
  _impl_.itemnum_ = int64_t{0};
}
inline int64_t BagItem::_internal_itemnum() const {
  return _impl_.itemnum_;
}
inline int64_t BagItem::itemnum() const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagItem.ItemNum)
  return _internal_itemnum();
}
inline void BagItem::_internal_set_itemnum(int64_t value) {
  
  _impl_.itemnum_ = value;
}
inline void BagItem::set_itemnum(int64_t value) {
  _internal_set_itemnum(value);
  // @@protoc_insertion_point(field_set:symphony.proto.BagItem.ItemNum)
}

// bool Bind = 5;
inline void BagItem::clear_bind() {
  _impl_.bind_ = false;
}
inline bool BagItem::_internal_bind() const {
  return _impl_.bind_;
}
inline bool BagItem::bind() const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagItem.Bind)
  return _internal_bind();
}
inline void BagItem::_internal_set_bind(bool value) {
  
  _impl_.bind_ = value;
}
inline void BagItem::set_bind(bool value) {
  _internal_set_bind(value);
  // @@protoc_insertion_point(field_set:symphony.proto.BagItem.Bind)
}

// -------------------------------------------------------------------

// BagChangeNty

// repeated .symphony.proto.BagItem ChangeList = 1;
inline int BagChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int BagChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void BagChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::BagItem* BagChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.BagChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >*
BagChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.BagChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::BagItem& BagChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::BagItem& BagChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::BagItem* BagChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::BagItem* BagChangeNty::add_changelist() {
  ::symphony::proto::BagItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.BagChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >&
BagChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.BagChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int BagChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int BagChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void BagChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t BagChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t BagChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.BagChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void BagChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.BagChangeNty.RemoveList)
}
inline void BagChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void BagChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.BagChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
BagChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
BagChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.BagChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
BagChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
BagChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.BagChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// EquipItem

// uint64 Guid = 1;
inline void EquipItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t EquipItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t EquipItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.Guid)
  return _internal_guid();
}
inline void EquipItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void EquipItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.Guid)
}

// int32 EquipID = 2;
inline void EquipItem::clear_equipid() {
  _impl_.equipid_ = 0;
}
inline int32_t EquipItem::_internal_equipid() const {
  return _impl_.equipid_;
}
inline int32_t EquipItem::equipid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.EquipID)
  return _internal_equipid();
}
inline void EquipItem::_internal_set_equipid(int32_t value) {
  
  _impl_.equipid_ = value;
}
inline void EquipItem::set_equipid(int32_t value) {
  _internal_set_equipid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.EquipID)
}

// int32 StrengthLvl = 3;
inline void EquipItem::clear_strengthlvl() {
  _impl_.strengthlvl_ = 0;
}
inline int32_t EquipItem::_internal_strengthlvl() const {
  return _impl_.strengthlvl_;
}
inline int32_t EquipItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void EquipItem::_internal_set_strengthlvl(int32_t value) {
  
  _impl_.strengthlvl_ = value;
}
inline void EquipItem::set_strengthlvl(int32_t value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.StrengthLvl)
}

// int32 RefineLevel = 4;
inline void EquipItem::clear_refinelevel() {
  _impl_.refinelevel_ = 0;
}
inline int32_t EquipItem::_internal_refinelevel() const {
  return _impl_.refinelevel_;
}
inline int32_t EquipItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.RefineLevel)
  return _internal_refinelevel();
}
inline void EquipItem::_internal_set_refinelevel(int32_t value) {
  
  _impl_.refinelevel_ = value;
}
inline void EquipItem::set_refinelevel(int32_t value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.RefineLevel)
}

// int32 StarLevel = 5;
inline void EquipItem::clear_starlevel() {
  _impl_.starlevel_ = 0;
}
inline int32_t EquipItem::_internal_starlevel() const {
  return _impl_.starlevel_;
}
inline int32_t EquipItem::starlevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.StarLevel)
  return _internal_starlevel();
}
inline void EquipItem::_internal_set_starlevel(int32_t value) {
  
  _impl_.starlevel_ = value;
}
inline void EquipItem::set_starlevel(int32_t value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.StarLevel)
}

// int32 RefineExp = 6;
inline void EquipItem::clear_refineexp() {
  _impl_.refineexp_ = 0;
}
inline int32_t EquipItem::_internal_refineexp() const {
  return _impl_.refineexp_;
}
inline int32_t EquipItem::refineexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.RefineExp)
  return _internal_refineexp();
}
inline void EquipItem::_internal_set_refineexp(int32_t value) {
  
  _impl_.refineexp_ = value;
}
inline void EquipItem::set_refineexp(int32_t value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.RefineExp)
}

// int32 StarExp = 7;
inline void EquipItem::clear_starexp() {
  _impl_.starexp_ = 0;
}
inline int32_t EquipItem::_internal_starexp() const {
  return _impl_.starexp_;
}
inline int32_t EquipItem::starexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.StarExp)
  return _internal_starexp();
}
inline void EquipItem::_internal_set_starexp(int32_t value) {
  
  _impl_.starexp_ = value;
}
inline void EquipItem::set_starexp(int32_t value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.StarExp)
}

// int32 IsUsing = 8;
inline void EquipItem::clear_isusing() {
  _impl_.isusing_ = 0;
}
inline int32_t EquipItem::_internal_isusing() const {
  return _impl_.isusing_;
}
inline int32_t EquipItem::isusing() const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipItem.IsUsing)
  return _internal_isusing();
}
inline void EquipItem::_internal_set_isusing(int32_t value) {
  
  _impl_.isusing_ = value;
}
inline void EquipItem::set_isusing(int32_t value) {
  _internal_set_isusing(value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipItem.IsUsing)
}

// -------------------------------------------------------------------

// EquipChangeNty

// repeated .symphony.proto.EquipItem ChangeList = 1;
inline int EquipChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int EquipChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void EquipChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::EquipItem* EquipChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.EquipChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >*
EquipChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.EquipChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::EquipItem& EquipChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::EquipItem& EquipChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::EquipItem* EquipChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::EquipItem* EquipChangeNty::add_changelist() {
  ::symphony::proto::EquipItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.EquipChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >&
EquipChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.EquipChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int EquipChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int EquipChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void EquipChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t EquipChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t EquipChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.EquipChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void EquipChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.EquipChangeNty.RemoveList)
}
inline void EquipChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void EquipChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.EquipChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
EquipChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
EquipChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.EquipChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
EquipChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
EquipChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.EquipChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// GemItem

// uint64 Guid = 1;
inline void GemItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t GemItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t GemItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.Guid)
  return _internal_guid();
}
inline void GemItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void GemItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.Guid)
}

// int32 GemID = 2;
inline void GemItem::clear_gemid() {
  _impl_.gemid_ = 0;
}
inline int32_t GemItem::_internal_gemid() const {
  return _impl_.gemid_;
}
inline int32_t GemItem::gemid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.GemID)
  return _internal_gemid();
}
inline void GemItem::_internal_set_gemid(int32_t value) {
  
  _impl_.gemid_ = value;
}
inline void GemItem::set_gemid(int32_t value) {
  _internal_set_gemid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.GemID)
}

// int32 StrengthLvl = 3;
inline void GemItem::clear_strengthlvl() {
  _impl_.strengthlvl_ = 0;
}
inline int32_t GemItem::_internal_strengthlvl() const {
  return _impl_.strengthlvl_;
}
inline int32_t GemItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void GemItem::_internal_set_strengthlvl(int32_t value) {
  
  _impl_.strengthlvl_ = value;
}
inline void GemItem::set_strengthlvl(int32_t value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.StrengthLvl)
}

// int32 RefineLevel = 4;
inline void GemItem::clear_refinelevel() {
  _impl_.refinelevel_ = 0;
}
inline int32_t GemItem::_internal_refinelevel() const {
  return _impl_.refinelevel_;
}
inline int32_t GemItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.RefineLevel)
  return _internal_refinelevel();
}
inline void GemItem::_internal_set_refinelevel(int32_t value) {
  
  _impl_.refinelevel_ = value;
}
inline void GemItem::set_refinelevel(int32_t value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.RefineLevel)
}

// int32 StarLevel = 5;
inline void GemItem::clear_starlevel() {
  _impl_.starlevel_ = 0;
}
inline int32_t GemItem::_internal_starlevel() const {
  return _impl_.starlevel_;
}
inline int32_t GemItem::starlevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.StarLevel)
  return _internal_starlevel();
}
inline void GemItem::_internal_set_starlevel(int32_t value) {
  
  _impl_.starlevel_ = value;
}
inline void GemItem::set_starlevel(int32_t value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.StarLevel)
}

// int32 RefineExp = 6;
inline void GemItem::clear_refineexp() {
  _impl_.refineexp_ = 0;
}
inline int32_t GemItem::_internal_refineexp() const {
  return _impl_.refineexp_;
}
inline int32_t GemItem::refineexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.RefineExp)
  return _internal_refineexp();
}
inline void GemItem::_internal_set_refineexp(int32_t value) {
  
  _impl_.refineexp_ = value;
}
inline void GemItem::set_refineexp(int32_t value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.RefineExp)
}

// int32 StarExp = 7;
inline void GemItem::clear_starexp() {
  _impl_.starexp_ = 0;
}
inline int32_t GemItem::_internal_starexp() const {
  return _impl_.starexp_;
}
inline int32_t GemItem::starexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.StarExp)
  return _internal_starexp();
}
inline void GemItem::_internal_set_starexp(int32_t value) {
  
  _impl_.starexp_ = value;
}
inline void GemItem::set_starexp(int32_t value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.StarExp)
}

// int32 Pos = 8;
inline void GemItem::clear_pos() {
  _impl_.pos_ = 0;
}
inline int32_t GemItem::_internal_pos() const {
  return _impl_.pos_;
}
inline int32_t GemItem::pos() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemItem.Pos)
  return _internal_pos();
}
inline void GemItem::_internal_set_pos(int32_t value) {
  
  _impl_.pos_ = value;
}
inline void GemItem::set_pos(int32_t value) {
  _internal_set_pos(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemItem.Pos)
}

// -------------------------------------------------------------------

// GemChangeNty

// repeated .symphony.proto.GemItem ChangeList = 1;
inline int GemChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int GemChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void GemChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::GemItem* GemChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.GemChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >*
GemChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.GemChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::GemItem& GemChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::GemItem& GemChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::GemItem* GemChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::GemItem* GemChangeNty::add_changelist() {
  ::symphony::proto::GemItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.GemChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >&
GemChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.GemChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int GemChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int GemChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void GemChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t GemChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t GemChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.GemChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void GemChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.GemChangeNty.RemoveList)
}
inline void GemChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void GemChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.GemChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
GemChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
GemChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.GemChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
GemChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
GemChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.GemChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// PetItem

// uint64 Guid = 1;
inline void PetItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t PetItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t PetItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.Guid)
  return _internal_guid();
}
inline void PetItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void PetItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.Guid)
}

// int32 PetID = 2;
inline void PetItem::clear_petid() {
  _impl_.petid_ = 0;
}
inline int32_t PetItem::_internal_petid() const {
  return _impl_.petid_;
}
inline int32_t PetItem::petid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.PetID)
  return _internal_petid();
}
inline void PetItem::_internal_set_petid(int32_t value) {
  
  _impl_.petid_ = value;
}
inline void PetItem::set_petid(int32_t value) {
  _internal_set_petid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.PetID)
}

// int32 StrengthLvl = 3;
inline void PetItem::clear_strengthlvl() {
  _impl_.strengthlvl_ = 0;
}
inline int32_t PetItem::_internal_strengthlvl() const {
  return _impl_.strengthlvl_;
}
inline int32_t PetItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void PetItem::_internal_set_strengthlvl(int32_t value) {
  
  _impl_.strengthlvl_ = value;
}
inline void PetItem::set_strengthlvl(int32_t value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.StrengthLvl)
}

// int32 RefineLevel = 4;
inline void PetItem::clear_refinelevel() {
  _impl_.refinelevel_ = 0;
}
inline int32_t PetItem::_internal_refinelevel() const {
  return _impl_.refinelevel_;
}
inline int32_t PetItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.RefineLevel)
  return _internal_refinelevel();
}
inline void PetItem::_internal_set_refinelevel(int32_t value) {
  
  _impl_.refinelevel_ = value;
}
inline void PetItem::set_refinelevel(int32_t value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.RefineLevel)
}

// int32 StarLevel = 5;
inline void PetItem::clear_starlevel() {
  _impl_.starlevel_ = 0;
}
inline int32_t PetItem::_internal_starlevel() const {
  return _impl_.starlevel_;
}
inline int32_t PetItem::starlevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.StarLevel)
  return _internal_starlevel();
}
inline void PetItem::_internal_set_starlevel(int32_t value) {
  
  _impl_.starlevel_ = value;
}
inline void PetItem::set_starlevel(int32_t value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.StarLevel)
}

// int32 RefineExp = 6;
inline void PetItem::clear_refineexp() {
  _impl_.refineexp_ = 0;
}
inline int32_t PetItem::_internal_refineexp() const {
  return _impl_.refineexp_;
}
inline int32_t PetItem::refineexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.RefineExp)
  return _internal_refineexp();
}
inline void PetItem::_internal_set_refineexp(int32_t value) {
  
  _impl_.refineexp_ = value;
}
inline void PetItem::set_refineexp(int32_t value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.RefineExp)
}

// int32 StarExp = 7;
inline void PetItem::clear_starexp() {
  _impl_.starexp_ = 0;
}
inline int32_t PetItem::_internal_starexp() const {
  return _impl_.starexp_;
}
inline int32_t PetItem::starexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.StarExp)
  return _internal_starexp();
}
inline void PetItem::_internal_set_starexp(int32_t value) {
  
  _impl_.starexp_ = value;
}
inline void PetItem::set_starexp(int32_t value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.StarExp)
}

// int32 IsUsing = 8;
inline void PetItem::clear_isusing() {
  _impl_.isusing_ = 0;
}
inline int32_t PetItem::_internal_isusing() const {
  return _impl_.isusing_;
}
inline int32_t PetItem::isusing() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetItem.IsUsing)
  return _internal_isusing();
}
inline void PetItem::_internal_set_isusing(int32_t value) {
  
  _impl_.isusing_ = value;
}
inline void PetItem::set_isusing(int32_t value) {
  _internal_set_isusing(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetItem.IsUsing)
}

// -------------------------------------------------------------------

// PetChangeNty

// repeated .symphony.proto.PetItem ChangeList = 1;
inline int PetChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int PetChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void PetChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::PetItem* PetChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.PetChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >*
PetChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.PetChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::PetItem& PetChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::PetItem& PetChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::PetItem* PetChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::PetItem* PetChangeNty::add_changelist() {
  ::symphony::proto::PetItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.PetChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >&
PetChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.PetChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int PetChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int PetChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void PetChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t PetChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t PetChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.PetChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void PetChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.PetChangeNty.RemoveList)
}
inline void PetChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void PetChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.PetChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
PetChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
PetChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.PetChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
PetChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
PetChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.PetChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// PartnerItem

// uint64 Guid = 1;
inline void PartnerItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t PartnerItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t PartnerItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.Guid)
  return _internal_guid();
}
inline void PartnerItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void PartnerItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.Guid)
}

// int32 PartnerID = 2;
inline void PartnerItem::clear_partnerid() {
  _impl_.partnerid_ = 0;
}
inline int32_t PartnerItem::_internal_partnerid() const {
  return _impl_.partnerid_;
}
inline int32_t PartnerItem::partnerid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.PartnerID)
  return _internal_partnerid();
}
inline void PartnerItem::_internal_set_partnerid(int32_t value) {
  
  _impl_.partnerid_ = value;
}
inline void PartnerItem::set_partnerid(int32_t value) {
  _internal_set_partnerid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.PartnerID)
}

// int32 StrengthLvl = 3;
inline void PartnerItem::clear_strengthlvl() {
  _impl_.strengthlvl_ = 0;
}
inline int32_t PartnerItem::_internal_strengthlvl() const {
  return _impl_.strengthlvl_;
}
inline int32_t PartnerItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void PartnerItem::_internal_set_strengthlvl(int32_t value) {
  
  _impl_.strengthlvl_ = value;
}
inline void PartnerItem::set_strengthlvl(int32_t value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.StrengthLvl)
}

// int32 RefineLevel = 4;
inline void PartnerItem::clear_refinelevel() {
  _impl_.refinelevel_ = 0;
}
inline int32_t PartnerItem::_internal_refinelevel() const {
  return _impl_.refinelevel_;
}
inline int32_t PartnerItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.RefineLevel)
  return _internal_refinelevel();
}
inline void PartnerItem::_internal_set_refinelevel(int32_t value) {
  
  _impl_.refinelevel_ = value;
}
inline void PartnerItem::set_refinelevel(int32_t value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.RefineLevel)
}

// int32 StarLevel = 5;
inline void PartnerItem::clear_starlevel() {
  _impl_.starlevel_ = 0;
}
inline int32_t PartnerItem::_internal_starlevel() const {
  return _impl_.starlevel_;
}
inline int32_t PartnerItem::starlevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.StarLevel)
  return _internal_starlevel();
}
inline void PartnerItem::_internal_set_starlevel(int32_t value) {
  
  _impl_.starlevel_ = value;
}
inline void PartnerItem::set_starlevel(int32_t value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.StarLevel)
}

// int32 RefineExp = 6;
inline void PartnerItem::clear_refineexp() {
  _impl_.refineexp_ = 0;
}
inline int32_t PartnerItem::_internal_refineexp() const {
  return _impl_.refineexp_;
}
inline int32_t PartnerItem::refineexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.RefineExp)
  return _internal_refineexp();
}
inline void PartnerItem::_internal_set_refineexp(int32_t value) {
  
  _impl_.refineexp_ = value;
}
inline void PartnerItem::set_refineexp(int32_t value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.RefineExp)
}

// int32 StarExp = 7;
inline void PartnerItem::clear_starexp() {
  _impl_.starexp_ = 0;
}
inline int32_t PartnerItem::_internal_starexp() const {
  return _impl_.starexp_;
}
inline int32_t PartnerItem::starexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.StarExp)
  return _internal_starexp();
}
inline void PartnerItem::_internal_set_starexp(int32_t value) {
  
  _impl_.starexp_ = value;
}
inline void PartnerItem::set_starexp(int32_t value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.StarExp)
}

// int32 SetPos = 8;
inline void PartnerItem::clear_setpos() {
  _impl_.setpos_ = 0;
}
inline int32_t PartnerItem::_internal_setpos() const {
  return _impl_.setpos_;
}
inline int32_t PartnerItem::setpos() const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerItem.SetPos)
  return _internal_setpos();
}
inline void PartnerItem::_internal_set_setpos(int32_t value) {
  
  _impl_.setpos_ = value;
}
inline void PartnerItem::set_setpos(int32_t value) {
  _internal_set_setpos(value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerItem.SetPos)
}

// -------------------------------------------------------------------

// PartnerChangeNty

// repeated .symphony.proto.PartnerItem ChangeList = 1;
inline int PartnerChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int PartnerChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void PartnerChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::PartnerItem* PartnerChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.PartnerChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >*
PartnerChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.PartnerChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::PartnerItem& PartnerChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::PartnerItem& PartnerChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::PartnerItem* PartnerChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::PartnerItem* PartnerChangeNty::add_changelist() {
  ::symphony::proto::PartnerItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.PartnerChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >&
PartnerChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.PartnerChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int PartnerChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int PartnerChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void PartnerChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t PartnerChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t PartnerChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.PartnerChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void PartnerChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.PartnerChangeNty.RemoveList)
}
inline void PartnerChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void PartnerChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.PartnerChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
PartnerChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
PartnerChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.PartnerChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
PartnerChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
PartnerChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.PartnerChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// MountItem

// uint64 Guid = 1;
inline void MountItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t MountItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t MountItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.Guid)
  return _internal_guid();
}
inline void MountItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void MountItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.Guid)
}

// int32 MountID = 2;
inline void MountItem::clear_mountid() {
  _impl_.mountid_ = 0;
}
inline int32_t MountItem::_internal_mountid() const {
  return _impl_.mountid_;
}
inline int32_t MountItem::mountid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.MountID)
  return _internal_mountid();
}
inline void MountItem::_internal_set_mountid(int32_t value) {
  
  _impl_.mountid_ = value;
}
inline void MountItem::set_mountid(int32_t value) {
  _internal_set_mountid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.MountID)
}

// int32 StrengthLvl = 3;
inline void MountItem::clear_strengthlvl() {
  _impl_.strengthlvl_ = 0;
}
inline int32_t MountItem::_internal_strengthlvl() const {
  return _impl_.strengthlvl_;
}
inline int32_t MountItem::strengthlvl() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.StrengthLvl)
  return _internal_strengthlvl();
}
inline void MountItem::_internal_set_strengthlvl(int32_t value) {
  
  _impl_.strengthlvl_ = value;
}
inline void MountItem::set_strengthlvl(int32_t value) {
  _internal_set_strengthlvl(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.StrengthLvl)
}

// int32 RefineLevel = 4;
inline void MountItem::clear_refinelevel() {
  _impl_.refinelevel_ = 0;
}
inline int32_t MountItem::_internal_refinelevel() const {
  return _impl_.refinelevel_;
}
inline int32_t MountItem::refinelevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.RefineLevel)
  return _internal_refinelevel();
}
inline void MountItem::_internal_set_refinelevel(int32_t value) {
  
  _impl_.refinelevel_ = value;
}
inline void MountItem::set_refinelevel(int32_t value) {
  _internal_set_refinelevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.RefineLevel)
}

// int32 StarLevel = 5;
inline void MountItem::clear_starlevel() {
  _impl_.starlevel_ = 0;
}
inline int32_t MountItem::_internal_starlevel() const {
  return _impl_.starlevel_;
}
inline int32_t MountItem::starlevel() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.StarLevel)
  return _internal_starlevel();
}
inline void MountItem::_internal_set_starlevel(int32_t value) {
  
  _impl_.starlevel_ = value;
}
inline void MountItem::set_starlevel(int32_t value) {
  _internal_set_starlevel(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.StarLevel)
}

// int32 RefineExp = 6;
inline void MountItem::clear_refineexp() {
  _impl_.refineexp_ = 0;
}
inline int32_t MountItem::_internal_refineexp() const {
  return _impl_.refineexp_;
}
inline int32_t MountItem::refineexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.RefineExp)
  return _internal_refineexp();
}
inline void MountItem::_internal_set_refineexp(int32_t value) {
  
  _impl_.refineexp_ = value;
}
inline void MountItem::set_refineexp(int32_t value) {
  _internal_set_refineexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.RefineExp)
}

// int32 StarExp = 7;
inline void MountItem::clear_starexp() {
  _impl_.starexp_ = 0;
}
inline int32_t MountItem::_internal_starexp() const {
  return _impl_.starexp_;
}
inline int32_t MountItem::starexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.StarExp)
  return _internal_starexp();
}
inline void MountItem::_internal_set_starexp(int32_t value) {
  
  _impl_.starexp_ = value;
}
inline void MountItem::set_starexp(int32_t value) {
  _internal_set_starexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.StarExp)
}

// int32 IsUsing = 8;
inline void MountItem::clear_isusing() {
  _impl_.isusing_ = 0;
}
inline int32_t MountItem::_internal_isusing() const {
  return _impl_.isusing_;
}
inline int32_t MountItem::isusing() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountItem.IsUsing)
  return _internal_isusing();
}
inline void MountItem::_internal_set_isusing(int32_t value) {
  
  _impl_.isusing_ = value;
}
inline void MountItem::set_isusing(int32_t value) {
  _internal_set_isusing(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountItem.IsUsing)
}

// -------------------------------------------------------------------

// MountChangeNty

// repeated .symphony.proto.MountItem ChangeList = 1;
inline int MountChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int MountChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void MountChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::MountItem* MountChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.MountChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >*
MountChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.MountChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::MountItem& MountChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::MountItem& MountChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::MountItem* MountChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::MountItem* MountChangeNty::add_changelist() {
  ::symphony::proto::MountItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.MountChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >&
MountChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.MountChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int MountChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int MountChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void MountChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t MountChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t MountChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.MountChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void MountChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.MountChangeNty.RemoveList)
}
inline void MountChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void MountChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.MountChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MountChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MountChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.MountChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MountChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MountChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.MountChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// MailItem

// uint64 Guid = 1;
inline void MailItem::clear_guid() {
  _impl_.guid_ = uint64_t{0u};
}
inline uint64_t MailItem::_internal_guid() const {
  return _impl_.guid_;
}
inline uint64_t MailItem::guid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.Guid)
  return _internal_guid();
}
inline void MailItem::_internal_set_guid(uint64_t value) {
  
  _impl_.guid_ = value;
}
inline void MailItem::set_guid(uint64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.Guid)
}

// int32 MailType = 2;
inline void MailItem::clear_mailtype() {
  _impl_.mailtype_ = 0;
}
inline int32_t MailItem::_internal_mailtype() const {
  return _impl_.mailtype_;
}
inline int32_t MailItem::mailtype() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.MailType)
  return _internal_mailtype();
}
inline void MailItem::_internal_set_mailtype(int32_t value) {
  
  _impl_.mailtype_ = value;
}
inline void MailItem::set_mailtype(int32_t value) {
  _internal_set_mailtype(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.MailType)
}

// int32 Status = 3;
inline void MailItem::clear_status() {
  _impl_.status_ = 0;
}
inline int32_t MailItem::_internal_status() const {
  return _impl_.status_;
}
inline int32_t MailItem::status() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.Status)
  return _internal_status();
}
inline void MailItem::_internal_set_status(int32_t value) {
  
  _impl_.status_ = value;
}
inline void MailItem::set_status(int32_t value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.Status)
}

// string Title = 4;
inline void MailItem::clear_title() {
  _impl_.title_.ClearToEmpty();
}
inline const std::string& MailItem::title() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.Title)
  return _internal_title();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MailItem::set_title(ArgT0&& arg0, ArgT... args) {
 
 _impl_.title_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.Title)
}
inline std::string* MailItem::mutable_title() {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:symphony.proto.MailItem.Title)
  return _s;
}
inline const std::string& MailItem::_internal_title() const {
  return _impl_.title_.Get();
}
inline void MailItem::_internal_set_title(const std::string& value) {
  
  _impl_.title_.Set(value, GetArenaForAllocation());
}
inline std::string* MailItem::_internal_mutable_title() {
  
  return _impl_.title_.Mutable(GetArenaForAllocation());
}
inline std::string* MailItem::release_title() {
  // @@protoc_insertion_point(field_release:symphony.proto.MailItem.Title)
  return _impl_.title_.Release();
}
inline void MailItem::set_allocated_title(std::string* title) {
  if (title != nullptr) {
    
  } else {
    
  }
  _impl_.title_.SetAllocated(title, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.title_.IsDefault()) {
    _impl_.title_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:symphony.proto.MailItem.Title)
}

// string Content = 5;
inline void MailItem::clear_content() {
  _impl_.content_.ClearToEmpty();
}
inline const std::string& MailItem::content() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.Content)
  return _internal_content();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MailItem::set_content(ArgT0&& arg0, ArgT... args) {
 
 _impl_.content_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.Content)
}
inline std::string* MailItem::mutable_content() {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:symphony.proto.MailItem.Content)
  return _s;
}
inline const std::string& MailItem::_internal_content() const {
  return _impl_.content_.Get();
}
inline void MailItem::_internal_set_content(const std::string& value) {
  
  _impl_.content_.Set(value, GetArenaForAllocation());
}
inline std::string* MailItem::_internal_mutable_content() {
  
  return _impl_.content_.Mutable(GetArenaForAllocation());
}
inline std::string* MailItem::release_content() {
  // @@protoc_insertion_point(field_release:symphony.proto.MailItem.Content)
  return _impl_.content_.Release();
}
inline void MailItem::set_allocated_content(std::string* content) {
  if (content != nullptr) {
    
  } else {
    
  }
  _impl_.content_.SetAllocated(content, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:symphony.proto.MailItem.Content)
}

// string Sender = 6;
inline void MailItem::clear_sender() {
  _impl_.sender_.ClearToEmpty();
}
inline const std::string& MailItem::sender() const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.Sender)
  return _internal_sender();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MailItem::set_sender(ArgT0&& arg0, ArgT... args) {
 
 _impl_.sender_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.Sender)
}
inline std::string* MailItem::mutable_sender() {
  std::string* _s = _internal_mutable_sender();
  // @@protoc_insertion_point(field_mutable:symphony.proto.MailItem.Sender)
  return _s;
}
inline const std::string& MailItem::_internal_sender() const {
  return _impl_.sender_.Get();
}
inline void MailItem::_internal_set_sender(const std::string& value) {
  
  _impl_.sender_.Set(value, GetArenaForAllocation());
}
inline std::string* MailItem::_internal_mutable_sender() {
  
  return _impl_.sender_.Mutable(GetArenaForAllocation());
}
inline std::string* MailItem::release_sender() {
  // @@protoc_insertion_point(field_release:symphony.proto.MailItem.Sender)
  return _impl_.sender_.Release();
}
inline void MailItem::set_allocated_sender(std::string* sender) {
  if (sender != nullptr) {
    
  } else {
    
  }
  _impl_.sender_.SetAllocated(sender, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.sender_.IsDefault()) {
    _impl_.sender_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:symphony.proto.MailItem.Sender)
}

// repeated int32 ItemID = 8;
inline int MailItem::_internal_itemid_size() const {
  return _impl_.itemid_.size();
}
inline int MailItem::itemid_size() const {
  return _internal_itemid_size();
}
inline void MailItem::clear_itemid() {
  _impl_.itemid_.Clear();
}
inline int32_t MailItem::_internal_itemid(int index) const {
  return _impl_.itemid_.Get(index);
}
inline int32_t MailItem::itemid(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.ItemID)
  return _internal_itemid(index);
}
inline void MailItem::set_itemid(int index, int32_t value) {
  _impl_.itemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.ItemID)
}
inline void MailItem::_internal_add_itemid(int32_t value) {
  _impl_.itemid_.Add(value);
}
inline void MailItem::add_itemid(int32_t value) {
  _internal_add_itemid(value);
  // @@protoc_insertion_point(field_add:symphony.proto.MailItem.ItemID)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
MailItem::_internal_itemid() const {
  return _impl_.itemid_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
MailItem::itemid() const {
  // @@protoc_insertion_point(field_list:symphony.proto.MailItem.ItemID)
  return _internal_itemid();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
MailItem::_internal_mutable_itemid() {
  return &_impl_.itemid_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
MailItem::mutable_itemid() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.MailItem.ItemID)
  return _internal_mutable_itemid();
}

// repeated int32 ItemNum = 9;
inline int MailItem::_internal_itemnum_size() const {
  return _impl_.itemnum_.size();
}
inline int MailItem::itemnum_size() const {
  return _internal_itemnum_size();
}
inline void MailItem::clear_itemnum() {
  _impl_.itemnum_.Clear();
}
inline int32_t MailItem::_internal_itemnum(int index) const {
  return _impl_.itemnum_.Get(index);
}
inline int32_t MailItem::itemnum(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailItem.ItemNum)
  return _internal_itemnum(index);
}
inline void MailItem::set_itemnum(int index, int32_t value) {
  _impl_.itemnum_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.MailItem.ItemNum)
}
inline void MailItem::_internal_add_itemnum(int32_t value) {
  _impl_.itemnum_.Add(value);
}
inline void MailItem::add_itemnum(int32_t value) {
  _internal_add_itemnum(value);
  // @@protoc_insertion_point(field_add:symphony.proto.MailItem.ItemNum)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
MailItem::_internal_itemnum() const {
  return _impl_.itemnum_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
MailItem::itemnum() const {
  // @@protoc_insertion_point(field_list:symphony.proto.MailItem.ItemNum)
  return _internal_itemnum();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
MailItem::_internal_mutable_itemnum() {
  return &_impl_.itemnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
MailItem::mutable_itemnum() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.MailItem.ItemNum)
  return _internal_mutable_itemnum();
}

// -------------------------------------------------------------------

// MailChangeNty

// repeated .symphony.proto.MailItem ChangeList = 1;
inline int MailChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int MailChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void MailChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::MailItem* MailChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.MailChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >*
MailChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.MailChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::MailItem& MailChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::MailItem& MailChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::MailItem* MailChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::MailItem* MailChangeNty::add_changelist() {
  ::symphony::proto::MailItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.MailChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >&
MailChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.MailChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int MailChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int MailChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void MailChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t MailChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t MailChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.MailChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void MailChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.MailChangeNty.RemoveList)
}
inline void MailChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void MailChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.MailChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MailChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
MailChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.MailChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MailChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
MailChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.MailChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// TaskItem

// uint32 TaskID = 1;
inline void TaskItem::clear_taskid() {
  _impl_.taskid_ = 0u;
}
inline uint32_t TaskItem::_internal_taskid() const {
  return _impl_.taskid_;
}
inline uint32_t TaskItem::taskid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.TaskItem.TaskID)
  return _internal_taskid();
}
inline void TaskItem::_internal_set_taskid(uint32_t value) {
  
  _impl_.taskid_ = value;
}
inline void TaskItem::set_taskid(uint32_t value) {
  _internal_set_taskid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.TaskItem.TaskID)
}

// -------------------------------------------------------------------

// TaskChangeNty

// repeated .symphony.proto.TaskItem ChangeList = 1;
inline int TaskChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int TaskChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline void TaskChangeNty::clear_changelist() {
  _impl_.changelist_.Clear();
}
inline ::symphony::proto::TaskItem* TaskChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.TaskChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >*
TaskChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.TaskChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::TaskItem& TaskChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::TaskItem& TaskChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.TaskChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::TaskItem* TaskChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::TaskItem* TaskChangeNty::add_changelist() {
  ::symphony::proto::TaskItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.TaskChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >&
TaskChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.TaskChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int TaskChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int TaskChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void TaskChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t TaskChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t TaskChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.TaskChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void TaskChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.TaskChangeNty.RemoveList)
}
inline void TaskChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void TaskChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.TaskChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TaskChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
TaskChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.TaskChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TaskChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
TaskChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.TaskChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// CopyItem

// uint32 CopyID = 1;
inline void CopyItem::clear_copyid() {
  _impl_.copyid_ = 0u;
}
inline uint32_t CopyItem::_internal_copyid() const {
  return _impl_.copyid_;
}
inline uint32_t CopyItem::copyid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CopyItem.CopyID)
  return _internal_copyid();
}
inline void CopyItem::_internal_set_copyid(uint32_t value) {
  
  _impl_.copyid_ = value;
}
inline void CopyItem::set_copyid(uint32_t value) {
  _internal_set_copyid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CopyItem.CopyID)
}

// int32 StarNum = 2;
inline void CopyItem::clear_starnum() {
  _impl_.starnum_ = 0;
}
inline int32_t CopyItem::_internal_starnum() const {
  return _impl_.starnum_;
}
inline int32_t CopyItem::starnum() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CopyItem.StarNum)
  return _internal_starnum();
}
inline void CopyItem::_internal_set_starnum(int32_t value) {
  
  _impl_.starnum_ = value;
}
inline void CopyItem::set_starnum(int32_t value) {
  _internal_set_starnum(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CopyItem.StarNum)
}

// int32 BattleCnt = 3;
inline void CopyItem::clear_battlecnt() {
  _impl_.battlecnt_ = 0;
}
inline int32_t CopyItem::_internal_battlecnt() const {
  return _impl_.battlecnt_;
}
inline int32_t CopyItem::battlecnt() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CopyItem.BattleCnt)
  return _internal_battlecnt();
}
inline void CopyItem::_internal_set_battlecnt(int32_t value) {
  
  _impl_.battlecnt_ = value;
}
inline void CopyItem::set_battlecnt(int32_t value) {
  _internal_set_battlecnt(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CopyItem.BattleCnt)
}

// int32 ResetCnt = 4;
inline void CopyItem::clear_resetcnt() {
  _impl_.resetcnt_ = 0;
}
inline int32_t CopyItem::_internal_resetcnt() const {
  return _impl_.resetcnt_;
}
inline int32_t CopyItem::resetcnt() const {
  // @@protoc_insertion_point(field_get:symphony.proto.CopyItem.ResetCnt)
  return _internal_resetcnt();
}
inline void CopyItem::_internal_set_resetcnt(int32_t value) {
  
  _impl_.resetcnt_ = value;
}
inline void CopyItem::set_resetcnt(int32_t value) {
  _internal_set_resetcnt(value);
  // @@protoc_insertion_point(field_set:symphony.proto.CopyItem.ResetCnt)
}

// -------------------------------------------------------------------

// ChapterItem

// uint32 ChapterID = 1;
inline void ChapterItem::clear_chapterid() {
  _impl_.chapterid_ = 0u;
}
inline uint32_t ChapterItem::_internal_chapterid() const {
  return _impl_.chapterid_;
}
inline uint32_t ChapterItem::chapterid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.ChapterItem.ChapterID)
  return _internal_chapterid();
}
inline void ChapterItem::_internal_set_chapterid(uint32_t value) {
  
  _impl_.chapterid_ = value;
}
inline void ChapterItem::set_chapterid(uint32_t value) {
  _internal_set_chapterid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.ChapterItem.ChapterID)
}

// uint32 StarAward = 2;
inline void ChapterItem::clear_staraward() {
  _impl_.staraward_ = 0u;
}
inline uint32_t ChapterItem::_internal_staraward() const {
  return _impl_.staraward_;
}
inline uint32_t ChapterItem::staraward() const {
  // @@protoc_insertion_point(field_get:symphony.proto.ChapterItem.StarAward)
  return _internal_staraward();
}
inline void ChapterItem::_internal_set_staraward(uint32_t value) {
  
  _impl_.staraward_ = value;
}
inline void ChapterItem::set_staraward(uint32_t value) {
  _internal_set_staraward(value);
  // @@protoc_insertion_point(field_set:symphony.proto.ChapterItem.StarAward)
}

// uint32 SceneAward = 3;
inline void ChapterItem::clear_sceneaward() {
  _impl_.sceneaward_ = 0u;
}
inline uint32_t ChapterItem::_internal_sceneaward() const {
  return _impl_.sceneaward_;
}
inline uint32_t ChapterItem::sceneaward() const {
  // @@protoc_insertion_point(field_get:symphony.proto.ChapterItem.SceneAward)
  return _internal_sceneaward();
}
inline void ChapterItem::_internal_set_sceneaward(uint32_t value) {
  
  _impl_.sceneaward_ = value;
}
inline void ChapterItem::set_sceneaward(uint32_t value) {
  _internal_set_sceneaward(value);
  // @@protoc_insertion_point(field_set:symphony.proto.ChapterItem.SceneAward)
}

// uint32 CopyType = 4;
inline void ChapterItem::clear_copytype() {
  _impl_.copytype_ = 0u;
}
inline uint32_t ChapterItem::_internal_copytype() const {
  return _impl_.copytype_;
}
inline uint32_t ChapterItem::copytype() const {
  // @@protoc_insertion_point(field_get:symphony.proto.ChapterItem.CopyType)
  return _internal_copytype();
}
inline void ChapterItem::_internal_set_copytype(uint32_t value) {
  
  _impl_.copytype_ = value;
}
inline void ChapterItem::set_copytype(uint32_t value) {
  _internal_set_copytype(value);
  // @@protoc_insertion_point(field_set:symphony.proto.ChapterItem.CopyType)
}

// -------------------------------------------------------------------

// ActionItem

// int64 Action = 1;
inline void ActionItem::clear_action() {
  _impl_.action_ = int64_t{0};
}
inline int64_t ActionItem::_internal_action() const {
  return _impl_.action_;
}
inline int64_t ActionItem::action() const {
  // @@protoc_insertion_point(field_get:symphony.proto.ActionItem.Action)
  return _internal_action();
}
inline void ActionItem::_internal_set_action(int64_t value) {
  
  _impl_.action_ = value;
}
inline void ActionItem::set_action(int64_t value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:symphony.proto.ActionItem.Action)
}

// int64 Actime = 2;
inline void ActionItem::clear_actime() {
  _impl_.actime_ = int64_t{0};
}
inline int64_t ActionItem::_internal_actime() const {
  return _impl_.actime_;
}
inline int64_t ActionItem::actime() const {
  // @@protoc_insertion_point(field_get:symphony.proto.ActionItem.Actime)
  return _internal_actime();
}
inline void ActionItem::_internal_set_actime(int64_t value) {
  
  _impl_.actime_ = value;
}
inline void ActionItem::set_actime(int64_t value) {
  _internal_set_actime(value);
  // @@protoc_insertion_point(field_set:symphony.proto.ActionItem.Actime)
}

// -------------------------------------------------------------------

// GuideItem

// int32 Id = 1;
inline void GuideItem::clear_id() {
  _impl_.id_ = 0;
}
inline int32_t GuideItem::_internal_id() const {
  return _impl_.id_;
}
inline int32_t GuideItem::id() const {
  // @@protoc_insertion_point(field_get:symphony.proto.GuideItem.Id)
  return _internal_id();
}
inline void GuideItem::_internal_set_id(int32_t value) {
  
  _impl_.id_ = value;
}
inline void GuideItem::set_id(int32_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:symphony.proto.GuideItem.Id)
}

// -------------------------------------------------------------------

// SkillChangeNty

// repeated .symphony.proto.SkillItem ChangeList = 1;
inline int SkillChangeNty::_internal_changelist_size() const {
  return _impl_.changelist_.size();
}
inline int SkillChangeNty::changelist_size() const {
  return _internal_changelist_size();
}
inline ::symphony::proto::SkillItem* SkillChangeNty::mutable_changelist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.SkillChangeNty.ChangeList)
  return _impl_.changelist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >*
SkillChangeNty::mutable_changelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.SkillChangeNty.ChangeList)
  return &_impl_.changelist_;
}
inline const ::symphony::proto::SkillItem& SkillChangeNty::_internal_changelist(int index) const {
  return _impl_.changelist_.Get(index);
}
inline const ::symphony::proto::SkillItem& SkillChangeNty::changelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.SkillChangeNty.ChangeList)
  return _internal_changelist(index);
}
inline ::symphony::proto::SkillItem* SkillChangeNty::_internal_add_changelist() {
  return _impl_.changelist_.Add();
}
inline ::symphony::proto::SkillItem* SkillChangeNty::add_changelist() {
  ::symphony::proto::SkillItem* _add = _internal_add_changelist();
  // @@protoc_insertion_point(field_add:symphony.proto.SkillChangeNty.ChangeList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >&
SkillChangeNty::changelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.SkillChangeNty.ChangeList)
  return _impl_.changelist_;
}

// repeated uint64 RemoveList = 2;
inline int SkillChangeNty::_internal_removelist_size() const {
  return _impl_.removelist_.size();
}
inline int SkillChangeNty::removelist_size() const {
  return _internal_removelist_size();
}
inline void SkillChangeNty::clear_removelist() {
  _impl_.removelist_.Clear();
}
inline uint64_t SkillChangeNty::_internal_removelist(int index) const {
  return _impl_.removelist_.Get(index);
}
inline uint64_t SkillChangeNty::removelist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.SkillChangeNty.RemoveList)
  return _internal_removelist(index);
}
inline void SkillChangeNty::set_removelist(int index, uint64_t value) {
  _impl_.removelist_.Set(index, value);
  // @@protoc_insertion_point(field_set:symphony.proto.SkillChangeNty.RemoveList)
}
inline void SkillChangeNty::_internal_add_removelist(uint64_t value) {
  _impl_.removelist_.Add(value);
}
inline void SkillChangeNty::add_removelist(uint64_t value) {
  _internal_add_removelist(value);
  // @@protoc_insertion_point(field_add:symphony.proto.SkillChangeNty.RemoveList)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
SkillChangeNty::_internal_removelist() const {
  return _impl_.removelist_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >&
SkillChangeNty::removelist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.SkillChangeNty.RemoveList)
  return _internal_removelist();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
SkillChangeNty::_internal_mutable_removelist() {
  return &_impl_.removelist_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< uint64_t >*
SkillChangeNty::mutable_removelist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.SkillChangeNty.RemoveList)
  return _internal_mutable_removelist();
}

// -------------------------------------------------------------------

// RoleLoginAck

// uint32 RetCode = 1;
inline void RoleLoginAck::clear_retcode() {
  _impl_.retcode_ = 0u;
}
inline uint32_t RoleLoginAck::_internal_retcode() const {
  return _impl_.retcode_;
}
inline uint32_t RoleLoginAck::retcode() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.RetCode)
  return _internal_retcode();
}
inline void RoleLoginAck::_internal_set_retcode(uint32_t value) {
  
  _impl_.retcode_ = value;
}
inline void RoleLoginAck::set_retcode(uint32_t value) {
  _internal_set_retcode(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.RetCode)
}

// uint64 AccountID = 2;
inline void RoleLoginAck::clear_accountid() {
  _impl_.accountid_ = uint64_t{0u};
}
inline uint64_t RoleLoginAck::_internal_accountid() const {
  return _impl_.accountid_;
}
inline uint64_t RoleLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.AccountID)
  return _internal_accountid();
}
inline void RoleLoginAck::_internal_set_accountid(uint64_t value) {
  
  _impl_.accountid_ = value;
}
inline void RoleLoginAck::set_accountid(uint64_t value) {
  _internal_set_accountid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.AccountID)
}

// uint64 RoleID = 3;
inline void RoleLoginAck::clear_roleid() {
  _impl_.roleid_ = uint64_t{0u};
}
inline uint64_t RoleLoginAck::_internal_roleid() const {
  return _impl_.roleid_;
}
inline uint64_t RoleLoginAck::roleid() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.RoleID)
  return _internal_roleid();
}
inline void RoleLoginAck::_internal_set_roleid(uint64_t value) {
  
  _impl_.roleid_ = value;
}
inline void RoleLoginAck::set_roleid(uint64_t value) {
  _internal_set_roleid(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.RoleID)
}

// int32 Carrer = 4;
inline void RoleLoginAck::clear_carrer() {
  _impl_.carrer_ = 0;
}
inline int32_t RoleLoginAck::_internal_carrer() const {
  return _impl_.carrer_;
}
inline int32_t RoleLoginAck::carrer() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.Carrer)
  return _internal_carrer();
}
inline void RoleLoginAck::_internal_set_carrer(int32_t value) {
  
  _impl_.carrer_ = value;
}
inline void RoleLoginAck::set_carrer(int32_t value) {
  _internal_set_carrer(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.Carrer)
}

// int32 Level = 5;
inline void RoleLoginAck::clear_level() {
  _impl_.level_ = 0;
}
inline int32_t RoleLoginAck::_internal_level() const {
  return _impl_.level_;
}
inline int32_t RoleLoginAck::level() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.Level)
  return _internal_level();
}
inline void RoleLoginAck::_internal_set_level(int32_t value) {
  
  _impl_.level_ = value;
}
inline void RoleLoginAck::set_level(int32_t value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.Level)
}

// int64 Exp = 6;
inline void RoleLoginAck::clear_exp() {
  _impl_.exp_ = int64_t{0};
}
inline int64_t RoleLoginAck::_internal_exp() const {
  return _impl_.exp_;
}
inline int64_t RoleLoginAck::exp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.Exp)
  return _internal_exp();
}
inline void RoleLoginAck::_internal_set_exp(int64_t value) {
  
  _impl_.exp_ = value;
}
inline void RoleLoginAck::set_exp(int64_t value) {
  _internal_set_exp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.Exp)
}

// string Name = 7;
inline void RoleLoginAck::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& RoleLoginAck::name() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.Name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RoleLoginAck::set_name(ArgT0&& arg0, ArgT... args) {
 
 _impl_.name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.Name)
}
inline std::string* RoleLoginAck::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.Name)
  return _s;
}
inline const std::string& RoleLoginAck::_internal_name() const {
  return _impl_.name_.Get();
}
inline void RoleLoginAck::_internal_set_name(const std::string& value) {
  
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* RoleLoginAck::_internal_mutable_name() {
  
  return _impl_.name_.Mutable(GetArenaForAllocation());
}
inline std::string* RoleLoginAck::release_name() {
  // @@protoc_insertion_point(field_release:symphony.proto.RoleLoginAck.Name)
  return _impl_.name_.Release();
}
inline void RoleLoginAck::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  _impl_.name_.SetAllocated(name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:symphony.proto.RoleLoginAck.Name)
}

// int32 VipLvl = 8;
inline void RoleLoginAck::clear_viplvl() {
  _impl_.viplvl_ = 0;
}
inline int32_t RoleLoginAck::_internal_viplvl() const {
  return _impl_.viplvl_;
}
inline int32_t RoleLoginAck::viplvl() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.VipLvl)
  return _internal_viplvl();
}
inline void RoleLoginAck::_internal_set_viplvl(int32_t value) {
  
  _impl_.viplvl_ = value;
}
inline void RoleLoginAck::set_viplvl(int32_t value) {
  _internal_set_viplvl(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.VipLvl)
}

// int32 VipExp = 9;
inline void RoleLoginAck::clear_vipexp() {
  _impl_.vipexp_ = 0;
}
inline int32_t RoleLoginAck::_internal_vipexp() const {
  return _impl_.vipexp_;
}
inline int32_t RoleLoginAck::vipexp() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.VipExp)
  return _internal_vipexp();
}
inline void RoleLoginAck::_internal_set_vipexp(int32_t value) {
  
  _impl_.vipexp_ = value;
}
inline void RoleLoginAck::set_vipexp(int32_t value) {
  _internal_set_vipexp(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.VipExp)
}

// int64 FightValue = 10;
inline void RoleLoginAck::clear_fightvalue() {
  _impl_.fightvalue_ = int64_t{0};
}
inline int64_t RoleLoginAck::_internal_fightvalue() const {
  return _impl_.fightvalue_;
}
inline int64_t RoleLoginAck::fightvalue() const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.FightValue)
  return _internal_fightvalue();
}
inline void RoleLoginAck::_internal_set_fightvalue(int64_t value) {
  
  _impl_.fightvalue_ = value;
}
inline void RoleLoginAck::set_fightvalue(int64_t value) {
  _internal_set_fightvalue(value);
  // @@protoc_insertion_point(field_set:symphony.proto.RoleLoginAck.FightValue)
}

// repeated .symphony.proto.ActionItem ActionList = 11;
inline int RoleLoginAck::_internal_actionlist_size() const {
  return _impl_.actionlist_.size();
}
inline int RoleLoginAck::actionlist_size() const {
  return _internal_actionlist_size();
}
inline void RoleLoginAck::clear_actionlist() {
  _impl_.actionlist_.Clear();
}
inline ::symphony::proto::ActionItem* RoleLoginAck::mutable_actionlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.ActionList)
  return _impl_.actionlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ActionItem >*
RoleLoginAck::mutable_actionlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.ActionList)
  return &_impl_.actionlist_;
}
inline const ::symphony::proto::ActionItem& RoleLoginAck::_internal_actionlist(int index) const {
  return _impl_.actionlist_.Get(index);
}
inline const ::symphony::proto::ActionItem& RoleLoginAck::actionlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.ActionList)
  return _internal_actionlist(index);
}
inline ::symphony::proto::ActionItem* RoleLoginAck::_internal_add_actionlist() {
  return _impl_.actionlist_.Add();
}
inline ::symphony::proto::ActionItem* RoleLoginAck::add_actionlist() {
  ::symphony::proto::ActionItem* _add = _internal_add_actionlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.ActionList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ActionItem >&
RoleLoginAck::actionlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.ActionList)
  return _impl_.actionlist_;
}

// repeated .symphony.proto.EquipItem EquipList = 12;
inline int RoleLoginAck::_internal_equiplist_size() const {
  return _impl_.equiplist_.size();
}
inline int RoleLoginAck::equiplist_size() const {
  return _internal_equiplist_size();
}
inline void RoleLoginAck::clear_equiplist() {
  _impl_.equiplist_.Clear();
}
inline ::symphony::proto::EquipItem* RoleLoginAck::mutable_equiplist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.EquipList)
  return _impl_.equiplist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >*
RoleLoginAck::mutable_equiplist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.EquipList)
  return &_impl_.equiplist_;
}
inline const ::symphony::proto::EquipItem& RoleLoginAck::_internal_equiplist(int index) const {
  return _impl_.equiplist_.Get(index);
}
inline const ::symphony::proto::EquipItem& RoleLoginAck::equiplist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.EquipList)
  return _internal_equiplist(index);
}
inline ::symphony::proto::EquipItem* RoleLoginAck::_internal_add_equiplist() {
  return _impl_.equiplist_.Add();
}
inline ::symphony::proto::EquipItem* RoleLoginAck::add_equiplist() {
  ::symphony::proto::EquipItem* _add = _internal_add_equiplist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.EquipList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::EquipItem >&
RoleLoginAck::equiplist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.EquipList)
  return _impl_.equiplist_;
}

// repeated .symphony.proto.GemItem GemList = 13;
inline int RoleLoginAck::_internal_gemlist_size() const {
  return _impl_.gemlist_.size();
}
inline int RoleLoginAck::gemlist_size() const {
  return _internal_gemlist_size();
}
inline void RoleLoginAck::clear_gemlist() {
  _impl_.gemlist_.Clear();
}
inline ::symphony::proto::GemItem* RoleLoginAck::mutable_gemlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.GemList)
  return _impl_.gemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >*
RoleLoginAck::mutable_gemlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.GemList)
  return &_impl_.gemlist_;
}
inline const ::symphony::proto::GemItem& RoleLoginAck::_internal_gemlist(int index) const {
  return _impl_.gemlist_.Get(index);
}
inline const ::symphony::proto::GemItem& RoleLoginAck::gemlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.GemList)
  return _internal_gemlist(index);
}
inline ::symphony::proto::GemItem* RoleLoginAck::_internal_add_gemlist() {
  return _impl_.gemlist_.Add();
}
inline ::symphony::proto::GemItem* RoleLoginAck::add_gemlist() {
  ::symphony::proto::GemItem* _add = _internal_add_gemlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.GemList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::GemItem >&
RoleLoginAck::gemlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.GemList)
  return _impl_.gemlist_;
}

// repeated .symphony.proto.PetItem PetList = 14;
inline int RoleLoginAck::_internal_petlist_size() const {
  return _impl_.petlist_.size();
}
inline int RoleLoginAck::petlist_size() const {
  return _internal_petlist_size();
}
inline void RoleLoginAck::clear_petlist() {
  _impl_.petlist_.Clear();
}
inline ::symphony::proto::PetItem* RoleLoginAck::mutable_petlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.PetList)
  return _impl_.petlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >*
RoleLoginAck::mutable_petlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.PetList)
  return &_impl_.petlist_;
}
inline const ::symphony::proto::PetItem& RoleLoginAck::_internal_petlist(int index) const {
  return _impl_.petlist_.Get(index);
}
inline const ::symphony::proto::PetItem& RoleLoginAck::petlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.PetList)
  return _internal_petlist(index);
}
inline ::symphony::proto::PetItem* RoleLoginAck::_internal_add_petlist() {
  return _impl_.petlist_.Add();
}
inline ::symphony::proto::PetItem* RoleLoginAck::add_petlist() {
  ::symphony::proto::PetItem* _add = _internal_add_petlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.PetList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PetItem >&
RoleLoginAck::petlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.PetList)
  return _impl_.petlist_;
}

// repeated .symphony.proto.PartnerItem PartnerList = 15;
inline int RoleLoginAck::_internal_partnerlist_size() const {
  return _impl_.partnerlist_.size();
}
inline int RoleLoginAck::partnerlist_size() const {
  return _internal_partnerlist_size();
}
inline void RoleLoginAck::clear_partnerlist() {
  _impl_.partnerlist_.Clear();
}
inline ::symphony::proto::PartnerItem* RoleLoginAck::mutable_partnerlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.PartnerList)
  return _impl_.partnerlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >*
RoleLoginAck::mutable_partnerlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.PartnerList)
  return &_impl_.partnerlist_;
}
inline const ::symphony::proto::PartnerItem& RoleLoginAck::_internal_partnerlist(int index) const {
  return _impl_.partnerlist_.Get(index);
}
inline const ::symphony::proto::PartnerItem& RoleLoginAck::partnerlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.PartnerList)
  return _internal_partnerlist(index);
}
inline ::symphony::proto::PartnerItem* RoleLoginAck::_internal_add_partnerlist() {
  return _impl_.partnerlist_.Add();
}
inline ::symphony::proto::PartnerItem* RoleLoginAck::add_partnerlist() {
  ::symphony::proto::PartnerItem* _add = _internal_add_partnerlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.PartnerList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::PartnerItem >&
RoleLoginAck::partnerlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.PartnerList)
  return _impl_.partnerlist_;
}

// repeated .symphony.proto.MountItem MountList = 16;
inline int RoleLoginAck::_internal_mountlist_size() const {
  return _impl_.mountlist_.size();
}
inline int RoleLoginAck::mountlist_size() const {
  return _internal_mountlist_size();
}
inline void RoleLoginAck::clear_mountlist() {
  _impl_.mountlist_.Clear();
}
inline ::symphony::proto::MountItem* RoleLoginAck::mutable_mountlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.MountList)
  return _impl_.mountlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >*
RoleLoginAck::mutable_mountlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.MountList)
  return &_impl_.mountlist_;
}
inline const ::symphony::proto::MountItem& RoleLoginAck::_internal_mountlist(int index) const {
  return _impl_.mountlist_.Get(index);
}
inline const ::symphony::proto::MountItem& RoleLoginAck::mountlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.MountList)
  return _internal_mountlist(index);
}
inline ::symphony::proto::MountItem* RoleLoginAck::_internal_add_mountlist() {
  return _impl_.mountlist_.Add();
}
inline ::symphony::proto::MountItem* RoleLoginAck::add_mountlist() {
  ::symphony::proto::MountItem* _add = _internal_add_mountlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.MountList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MountItem >&
RoleLoginAck::mountlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.MountList)
  return _impl_.mountlist_;
}

// repeated .symphony.proto.BagItem BagItemList = 17;
inline int RoleLoginAck::_internal_bagitemlist_size() const {
  return _impl_.bagitemlist_.size();
}
inline int RoleLoginAck::bagitemlist_size() const {
  return _internal_bagitemlist_size();
}
inline void RoleLoginAck::clear_bagitemlist() {
  _impl_.bagitemlist_.Clear();
}
inline ::symphony::proto::BagItem* RoleLoginAck::mutable_bagitemlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.BagItemList)
  return _impl_.bagitemlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >*
RoleLoginAck::mutable_bagitemlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.BagItemList)
  return &_impl_.bagitemlist_;
}
inline const ::symphony::proto::BagItem& RoleLoginAck::_internal_bagitemlist(int index) const {
  return _impl_.bagitemlist_.Get(index);
}
inline const ::symphony::proto::BagItem& RoleLoginAck::bagitemlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.BagItemList)
  return _internal_bagitemlist(index);
}
inline ::symphony::proto::BagItem* RoleLoginAck::_internal_add_bagitemlist() {
  return _impl_.bagitemlist_.Add();
}
inline ::symphony::proto::BagItem* RoleLoginAck::add_bagitemlist() {
  ::symphony::proto::BagItem* _add = _internal_add_bagitemlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.BagItemList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::BagItem >&
RoleLoginAck::bagitemlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.BagItemList)
  return _impl_.bagitemlist_;
}

// repeated .symphony.proto.MailItem MailList = 18;
inline int RoleLoginAck::_internal_maillist_size() const {
  return _impl_.maillist_.size();
}
inline int RoleLoginAck::maillist_size() const {
  return _internal_maillist_size();
}
inline void RoleLoginAck::clear_maillist() {
  _impl_.maillist_.Clear();
}
inline ::symphony::proto::MailItem* RoleLoginAck::mutable_maillist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.MailList)
  return _impl_.maillist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >*
RoleLoginAck::mutable_maillist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.MailList)
  return &_impl_.maillist_;
}
inline const ::symphony::proto::MailItem& RoleLoginAck::_internal_maillist(int index) const {
  return _impl_.maillist_.Get(index);
}
inline const ::symphony::proto::MailItem& RoleLoginAck::maillist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.MailList)
  return _internal_maillist(index);
}
inline ::symphony::proto::MailItem* RoleLoginAck::_internal_add_maillist() {
  return _impl_.maillist_.Add();
}
inline ::symphony::proto::MailItem* RoleLoginAck::add_maillist() {
  ::symphony::proto::MailItem* _add = _internal_add_maillist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.MailList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::MailItem >&
RoleLoginAck::maillist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.MailList)
  return _impl_.maillist_;
}

// repeated .symphony.proto.TaskItem TaskList = 19;
inline int RoleLoginAck::_internal_tasklist_size() const {
  return _impl_.tasklist_.size();
}
inline int RoleLoginAck::tasklist_size() const {
  return _internal_tasklist_size();
}
inline void RoleLoginAck::clear_tasklist() {
  _impl_.tasklist_.Clear();
}
inline ::symphony::proto::TaskItem* RoleLoginAck::mutable_tasklist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.TaskList)
  return _impl_.tasklist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >*
RoleLoginAck::mutable_tasklist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.TaskList)
  return &_impl_.tasklist_;
}
inline const ::symphony::proto::TaskItem& RoleLoginAck::_internal_tasklist(int index) const {
  return _impl_.tasklist_.Get(index);
}
inline const ::symphony::proto::TaskItem& RoleLoginAck::tasklist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.TaskList)
  return _internal_tasklist(index);
}
inline ::symphony::proto::TaskItem* RoleLoginAck::_internal_add_tasklist() {
  return _impl_.tasklist_.Add();
}
inline ::symphony::proto::TaskItem* RoleLoginAck::add_tasklist() {
  ::symphony::proto::TaskItem* _add = _internal_add_tasklist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.TaskList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::TaskItem >&
RoleLoginAck::tasklist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.TaskList)
  return _impl_.tasklist_;
}

// repeated .symphony.proto.CopyItem CopyList = 20;
inline int RoleLoginAck::_internal_copylist_size() const {
  return _impl_.copylist_.size();
}
inline int RoleLoginAck::copylist_size() const {
  return _internal_copylist_size();
}
inline void RoleLoginAck::clear_copylist() {
  _impl_.copylist_.Clear();
}
inline ::symphony::proto::CopyItem* RoleLoginAck::mutable_copylist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.CopyList)
  return _impl_.copylist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::CopyItem >*
RoleLoginAck::mutable_copylist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.CopyList)
  return &_impl_.copylist_;
}
inline const ::symphony::proto::CopyItem& RoleLoginAck::_internal_copylist(int index) const {
  return _impl_.copylist_.Get(index);
}
inline const ::symphony::proto::CopyItem& RoleLoginAck::copylist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.CopyList)
  return _internal_copylist(index);
}
inline ::symphony::proto::CopyItem* RoleLoginAck::_internal_add_copylist() {
  return _impl_.copylist_.Add();
}
inline ::symphony::proto::CopyItem* RoleLoginAck::add_copylist() {
  ::symphony::proto::CopyItem* _add = _internal_add_copylist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.CopyList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::CopyItem >&
RoleLoginAck::copylist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.CopyList)
  return _impl_.copylist_;
}

// repeated .symphony.proto.ChapterItem ChapterList = 21;
inline int RoleLoginAck::_internal_chapterlist_size() const {
  return _impl_.chapterlist_.size();
}
inline int RoleLoginAck::chapterlist_size() const {
  return _internal_chapterlist_size();
}
inline void RoleLoginAck::clear_chapterlist() {
  _impl_.chapterlist_.Clear();
}
inline ::symphony::proto::ChapterItem* RoleLoginAck::mutable_chapterlist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.ChapterList)
  return _impl_.chapterlist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ChapterItem >*
RoleLoginAck::mutable_chapterlist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.ChapterList)
  return &_impl_.chapterlist_;
}
inline const ::symphony::proto::ChapterItem& RoleLoginAck::_internal_chapterlist(int index) const {
  return _impl_.chapterlist_.Get(index);
}
inline const ::symphony::proto::ChapterItem& RoleLoginAck::chapterlist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.ChapterList)
  return _internal_chapterlist(index);
}
inline ::symphony::proto::ChapterItem* RoleLoginAck::_internal_add_chapterlist() {
  return _impl_.chapterlist_.Add();
}
inline ::symphony::proto::ChapterItem* RoleLoginAck::add_chapterlist() {
  ::symphony::proto::ChapterItem* _add = _internal_add_chapterlist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.ChapterList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::ChapterItem >&
RoleLoginAck::chapterlist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.ChapterList)
  return _impl_.chapterlist_;
}

// repeated .symphony.proto.SkillItem SkillList = 22;
inline int RoleLoginAck::_internal_skilllist_size() const {
  return _impl_.skilllist_.size();
}
inline int RoleLoginAck::skilllist_size() const {
  return _internal_skilllist_size();
}
inline ::symphony::proto::SkillItem* RoleLoginAck::mutable_skilllist(int index) {
  // @@protoc_insertion_point(field_mutable:symphony.proto.RoleLoginAck.SkillList)
  return _impl_.skilllist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >*
RoleLoginAck::mutable_skilllist() {
  // @@protoc_insertion_point(field_mutable_list:symphony.proto.RoleLoginAck.SkillList)
  return &_impl_.skilllist_;
}
inline const ::symphony::proto::SkillItem& RoleLoginAck::_internal_skilllist(int index) const {
  return _impl_.skilllist_.Get(index);
}
inline const ::symphony::proto::SkillItem& RoleLoginAck::skilllist(int index) const {
  // @@protoc_insertion_point(field_get:symphony.proto.RoleLoginAck.SkillList)
  return _internal_skilllist(index);
}
inline ::symphony::proto::SkillItem* RoleLoginAck::_internal_add_skilllist() {
  return _impl_.skilllist_.Add();
}
inline ::symphony::proto::SkillItem* RoleLoginAck::add_skilllist() {
  ::symphony::proto::SkillItem* _add = _internal_add_skilllist();
  // @@protoc_insertion_point(field_add:symphony.proto.RoleLoginAck.SkillList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::symphony::proto::SkillItem >&
RoleLoginAck::skilllist() const {
  // @@protoc_insertion_point(field_list:symphony.proto.RoleLoginAck.SkillList)
  return _impl_.skilllist_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace symphony

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_symphony_2fproto_2fmsg_5flogin_5fclt_5fdata_2eproto
